# Copyright Google Inc 2023 and onwards.
# This file was generated by proto2lkml. Do not modify it.
# Source: googlex/security/malachite/proto/external/udm.proto
### BEGIN googlex/security/malachite/dashboards/lookml/udm/udm_events_preamble.lkml
include: "/chronicle_features.lkml"

### END googlex/security/malachite/dashboards/lookml/udm/udm_events_preamble.lkml 
view: udm_events {
  ### BEGIN googlex/security/malachite/dashboards/lookml/udm/udm_view_preamble.lkml
  sql_table_name: `@{EVENTS}`;;

  dimension: primary_key {
    primary_key: yes
    hidden: yes
    sql: CONCAT(IFNULL(to_hex(${TABLE}.metadata.id), ""), 
                IFNULL(${TABLE}.metadata.product_log_id, ""), 
                IFNULL(${TABLE}.metadata.event_timestamp.seconds,0), 
                IFNULL(${TABLE}.metadata.event_timestamp.nanos,0), 
                IFNULL(${TABLE}.metadata.event_type,0), 
                IFNULL(${TABLE}.metadata.vendor_name,""), 
                IFNULL(${TABLE}.metadata.product_name,""));;
  }

  measure: count {
    description: "Count of UDM events; COUNT(DISTINCT ...) is used."
    type: count
    view_label: "UDM"
  }

  measure: count_all {
    description: "Count of all UDM events; COUNT(DISTINCT ...) is not used."
    type: number
    sql: count(*) ;;
    label: "Count (all)"
    view_label: "UDM"
  }

  filter: time_filter {
    label: "metadata.event_timestamp"
    type: date_time
    view_label: "UDM"
    description: "Filter on the metadata.event_timestamp"
  }

  #-------------------------------------------------------------------------------
  # The following dimensions are here for backwards compatibility.
  # Do not remove because it might break some old dashbaords that depend on it.
  dimension_group: event_timestamp {
      hidden: yes
      type: time
      timeframes: [
        raw,
        time,
        date,
        week,
        month,
        hour,
        minute,
        year
      ]
      datatype: epoch
      sql: ${TABLE}.metadata.event_timestamp.seconds ;;
    }

  dimension: period {
    hidden: yes
    type: string
    description: "The reporting period as selected by the Period Filter. Values - 'This Period' and 'Previous Period'.
    Apply Filter 'This Period' to get values from current period."
    sql:
      CASE
        WHEN {% date_start period_filter %} is not null AND {% date_end period_filter %} is not null /* date ranges or in the past x days */
          THEN
            CASE
              WHEN ${event_timestamp_raw} >= UNIX_SECONDS({% date_start period_filter %})
                AND ${event_timestamp_raw} <= UNIX_SECONDS({% date_end period_filter %})
                THEN 'This Period'
              WHEN ${event_timestamp_raw} >= UNIX_SECONDS(TIMESTAMP_ADD({% date_start period_filter %}, INTERVAL 1 * (TIMESTAMP_DIFF({% date_start period_filter %},{% date_end period_filter %}, DAY))  DAY))
                AND ${event_timestamp_raw} <= UNIX_SECONDS(TIMESTAMP_ADD({% date_start period_filter %}, INTERVAL -1 DAY))
                THEN 'Previous Period'
            END
        END ;;
  }

  dimension: domain {
    hidden: yes
    type: string
    sql: REGEXP_EXTRACT(COALESCE(${TABLE}.network.dns.questions[SAFE_OFFSET(0)].name, ${TABLE}.target.hostname), r"^(?:[a-zA-Z0-9-]+\.)*([a-zA-Z0-9-]+\.[a-zA-Z0-9-]*[a-zA-Z-][a-zA-Z0-9-]*)$");;
  }

  dimension: asset {
    hidden: yes
    type: string
    label: "Asset"
    sql: COALESCE(${TABLE}.principal.hostname, ${TABLE}.principal.ip[SAFE_OFFSET(0)]) ;;
  }

  dimension: full_domain {
    hidden: yes
    type: string
    sql: COALESCE(${TABLE}.network.dns.questions[SAFE_OFFSET(0)].name, ${TABLE}.target.hostname);;
  }

  # This does not even exist in BQ, maybe it used to exist.
  dimension_group: _partitiondate {
    hidden: yes
    type: time
    timeframes: [
      raw,
      date,
      week,
      month,
      quarter,
      year
    ]
    convert_tz: no
    datatype: date
    sql: ${TABLE}.hour_time_bucket ;;
  }

  dimension_group: _partitiontime {
    hidden: yes
    type: time
    timeframes: [
      raw,
      date,
      week,
      month,
      quarter,
      year
    ]
    convert_tz: no
    datatype: date
    sql: ${TABLE}.hour_time_bucket ;;
  }

  dimension_group: hour_time_bucket {
    hidden: yes
    type: time
    timeframes: [
      raw,
      time,
      date,
      week,
      month,
      quarter,
      year
    ]
    sql: ${TABLE}.hour_time_bucket ;;
  }

  dimension: prevalence {
    hidden: yes
    type: number
    sql: COALESCE(${TABLE}.principal.hostname}, ${TABLE}.principal.ip}) ;;
  }

  #-------------------------------------------------------------------------------

  ### END googlex/security/malachite/dashboards/lookml/udm/udm_view_preamble.lkml 
  filter: ip_grouped_field_filter {
    label: "ip"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "IP address fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events__principal__ip.udm_events__principal__ip} {%endcondition%} or 
{%condition%}${udm_events__src__ip.udm_events__src__ip} {%endcondition%} or 
{%condition%}${udm_events__target__ip.udm_events__target__ip} {%endcondition%} or 
{%condition%}${udm_events__observer__ip.udm_events__observer__ip} {%endcondition%} or 
{%condition%}${udm_events__intermediary__ip.udm_events__intermediary__ip} {%endcondition%} or 
{%condition%}${udm_events.principal__artifact__ip} {%endcondition%} or 
{%condition%}${udm_events.target__artifact__ip} {%endcondition%} or 
{%condition%}${udm_events__principal__asset__ip.udm_events__principal__asset__ip} {%endcondition%} or 
{%condition%}${udm_events__src__asset__ip.udm_events__src__asset__ip} {%endcondition%} or 
{%condition%}${udm_events__target__asset__ip.udm_events__target__asset__ip} {%endcondition%}
;;
  } # ip

  filter: domain_grouped_field_filter {
    label: "domain"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "Domain fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events.network__dns_domain} {%endcondition%} or 
{%condition%}${udm_events__network__dns__questions.name} {%endcondition%} or 
{%condition%}${udm_events.principal__administrative_domain} {%endcondition%} or 
{%condition%}${udm_events.target__administrative_domain} {%endcondition%} or 
{%condition%}${udm_events__about.administrative_domain} {%endcondition%} or 
{%condition%}${udm_events.target__hostname} {%endcondition%} or 
{%condition%}${udm_events.target__asset__hostname} {%endcondition%} or 
{%condition%}${udm_events.principal__asset__network_domain} {%endcondition%} or 
{%condition%}${udm_events.target__asset__network_domain} {%endcondition%} or 
{%condition%}${udm_events__about.asset__network_domain} {%endcondition%}
;;
  } # domain

  filter: hostname_grouped_field_filter {
    label: "hostname"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "Hostname fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events.principal__hostname} {%endcondition%} or 
{%condition%}${udm_events.src__hostname} {%endcondition%} or 
{%condition%}${udm_events.target__hostname} {%endcondition%} or 
{%condition%}${udm_events__intermediary.hostname} {%endcondition%} or 
{%condition%}${udm_events.observer__hostname} {%endcondition%} or 
{%condition%}${udm_events.principal__asset__hostname} {%endcondition%} or 
{%condition%}${udm_events.src__asset__hostname} {%endcondition%} or 
{%condition%}${udm_events.target__asset__hostname} {%endcondition%}
;;
  } # hostname

  filter: user_grouped_field_filter {
    label: "user"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "User ID fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events.principal__user__userid} {%endcondition%} or 
{%condition%}${udm_events.src__user__userid} {%endcondition%} or 
{%condition%}${udm_events.target__user__userid} {%endcondition%} or 
{%condition%}${udm_events.observer__user__userid} {%endcondition%} or 
{%condition%}${udm_events__about.user__userid} {%endcondition%} or 
{%condition%}${udm_events.principal__user__windows_sid} {%endcondition%} or 
{%condition%}${udm_events.target__user__windows_sid} {%endcondition%} or 
{%condition%}${udm_events.principal__user__user_display_name} {%endcondition%} or 
{%condition%}${udm_events.target__user__user_display_name} {%endcondition%}
;;
  } # user

  filter: email_grouped_field_filter {
    label: "email"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "Email address fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events__principal__user__email_addresses.udm_events__principal__user__email_addresses} {%endcondition%} or 
{%condition%}${udm_events__target__user__email_addresses.udm_events__target__user__email_addresses} {%endcondition%} or 
{%condition%}${udm_events__intermediary__user__email_addresses.udm_events__intermediary__user__email_addresses} {%endcondition%} or 
{%condition%}${udm_events__security_result__about__user__email_addresses.udm_events__security_result__about__user__email_addresses} {%endcondition%} or 
{%condition%}${udm_events.network__email__from} {%endcondition%} or 
{%condition%}${udm_events__network__email__to.udm_events__network__email__to} {%endcondition%}
;;
  } # email

  filter: file_path_grouped_field_filter {
    label: "file_path"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "File path fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events.target__file__full_path} {%endcondition%} or 
{%condition%}${udm_events.principal__process__file__full_path} {%endcondition%} or 
{%condition%}${udm_events.target__process__file__full_path} {%endcondition%}
;;
  } # file_path

  filter: hash_grouped_field_filter {
    label: "hash"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "File hash fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events.principal__process__file__md5} {%endcondition%} or 
{%condition%}${udm_events.target__process__file__md5} {%endcondition%} or 
{%condition%}${udm_events.principal__process__file__sha1} {%endcondition%} or 
{%condition%}${udm_events.target__process__file__sha1} {%endcondition%} or 
{%condition%}${udm_events.principal__process__file__sha256} {%endcondition%} or 
{%condition%}${udm_events.target__process__file__sha256} {%endcondition%} or 
{%condition%}${udm_events.target__file__md5} {%endcondition%} or 
{%condition%}${udm_events.target__file__sha1} {%endcondition%} or 
{%condition%}${udm_events.target__file__sha256} {%endcondition%} or 
{%condition%}${udm_events__about.file__md5} {%endcondition%} or 
{%condition%}${udm_events__about.file__sha256} {%endcondition%} or 
{%condition%}${udm_events__about.file__sha1} {%endcondition%} or 
{%condition%}${udm_events__security_result.about__file__sha256} {%endcondition%}
;;
  } # hash

  filter: process_id_grouped_field_filter {
    label: "process_id"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "Process ID fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events.principal__process__pid} {%endcondition%} or 
{%condition%}${udm_events.target__process__pid} {%endcondition%} or 
{%condition%}${udm_events.principal__process__product_specific_process_id} {%endcondition%} or 
{%condition%}${udm_events.target__process__product_specific_process_id} {%endcondition%}
;;
  } # process_id

  filter: namespace_grouped_field_filter {
    label: "namespace"
    group_label: "Grouped Fields"
    view_label: "UDM"
    description: "Namespace fields. Grouped Fields filter based on multiple UDM fields."
    sql:  {%condition%} ${udm_events.principal__namespace} {%endcondition%} or 
{%condition%}${udm_events.src__namespace} {%endcondition%} or 
{%condition%}${udm_events.target__namespace} {%endcondition%}
;;
  } # namespace

  dimension: about {
    hidden: yes
  }  # dimension about

  dimension: additional {
    hidden: yes
  }  # dimension additional

  dimension: additional__fields {
    hidden: yes
  }  # dimension additional__fields

  dimension: extensions {
    hidden: yes
  }  # dimension extensions

  dimension: extensions__auth {
    hidden: yes
  }  # dimension extensions__auth

  dimension: extensions__auth__auth_details {
    type: string
    sql: ${TABLE}.extensions.auth.auth_details ;;
    group_label: "extensions"
    label: "extensions.auth.auth_details"
    view_label: "UDM"
    description: "The vendor defined details of the authentication."
  }  # dimension extensions__auth__auth_details

  dimension: extensions__auth__mechanism {
    hidden: yes
  }  # dimension extensions__auth__mechanism

  dimension: extensions__auth__mechanism_enum_name {
    hidden: yes
  }  # dimension extensions__auth__mechanism_enum_name

  dimension: extensions__auth__type {
    type: number
    sql: ${TABLE}.extensions.auth.type ;;
    group_label: "extensions"
    label: "extensions.auth.type"
    view_label: "UDM"
    description: "The type of authentication."
  }  # dimension extensions__auth__type

  dimension: extensions__auth__type_enum_name {
    type: string
    suggestions: ["AUTHTYPE_UNSPECIFIED", "MACHINE", "PHYSICAL", "SSO", "TACACS", "VPN"]
    sql: CASE ${TABLE}.extensions.auth.type WHEN 0 THEN 'AUTHTYPE_UNSPECIFIED' WHEN 1 THEN 'MACHINE' WHEN 2 THEN 'SSO' WHEN 3 THEN 'VPN' WHEN 4 THEN 'PHYSICAL' WHEN 5 THEN 'TACACS' END ;;
    group_label: "extensions"
    label: "extensions.auth.type_enum_name"
    view_label: "UDM"
    description: "The type of authentication."
  }  # dimension extensions__auth__type_enum_name

  dimension: extensions__vulns {
    hidden: yes
  }  # dimension extensions__vulns

  dimension: extensions__vulns__vulnerabilities {
    hidden: yes
  }  # dimension extensions__vulns__vulnerabilities

  dimension: intermediary {
    hidden: yes
  }  # dimension intermediary

  dimension: metadata {
    hidden: yes
  }  # dimension metadata

  dimension: metadata__base_labels {
    hidden: yes
  }  # dimension metadata__base_labels

  dimension: metadata__base_labels__ingestion_kv_labels {
    hidden: yes
  }  # dimension metadata__base_labels__ingestion_kv_labels

  dimension: metadata__base_labels__log_types {
    hidden: yes
  }  # dimension metadata__base_labels__log_types

  dimension: metadata__base_labels__namespaces {
    hidden: yes
  }  # dimension metadata__base_labels__namespaces

  dimension_group: metadata__collected_timestamp {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.metadata.collected_timestamp.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.metadata.collected_timestamp.nanos, 0) / 1000) as INT64)) ;;
    group_label: "metadata"
    label: "metadata.collected_timestamp"
    view_label: "UDM"
    description: "The GMT timestamp when the event was collected by the vendor's local collection infrastructure."
  }  # dimension metadata__collected_timestamp

  dimension: metadata__description {
    type: string
    sql: ${TABLE}.metadata.description ;;
    group_label: "metadata"
    label: "metadata.description"
    view_label: "UDM"
    description: "A human-readable unparsable description of the event."
  }  # dimension metadata__description

  dimension: metadata__enrichment_labels {
    hidden: yes
  }  # dimension metadata__enrichment_labels

  dimension: metadata__enrichment_labels__ingestion_kv_labels {
    hidden: yes
  }  # dimension metadata__enrichment_labels__ingestion_kv_labels

  dimension: metadata__enrichment_labels__log_types {
    hidden: yes
  }  # dimension metadata__enrichment_labels__log_types

  dimension: metadata__enrichment_labels__namespaces {
    hidden: yes
  }  # dimension metadata__enrichment_labels__namespaces

  dimension: metadata__enrichment_state {
    type: number
    sql: ${TABLE}.metadata.enrichment_state ;;
    group_label: "metadata"
    label: "metadata.enrichment_state"
    view_label: "UDM"
    description: "The enrichment state."
  }  # dimension metadata__enrichment_state

  dimension: metadata__enrichment_state_enum_name {
    type: string
    suggestions: ["ENRICHED", "ENRICHMENT_STATE_UNSPECIFIED", "UNENRICHED"]
    sql: CASE ${TABLE}.metadata.enrichment_state WHEN 0 THEN 'ENRICHMENT_STATE_UNSPECIFIED' WHEN 1 THEN 'ENRICHED' WHEN 2 THEN 'UNENRICHED' END ;;
    group_label: "metadata"
    label: "metadata.enrichment_state_enum_name"
    view_label: "UDM"
    description: "The enrichment state."
  }  # dimension metadata__enrichment_state_enum_name

  dimension_group: metadata__event_timestamp {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.metadata.event_timestamp.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.metadata.event_timestamp.nanos, 0) / 1000) as INT64)) ;;
    group_label: "metadata"
    label: "metadata.event_timestamp"
    view_label: "UDM"
    description: "The GMT timestamp when the event was generated."
  }  # dimension metadata__event_timestamp

  dimension: metadata__event_type {
    type: number
    sql: ${TABLE}.metadata.event_type ;;
    group_label: "metadata"
    label: "metadata.event_type"
    view_label: "UDM"
    description: "The event type. If an event has multiple possible types, this specifies the most specific type."
  }  # dimension metadata__event_type

  dimension: metadata__event_type_enum_name {
    type: string
    suggestions: ["ANALYST_ADD_COMMENT", "ANALYST_UPDATE_PRIORITY", "ANALYST_UPDATE_REASON", "ANALYST_UPDATE_REPUTATION", "ANALYST_UPDATE_RISK_SCORE", "ANALYST_UPDATE_ROOT_CAUSE", "ANALYST_UPDATE_SEVERITY_SCORE", "ANALYST_UPDATE_STATUS", "ANALYST_UPDATE_VERDICT", "DEVICE_CONFIG_UPDATE", "DEVICE_FIRMWARE_UPDATE", "DEVICE_PROGRAM_DOWNLOAD", "DEVICE_PROGRAM_UPLOAD", "EMAIL_TRANSACTION", "EMAIL_UNCATEGORIZED", "EMAIL_URL_CLICK", "EVENTTYPE_UNSPECIFIED", "FILE_COPY", "FILE_CREATION", "FILE_DELETION", "FILE_MODIFICATION", "FILE_MOVE", "FILE_OPEN", "FILE_READ", "FILE_SYNC", "FILE_UNCATEGORIZED", "GENERIC_EVENT", "GROUP_CREATION", "GROUP_DELETION", "GROUP_MODIFICATION", "GROUP_UNCATEGORIZED", "MUTEX_CREATION", "MUTEX_UNCATEGORIZED", "NETWORK_CONNECTION", "NETWORK_DHCP", "NETWORK_DNS", "NETWORK_FLOW", "NETWORK_FTP", "NETWORK_HTTP", "NETWORK_SMTP", "NETWORK_UNCATEGORIZED", "PROCESS_INJECTION", "PROCESS_LAUNCH", "PROCESS_MODULE_LOAD", "PROCESS_OPEN", "PROCESS_PRIVILEGE_ESCALATION", "PROCESS_TERMINATION", "PROCESS_UNCATEGORIZED", "REGISTRY_CREATION", "REGISTRY_DELETION", "REGISTRY_MODIFICATION", "REGISTRY_UNCATEGORIZED", "RESOURCE_CREATION", "RESOURCE_DELETION", "RESOURCE_PERMISSIONS_CHANGE", "RESOURCE_READ", "RESOURCE_WRITTEN", "SCAN_FILE", "SCAN_HOST", "SCAN_NETWORK", "SCAN_PROCESS", "SCAN_PROCESS_BEHAVIORS", "SCAN_UNCATEGORIZED", "SCAN_VULN_HOST", "SCAN_VULN_NETWORK", "SCHEDULED_TASK_CREATION", "SCHEDULED_TASK_DELETION", "SCHEDULED_TASK_DISABLE", "SCHEDULED_TASK_ENABLE", "SCHEDULED_TASK_MODIFICATION", "SCHEDULED_TASK_UNCATEGORIZED", "SERVICE_CREATION", "SERVICE_DELETION", "SERVICE_MODIFICATION", "SERVICE_START", "SERVICE_STOP", "SERVICE_UNSPECIFIED", "SETTING_CREATION", "SETTING_DELETION", "SETTING_MODIFICATION", "SETTING_UNCATEGORIZED", "STATUS_HEARTBEAT", "STATUS_SHUTDOWN", "STATUS_STARTUP", "STATUS_UNCATEGORIZED", "STATUS_UPDATE", "SYSTEM_AUDIT_LOG_UNCATEGORIZED", "SYSTEM_AUDIT_LOG_WIPE", "USER_BADGE_IN", "USER_CHANGE_PASSWORD", "USER_CHANGE_PERMISSIONS", "USER_COMMUNICATION", "USER_CREATION", "USER_DELETION", "USER_LOGIN", "USER_LOGOUT", "USER_RESOURCE_ACCESS", "USER_RESOURCE_CREATION", "USER_RESOURCE_DELETION", "USER_RESOURCE_UPDATE_CONTENT", "USER_RESOURCE_UPDATE_PERMISSIONS", "USER_STATS", "USER_UNCATEGORIZED"]
    sql: CASE ${TABLE}.metadata.event_type WHEN 0 THEN 'EVENTTYPE_UNSPECIFIED' WHEN 10000 THEN 'PROCESS_UNCATEGORIZED' WHEN 10001 THEN 'PROCESS_LAUNCH' WHEN 10002 THEN 'PROCESS_INJECTION' WHEN 10003 THEN 'PROCESS_PRIVILEGE_ESCALATION' WHEN 10004 THEN 'PROCESS_TERMINATION' WHEN 10005 THEN 'PROCESS_OPEN' WHEN 10006 THEN 'PROCESS_MODULE_LOAD' WHEN 11000 THEN 'REGISTRY_UNCATEGORIZED' WHEN 11001 THEN 'REGISTRY_CREATION' WHEN 11002 THEN 'REGISTRY_MODIFICATION' WHEN 11003 THEN 'REGISTRY_DELETION' WHEN 12000 THEN 'SETTING_UNCATEGORIZED' WHEN 12001 THEN 'SETTING_CREATION' WHEN 12002 THEN 'SETTING_MODIFICATION' WHEN 12003 THEN 'SETTING_DELETION' WHEN 13000 THEN 'MUTEX_UNCATEGORIZED' WHEN 13001 THEN 'MUTEX_CREATION' WHEN 14000 THEN 'FILE_UNCATEGORIZED' WHEN 14001 THEN 'FILE_CREATION' WHEN 14002 THEN 'FILE_DELETION' WHEN 14003 THEN 'FILE_MODIFICATION' WHEN 14004 THEN 'FILE_READ' WHEN 14005 THEN 'FILE_COPY' WHEN 14006 THEN 'FILE_OPEN' WHEN 14007 THEN 'FILE_MOVE' WHEN 14008 THEN 'FILE_SYNC' WHEN 15000 THEN 'USER_UNCATEGORIZED' WHEN 15001 THEN 'USER_LOGIN' WHEN 15002 THEN 'USER_LOGOUT' WHEN 15003 THEN 'USER_CREATION' WHEN 15004 THEN 'USER_CHANGE_PASSWORD' WHEN 15005 THEN 'USER_CHANGE_PERMISSIONS' WHEN 15006 THEN 'USER_STATS' WHEN 15007 THEN 'USER_BADGE_IN' WHEN 15008 THEN 'USER_DELETION' WHEN 15009 THEN 'USER_RESOURCE_CREATION' WHEN 15010 THEN 'USER_RESOURCE_UPDATE_CONTENT' WHEN 15011 THEN 'USER_RESOURCE_UPDATE_PERMISSIONS' WHEN 15012 THEN 'USER_COMMUNICATION' WHEN 15013 THEN 'USER_RESOURCE_ACCESS' WHEN 15014 THEN 'USER_RESOURCE_DELETION' WHEN 23000 THEN 'GROUP_UNCATEGORIZED' WHEN 23001 THEN 'GROUP_CREATION' WHEN 23002 THEN 'GROUP_DELETION' WHEN 23003 THEN 'GROUP_MODIFICATION' WHEN 19000 THEN 'EMAIL_UNCATEGORIZED' WHEN 19001 THEN 'EMAIL_TRANSACTION' WHEN 19002 THEN 'EMAIL_URL_CLICK' WHEN 16000 THEN 'NETWORK_UNCATEGORIZED' WHEN 16001 THEN 'NETWORK_FLOW' WHEN 16002 THEN 'NETWORK_CONNECTION' WHEN 16003 THEN 'NETWORK_FTP' WHEN 16004 THEN 'NETWORK_DHCP' WHEN 16005 THEN 'NETWORK_DNS' WHEN 16006 THEN 'NETWORK_HTTP' WHEN 16007 THEN 'NETWORK_SMTP' WHEN 17000 THEN 'STATUS_UNCATEGORIZED' WHEN 17001 THEN 'STATUS_HEARTBEAT' WHEN 17002 THEN 'STATUS_STARTUP' WHEN 17003 THEN 'STATUS_SHUTDOWN' WHEN 17004 THEN 'STATUS_UPDATE' WHEN 18000 THEN 'SCAN_UNCATEGORIZED' WHEN 18001 THEN 'SCAN_FILE' WHEN 18002 THEN 'SCAN_PROCESS_BEHAVIORS' WHEN 18003 THEN 'SCAN_PROCESS' WHEN 18004 THEN 'SCAN_HOST' WHEN 18005 THEN 'SCAN_VULN_HOST' WHEN 18006 THEN 'SCAN_VULN_NETWORK' WHEN 18007 THEN 'SCAN_NETWORK' WHEN 20000 THEN 'SCHEDULED_TASK_UNCATEGORIZED' WHEN 20001 THEN 'SCHEDULED_TASK_CREATION' WHEN 20002 THEN 'SCHEDULED_TASK_DELETION' WHEN 20003 THEN 'SCHEDULED_TASK_ENABLE' WHEN 20004 THEN 'SCHEDULED_TASK_DISABLE' WHEN 20005 THEN 'SCHEDULED_TASK_MODIFICATION' WHEN 21000 THEN 'SYSTEM_AUDIT_LOG_UNCATEGORIZED' WHEN 21001 THEN 'SYSTEM_AUDIT_LOG_WIPE' WHEN 22000 THEN 'SERVICE_UNSPECIFIED' WHEN 22001 THEN 'SERVICE_CREATION' WHEN 22002 THEN 'SERVICE_DELETION' WHEN 22003 THEN 'SERVICE_START' WHEN 22004 THEN 'SERVICE_STOP' WHEN 22005 THEN 'SERVICE_MODIFICATION' WHEN 100000 THEN 'GENERIC_EVENT' WHEN 1 THEN 'RESOURCE_CREATION' WHEN 2 THEN 'RESOURCE_DELETION' WHEN 3 THEN 'RESOURCE_PERMISSIONS_CHANGE' WHEN 4 THEN 'RESOURCE_READ' WHEN 5 THEN 'RESOURCE_WRITTEN' WHEN 25000 THEN 'DEVICE_FIRMWARE_UPDATE' WHEN 25001 THEN 'DEVICE_CONFIG_UPDATE' WHEN 25002 THEN 'DEVICE_PROGRAM_UPLOAD' WHEN 25003 THEN 'DEVICE_PROGRAM_DOWNLOAD' WHEN 24000 THEN 'ANALYST_UPDATE_VERDICT' WHEN 24001 THEN 'ANALYST_UPDATE_REPUTATION' WHEN 24002 THEN 'ANALYST_UPDATE_SEVERITY_SCORE' WHEN 24007 THEN 'ANALYST_UPDATE_STATUS' WHEN 24008 THEN 'ANALYST_ADD_COMMENT' WHEN 24009 THEN 'ANALYST_UPDATE_PRIORITY' WHEN 24010 THEN 'ANALYST_UPDATE_ROOT_CAUSE' WHEN 24011 THEN 'ANALYST_UPDATE_REASON' WHEN 24012 THEN 'ANALYST_UPDATE_RISK_SCORE' END ;;
    group_label: "metadata"
    label: "metadata.event_type_enum_name"
    view_label: "UDM"
    description: "The event type. If an event has multiple possible types, this specifies the most specific type."
  }  # dimension metadata__event_type_enum_name

  dimension: metadata__id {
    type: string
    sql: ${TABLE}.metadata.id ;;
    group_label: "metadata"
    label: "metadata.id"
    view_label: "UDM"
    description: "ID of the UDM event. Can be used for raw and normalized event retrieval."
  }  # dimension metadata__id

  dimension_group: metadata__ingested_timestamp {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.metadata.ingested_timestamp.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.metadata.ingested_timestamp.nanos, 0) / 1000) as INT64)) ;;
    group_label: "metadata"
    label: "metadata.ingested_timestamp"
    view_label: "UDM"
    description: "The GMT timestamp when the event was ingested (received) by Chronicle."
  }  # dimension metadata__ingested_timestamp

  dimension: metadata__ingestion_labels {
    hidden: yes
  }  # dimension metadata__ingestion_labels

  dimension: metadata__log_type {
    type: string
    sql: ${TABLE}.metadata.log_type ;;
    group_label: "metadata"
    label: "metadata.log_type"
    view_label: "UDM"
    description: "The string value of log type."
  }  # dimension metadata__log_type

  dimension: metadata__product_deployment_id {
    type: string
    sql: ${TABLE}.metadata.product_deployment_id ;;
    group_label: "metadata"
    label: "metadata.product_deployment_id"
    view_label: "UDM"
    description: "The deployment identifier assigned by the vendor for a product deployment."
  }  # dimension metadata__product_deployment_id

  dimension: metadata__product_event_type {
    type: string
    sql: ${TABLE}.metadata.product_event_type ;;
    group_label: "metadata"
    label: "metadata.product_event_type"
    view_label: "UDM"
    description: "A short, descriptive, human-readable, product-specific event name or type (e.g. \"Scanned X\", \"User account created\", \"process_start\")."
  }  # dimension metadata__product_event_type

  dimension: metadata__product_log_id {
    type: string
    sql: ${TABLE}.metadata.product_log_id ;;
    group_label: "metadata"
    label: "metadata.product_log_id"
    view_label: "UDM"
    description: "A vendor-specific event identifier to uniquely identify the event (e.g. a GUID)."
  }  # dimension metadata__product_log_id

  dimension: metadata__product_name {
    type: string
    sql: ${TABLE}.metadata.product_name ;;
    group_label: "metadata"
    label: "metadata.product_name"
    view_label: "UDM"
    description: "The name of the product."
  }  # dimension metadata__product_name

  dimension: metadata__product_version {
    type: string
    sql: ${TABLE}.metadata.product_version ;;
    group_label: "metadata"
    label: "metadata.product_version"
    view_label: "UDM"
    description: "The version of the product."
  }  # dimension metadata__product_version

  dimension: metadata__tags {
    hidden: yes
  }  # dimension metadata__tags

  dimension: metadata__tags__data_tap_config_name {
    hidden: yes
  }  # dimension metadata__tags__data_tap_config_name

  dimension: metadata__tags__tenant_id {
    hidden: yes
  }  # dimension metadata__tags__tenant_id

  dimension: metadata__url_back_to_product {
    type: string
    sql: ${TABLE}.metadata.url_back_to_product ;;
    group_label: "metadata"
    label: "metadata.url_back_to_product"
    view_label: "UDM"
    description: "A URL that takes the user to the source product console for this event."
  }  # dimension metadata__url_back_to_product

  dimension: metadata__vendor_name {
    type: string
    sql: ${TABLE}.metadata.vendor_name ;;
    group_label: "metadata"
    label: "metadata.vendor_name"
    view_label: "UDM"
    description: "The name of the product vendor."
  }  # dimension metadata__vendor_name

  dimension: network {
    hidden: yes
  }  # dimension network

  dimension: network__application_protocol {
    type: number
    sql: ${TABLE}.network.application_protocol ;;
    group_label: "network"
    label: "network.application_protocol"
    view_label: "UDM"
    description: "The application protocol."
  }  # dimension network__application_protocol

  dimension: network__application_protocol_enum_name {
    type: string
    suggestions: ["AFP", "AMQP", "APPC", "ATOM", "BEEP", "BITCOIN", "BIT_TORRENT", "CFDP", "CIP", "COAP", "COTP", "DCERPC", "DDS", "DEVICE_NET", "DHCP", "DICOM", "DNP3", "DNS", "ENRP", "E_DONKEY", "FAST_TRACK", "FINGER", "FREENET", "FTAM", "GOOSE", "GOPHER", "GRPC", "H323", "HL7", "HTTP", "HTTPS", "IEC104", "IRCP", "KADEMLIA", "KRB5", "LDAP", "LPD", "MIME", "MMS", "MODBUS", "MQTT", "NETCONF", "NFS", "NIS", "NNTP", "NTCIP", "NTP", "OSCAR", "PNRP", "PTP", "QUIC", "RDP", "RELP", "RIP", "RLOGIN", "RPC", "RTMP", "RTP", "RTPS", "RTSP", "SAP", "SDP", "SIP", "SLP", "SMB", "SMTP", "SNMP", "SNTP", "SSH", "SSMS", "STYX", "SV", "TCAP", "TDS", "TOR", "TSP", "UNKNOWN_APPLICATION_PROTOCOL", "VTP", "WEB_DAV", "WHOIS", "X400", "X500", "XMPP"]
    sql: CASE ${TABLE}.network.application_protocol WHEN 0 THEN 'UNKNOWN_APPLICATION_PROTOCOL' WHEN 1 THEN 'AFP' WHEN 2 THEN 'APPC' WHEN 3 THEN 'AMQP' WHEN 4 THEN 'ATOM' WHEN 5 THEN 'BEEP' WHEN 6 THEN 'BITCOIN' WHEN 7 THEN 'BIT_TORRENT' WHEN 8 THEN 'CFDP' WHEN 67 THEN 'CIP' WHEN 9 THEN 'COAP' WHEN 68 THEN 'COTP' WHEN 66 THEN 'DCERPC' WHEN 10 THEN 'DDS' WHEN 11 THEN 'DEVICE_NET' WHEN 4000 THEN 'DHCP' WHEN 69 THEN 'DICOM' WHEN 70 THEN 'DNP3' WHEN 3000 THEN 'DNS' WHEN 12 THEN 'E_DONKEY' WHEN 13 THEN 'ENRP' WHEN 14 THEN 'FAST_TRACK' WHEN 15 THEN 'FINGER' WHEN 16 THEN 'FREENET' WHEN 17 THEN 'FTAM' WHEN 71 THEN 'GOOSE' WHEN 18 THEN 'GOPHER' WHEN 77 THEN 'GRPC' WHEN 19 THEN 'HL7' WHEN 20 THEN 'H323' WHEN 2000 THEN 'HTTP' WHEN 2001 THEN 'HTTPS' WHEN 72 THEN 'IEC104' WHEN 21 THEN 'IRCP' WHEN 22 THEN 'KADEMLIA' WHEN 65 THEN 'KRB5' WHEN 23 THEN 'LDAP' WHEN 24 THEN 'LPD' WHEN 25 THEN 'MIME' WHEN 73 THEN 'MMS' WHEN 26 THEN 'MODBUS' WHEN 27 THEN 'MQTT' WHEN 28 THEN 'NETCONF' WHEN 29 THEN 'NFS' WHEN 30 THEN 'NIS' WHEN 31 THEN 'NNTP' WHEN 32 THEN 'NTCIP' WHEN 33 THEN 'NTP' WHEN 34 THEN 'OSCAR' WHEN 35 THEN 'PNRP' WHEN 74 THEN 'PTP' WHEN 1000 THEN 'QUIC' WHEN 36 THEN 'RDP' WHEN 37 THEN 'RELP' WHEN 38 THEN 'RIP' WHEN 39 THEN 'RLOGIN' WHEN 40 THEN 'RPC' WHEN 41 THEN 'RTMP' WHEN 42 THEN 'RTP' WHEN 43 THEN 'RTPS' WHEN 44 THEN 'RTSP' WHEN 45 THEN 'SAP' WHEN 46 THEN 'SDP' WHEN 47 THEN 'SIP' WHEN 48 THEN 'SLP' WHEN 49 THEN 'SMB' WHEN 50 THEN 'SMTP' WHEN 75 THEN 'SNMP' WHEN 51 THEN 'SNTP' WHEN 52 THEN 'SSH' WHEN 53 THEN 'SSMS' WHEN 54 THEN 'STYX' WHEN 76 THEN 'SV' WHEN 55 THEN 'TCAP' WHEN 56 THEN 'TDS' WHEN 57 THEN 'TOR' WHEN 58 THEN 'TSP' WHEN 59 THEN 'VTP' WHEN 60 THEN 'WHOIS' WHEN 61 THEN 'WEB_DAV' WHEN 62 THEN 'X400' WHEN 63 THEN 'X500' WHEN 64 THEN 'XMPP' END ;;
    group_label: "network"
    label: "network.application_protocol_enum_name"
    view_label: "UDM"
    description: "The application protocol."
  }  # dimension network__application_protocol_enum_name

  dimension: network__application_protocol_version {
    type: string
    sql: ${TABLE}.network.application_protocol_version ;;
    group_label: "network"
    label: "network.application_protocol_version"
    view_label: "UDM"
    description: "The version of the application protocol. e.g. \"1.1, 2.0\""
  }  # dimension network__application_protocol_version

  dimension: network__asn {
    type: string
    sql: ${TABLE}.network.asn ;;
    group_label: "network"
    label: "network.asn"
    view_label: "UDM"
    description: "Autonomous system number."
  }  # dimension network__asn

  dimension: network__carrier_name {
    type: string
    sql: ${TABLE}.network.carrier_name ;;
    group_label: "network"
    label: "network.carrier_name"
    view_label: "UDM"
    description: "Carrier identification."
  }  # dimension network__carrier_name

  dimension: network__community_id {
    type: string
    sql: ${TABLE}.network.community_id ;;
    group_label: "network"
    label: "network.community_id"
    view_label: "UDM"
    description: "Community ID network flow hash."
  }  # dimension network__community_id

  dimension: network__dhcp {
    hidden: yes
  }  # dimension network__dhcp

  dimension: network__dhcp__chaddr {
    type: string
    sql: ${TABLE}.network.dhcp.chaddr ;;
    group_label: "network"
    label: "network.dhcp.chaddr"
    view_label: "UDM"
    description: "Client hardware address (chaddr)."
  }  # dimension network__dhcp__chaddr

  dimension: network__dhcp__ciaddr {
    type: string
    sql: ${TABLE}.network.dhcp.ciaddr ;;
    group_label: "network"
    label: "network.dhcp.ciaddr"
    view_label: "UDM"
    description: "Client IP address (ciaddr)."
  }  # dimension network__dhcp__ciaddr

  dimension: network__dhcp__client_hostname {
    type: string
    sql: ${TABLE}.network.dhcp.client_hostname ;;
    group_label: "network"
    label: "network.dhcp.client_hostname"
    view_label: "UDM"
    description: "Client hostname. See RFC2132, section 3.14."
  }  # dimension network__dhcp__client_hostname

  dimension: network__dhcp__client_identifier {
    type: string
    sql: ${TABLE}.network.dhcp.client_identifier ;;
    group_label: "network"
    label: "network.dhcp.client_identifier"
    view_label: "UDM"
    description: "Client identifier. See RFC2132, section 9.14."
  }  # dimension network__dhcp__client_identifier

  dimension: network__dhcp__file {
    type: string
    sql: ${TABLE}.network.dhcp.file ;;
    group_label: "network"
    label: "network.dhcp.file"
    view_label: "UDM"
    description: "Boot image filename."
  }  # dimension network__dhcp__file

  dimension: network__dhcp__flags {
    type: number
    sql: ${TABLE}.network.dhcp.flags ;;
    group_label: "network"
    label: "network.dhcp.flags"
    view_label: "UDM"
    description: "Flags."
  }  # dimension network__dhcp__flags

  dimension: network__dhcp__giaddr {
    type: string
    sql: ${TABLE}.network.dhcp.giaddr ;;
    group_label: "network"
    label: "network.dhcp.giaddr"
    view_label: "UDM"
    description: "Relay agent IP address (giaddr)."
  }  # dimension network__dhcp__giaddr

  dimension: network__dhcp__hlen {
    type: number
    sql: ${TABLE}.network.dhcp.hlen ;;
    group_label: "network"
    label: "network.dhcp.hlen"
    view_label: "UDM"
    description: "Hardware address length."
  }  # dimension network__dhcp__hlen

  dimension: network__dhcp__hops {
    type: number
    sql: ${TABLE}.network.dhcp.hops ;;
    group_label: "network"
    label: "network.dhcp.hops"
    view_label: "UDM"
    description: "Hardware ops."
  }  # dimension network__dhcp__hops

  dimension: network__dhcp__htype {
    type: number
    sql: ${TABLE}.network.dhcp.htype ;;
    group_label: "network"
    label: "network.dhcp.htype"
    view_label: "UDM"
    description: "Hardware address type."
  }  # dimension network__dhcp__htype

  dimension: network__dhcp__lease_time_seconds {
    type: number
    sql: ${TABLE}.network.dhcp.lease_time_seconds ;;
    group_label: "network"
    label: "network.dhcp.lease_time_seconds"
    view_label: "UDM"
    description: "Lease time in seconds. See RFC2132, section 9.2."
  }  # dimension network__dhcp__lease_time_seconds

  dimension: network__dhcp__opcode {
    type: number
    sql: ${TABLE}.network.dhcp.opcode ;;
    group_label: "network"
    label: "network.dhcp.opcode"
    view_label: "UDM"
    description: "The BOOTP op code."
  }  # dimension network__dhcp__opcode

  dimension: network__dhcp__opcode_enum_name {
    type: string
    suggestions: ["BOOTREPLY", "BOOTREQUEST", "UNKNOWN_OPCODE"]
    sql: CASE ${TABLE}.network.dhcp.opcode WHEN 0 THEN 'UNKNOWN_OPCODE' WHEN 1 THEN 'BOOTREQUEST' WHEN 2 THEN 'BOOTREPLY' END ;;
    group_label: "network"
    label: "network.dhcp.opcode_enum_name"
    view_label: "UDM"
    description: "The BOOTP op code."
  }  # dimension network__dhcp__opcode_enum_name

  dimension: network__dhcp__options {
    hidden: yes
  }  # dimension network__dhcp__options

  dimension: network__dhcp__requested_address {
    type: string
    sql: ${TABLE}.network.dhcp.requested_address ;;
    group_label: "network"
    label: "network.dhcp.requested_address"
    view_label: "UDM"
    description: "Requested IP address. See RFC2132, section 9.1."
  }  # dimension network__dhcp__requested_address

  dimension: network__dhcp__seconds {
    type: number
    sql: ${TABLE}.network.dhcp.seconds ;;
    group_label: "network"
    label: "network.dhcp.seconds"
    view_label: "UDM"
    description: "Seconds elapsed since client began address acquisition/renewal process."
  }  # dimension network__dhcp__seconds

  dimension: network__dhcp__siaddr {
    type: string
    sql: ${TABLE}.network.dhcp.siaddr ;;
    group_label: "network"
    label: "network.dhcp.siaddr"
    view_label: "UDM"
    description: "IP address of the next bootstrap server."
  }  # dimension network__dhcp__siaddr

  dimension: network__dhcp__sname {
    type: string
    sql: ${TABLE}.network.dhcp.sname ;;
    group_label: "network"
    label: "network.dhcp.sname"
    view_label: "UDM"
    description: "Server name that the client wishes to boot from."
  }  # dimension network__dhcp__sname

  dimension: network__dhcp__transaction_id {
    type: number
    sql: ${TABLE}.network.dhcp.transaction_id ;;
    group_label: "network"
    label: "network.dhcp.transaction_id"
    view_label: "UDM"
    description: "Transaction ID."
  }  # dimension network__dhcp__transaction_id

  dimension: network__dhcp__type {
    type: number
    sql: ${TABLE}.network.dhcp.type ;;
    group_label: "network"
    label: "network.dhcp.type"
    view_label: "UDM"
    description: "DHCP message type."
  }  # dimension network__dhcp__type

  dimension: network__dhcp__type_enum_name {
    type: string
    suggestions: ["ACK", "DECLINE", "DISCOVER", "INFORM", "NAK", "OFFER", "RELEASE", "REQUEST", "UNKNOWN_MESSAGE_TYPE", "WIN_DELETED", "WIN_EXPIRED"]
    sql: CASE ${TABLE}.network.dhcp.type WHEN 0 THEN 'UNKNOWN_MESSAGE_TYPE' WHEN 1 THEN 'DISCOVER' WHEN 2 THEN 'OFFER' WHEN 3 THEN 'REQUEST' WHEN 4 THEN 'DECLINE' WHEN 5 THEN 'ACK' WHEN 6 THEN 'NAK' WHEN 7 THEN 'RELEASE' WHEN 8 THEN 'INFORM' WHEN 100 THEN 'WIN_DELETED' WHEN 101 THEN 'WIN_EXPIRED' END ;;
    group_label: "network"
    label: "network.dhcp.type_enum_name"
    view_label: "UDM"
    description: "DHCP message type."
  }  # dimension network__dhcp__type_enum_name

  dimension: network__dhcp__yiaddr {
    type: string
    sql: ${TABLE}.network.dhcp.yiaddr ;;
    group_label: "network"
    label: "network.dhcp.yiaddr"
    view_label: "UDM"
    description: "Your IP address (yiaddr)."
  }  # dimension network__dhcp__yiaddr

  dimension: network__direction {
    type: number
    sql: ${TABLE}.network.direction ;;
    group_label: "network"
    label: "network.direction"
    view_label: "UDM"
    description: "The direction of network traffic."
  }  # dimension network__direction

  dimension: network__direction_enum_name {
    type: string
    suggestions: ["BROADCAST", "INBOUND", "OUTBOUND", "UNKNOWN_DIRECTION"]
    sql: CASE ${TABLE}.network.direction WHEN 0 THEN 'UNKNOWN_DIRECTION' WHEN 1 THEN 'INBOUND' WHEN 2 THEN 'OUTBOUND' WHEN 3 THEN 'BROADCAST' END ;;
    group_label: "network"
    label: "network.direction_enum_name"
    view_label: "UDM"
    description: "The direction of network traffic."
  }  # dimension network__direction_enum_name

  dimension: network__dns {
    hidden: yes
  }  # dimension network__dns

  dimension: network__dns__additional {
    hidden: yes
  }  # dimension network__dns__additional

  dimension: network__dns__answers {
    hidden: yes
  }  # dimension network__dns__answers

  dimension: network__dns__authoritative {
    type: yesno
    sql: ${TABLE}.network.dns.authoritative ;;
    group_label: "network"
    label: "network.dns.authoritative"
    view_label: "UDM"
    description: "Other DNS header flags. See RFC1035, section 4.1.1."
  }  # dimension network__dns__authoritative

  dimension: network__dns__authority {
    hidden: yes
  }  # dimension network__dns__authority

  dimension: network__dns__id {
    type: number
    sql: ${TABLE}.network.dns.id ;;
    group_label: "network"
    label: "network.dns.id"
    view_label: "UDM"
    description: "DNS query id."
  }  # dimension network__dns__id

  dimension: network__dns__opcode {
    type: number
    sql: ${TABLE}.network.dns.opcode ;;
    group_label: "network"
    label: "network.dns.opcode"
    view_label: "UDM"
    description: "The DNS OpCode used to specify the type of DNS query (e.g. QUERY, IQUERY, STATUS, etc.)."
  }  # dimension network__dns__opcode

  dimension: network__dns__questions {
    hidden: yes
  }  # dimension network__dns__questions

  dimension: network__dns__recursion_available {
    type: yesno
    sql: ${TABLE}.network.dns.recursion_available ;;
    group_label: "network"
    label: "network.dns.recursion_available"
    view_label: "UDM"
    description: "Whether a recursive DNS lookup is available."
  }  # dimension network__dns__recursion_available

  dimension: network__dns__recursion_desired {
    type: yesno
    sql: ${TABLE}.network.dns.recursion_desired ;;
    group_label: "network"
    label: "network.dns.recursion_desired"
    view_label: "UDM"
    description: "Whether a recursive DNS lookup is desired."
  }  # dimension network__dns__recursion_desired

  dimension: network__dns__response {
    type: yesno
    sql: ${TABLE}.network.dns.response ;;
    group_label: "network"
    label: "network.dns.response"
    view_label: "UDM"
    description: "Set to true if the event is a DNS response. See QR field from RFC1035."
  }  # dimension network__dns__response

  dimension: network__dns__response_code {
    type: number
    sql: ${TABLE}.network.dns.response_code ;;
    group_label: "network"
    label: "network.dns.response_code"
    view_label: "UDM"
    description: "Response code. See RCODE from RFC1035."
  }  # dimension network__dns__response_code

  dimension: network__dns__truncated {
    type: yesno
    sql: ${TABLE}.network.dns.truncated ;;
    group_label: "network"
    label: "network.dns.truncated"
    view_label: "UDM"
    description: "Whether the DNS response was truncated."
  }  # dimension network__dns__truncated

  dimension: network__dns_domain {
    type: string
    sql: ${TABLE}.network.dns_domain ;;
    group_label: "network"
    label: "network.dns_domain"
    view_label: "UDM"
    description: "DNS domain name."
  }  # dimension network__dns_domain

  dimension: network__email {
    hidden: yes
  }  # dimension network__email

  dimension: network__email__bcc {
    hidden: yes
  }  # dimension network__email__bcc

  dimension: network__email__bounce_address {
    type: string
    sql: ${TABLE}.network.email.bounce_address ;;
    group_label: "network"
    label: "network.email.bounce_address"
    view_label: "UDM"
    description: "The envelope from address. <a href=\"https://en.wikipedia.org/wiki/Bounce_address\">https://en.wikipedia.org/wiki/Bounce_address</a>"
  }  # dimension network__email__bounce_address

  dimension: network__email__cc {
    hidden: yes
  }  # dimension network__email__cc

  dimension: network__email__from {
    type: string
    sql: ${TABLE}.network.email.from ;;
    group_label: "network"
    label: "network.email.from"
    view_label: "UDM"
    description: "The 'from' address."
  }  # dimension network__email__from

  dimension: network__email__mail_id {
    type: string
    sql: ${TABLE}.network.email.mail_id ;;
    group_label: "network"
    label: "network.email.mail_id"
    view_label: "UDM"
    description: "The mail (or message) ID."
  }  # dimension network__email__mail_id

  dimension: network__email__reply_to {
    type: string
    sql: ${TABLE}.network.email.reply_to ;;
    group_label: "network"
    label: "network.email.reply_to"
    view_label: "UDM"
    description: "The 'reply to' address."
  }  # dimension network__email__reply_to

  dimension: network__email__subject {
    hidden: yes
  }  # dimension network__email__subject

  dimension: network__email__to {
    hidden: yes
  }  # dimension network__email__to

  dimension: network__ftp {
    hidden: yes
  }  # dimension network__ftp

  dimension: network__ftp__command {
    type: string
    sql: ${TABLE}.network.ftp.command ;;
    group_label: "network"
    label: "network.ftp.command"
    view_label: "UDM"
    description: "The FTP command."
  }  # dimension network__ftp__command

  dimension: network__http {
    hidden: yes
  }  # dimension network__http

  dimension: network__http__method {
    type: string
    sql: ${TABLE}.network.http.method ;;
    group_label: "network"
    label: "network.http.method"
    view_label: "UDM"
    description: "The HTTP request method (e.g. \"GET\", \"POST\", \"PATCH\", \"DELETE\")."
  }  # dimension network__http__method

  dimension: network__http__parsed_user_agent {
    hidden: yes
  }  # dimension network__http__parsed_user_agent

  dimension: network__http__parsed_user_agent__annotation {
    hidden: yes
  }  # dimension network__http__parsed_user_agent__annotation

  dimension: network__http__parsed_user_agent__browser {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.browser ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.browser"
    view_label: "UDM"
    description: "Product brand within the family: Firefox, Netscape, Camino etc.. Or Earth, Windows-Media-Player etc.. for non-browser user agents."
  }  # dimension network__http__parsed_user_agent__browser

  dimension: network__http__parsed_user_agent__browser_engine_version {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.browser_engine_version ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.browser_engine_version"
    view_label: "UDM"
    description: "Version of the rendering engine  e.g. \"8.01\" for \"Opera/8.01\""
  }  # dimension network__http__parsed_user_agent__browser_engine_version

  dimension: network__http__parsed_user_agent__browser_version {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.browser_version ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.browser_version"
    view_label: "UDM"
    description: "Minor and lower versions unavailable with reduced User-Agent and no client hints (go/ua-reduction-ua-string-reference)."
  }  # dimension network__http__parsed_user_agent__browser_version

  dimension: network__http__parsed_user_agent__carrier {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.carrier ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.carrier"
    view_label: "UDM"
    description: "Mobile specific: name of mobile carrier"
  }  # dimension network__http__parsed_user_agent__carrier

  dimension: network__http__parsed_user_agent__device {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.device ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.device"
    view_label: "UDM"
    description: "(Usually) Mobile specific: name of hardware device, may or may not contain the full model name.  e.g. iPhone, Palm750, SPH-M800. Reduced to \"K\" for Android devices with reduced User-Agent and no client hints (go/ua-reduction-ua-string-reference)."
  }  # dimension network__http__parsed_user_agent__device

  dimension: network__http__parsed_user_agent__device_version {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.device_version ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.device_version"
    view_label: "UDM"
    description: "(Usually) Mobile specific: version of hardware device Unavailable with reduced User-Agent and no client hints (go/ua-reduction-ua-string-reference)."
  }  # dimension network__http__parsed_user_agent__device_version

  dimension: network__http__parsed_user_agent__family {
    type: number
    sql: ${TABLE}.network.http.parsed_user_agent.family ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.family"
    view_label: "UDM"
    description: "User agent family captures the type of browser/app at a high-level  e.g. MSIE, Gecko, Safari etc.."
  }  # dimension network__http__parsed_user_agent__family

  dimension: network__http__parsed_user_agent__family_enum_name {
    type: string
    suggestions: ["APPLE", "APPLEWEBKIT", "BLACKBERRY", "CLIENT_HINTS", "DOCOMO", "GECKO", "GOOGLE", "KHTML", "KOREAN", "MICROSOFT", "MSIE", "NETFRONT", "NOKIA", "OBIGO", "OPENWAVE", "OPERA", "OTHER", "POLARIS", "SEMC", "SMIT", "TELECA", "USER_DEFINED"]
    sql: CASE ${TABLE}.network.http.parsed_user_agent.family WHEN 0 THEN 'USER_DEFINED' WHEN 1 THEN 'MSIE' WHEN 2 THEN 'GECKO' WHEN 3 THEN 'APPLEWEBKIT' WHEN 4 THEN 'OPERA' WHEN 5 THEN 'KHTML' WHEN 10 THEN 'OTHER' WHEN 11 THEN 'APPLE' WHEN 12 THEN 'BLACKBERRY' WHEN 13 THEN 'DOCOMO' WHEN 14 THEN 'GOOGLE' WHEN 15 THEN 'OPENWAVE' WHEN 16 THEN 'POLARIS' WHEN 17 THEN 'OBIGO' WHEN 18 THEN 'TELECA' WHEN 19 THEN 'MICROSOFT' WHEN 20 THEN 'NOKIA' WHEN 21 THEN 'NETFRONT' WHEN 22 THEN 'SEMC' WHEN 23 THEN 'SMIT' WHEN 24 THEN 'KOREAN' WHEN 25 THEN 'CLIENT_HINTS' END ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.family_enum_name"
    view_label: "UDM"
    description: "User agent family captures the type of browser/app at a high-level  e.g. MSIE, Gecko, Safari etc.."
  }  # dimension network__http__parsed_user_agent__family_enum_name

  dimension: network__http__parsed_user_agent__google_toolbar_version {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.google_toolbar_version ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.google_toolbar_version"
    view_label: "UDM"
    description: "Version number of GoogleToolbar, if installed. Applies only to MSIE and Firefox at this time."
  }  # dimension network__http__parsed_user_agent__google_toolbar_version

  dimension: network__http__parsed_user_agent__java_configuration {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.java_configuration ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.java_configuration"
    view_label: "UDM"
    description: "Mobile specific: e.g. Configuration/CLDC-1.1"
  }  # dimension network__http__parsed_user_agent__java_configuration

  dimension: network__http__parsed_user_agent__java_configuration_version {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.java_configuration_version ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.java_configuration_version"
    view_label: "UDM"
  }  # dimension network__http__parsed_user_agent__java_configuration_version

  dimension: network__http__parsed_user_agent__java_profile {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.java_profile ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.java_profile"
    view_label: "UDM"
    description: "Mobile specific: e.g. Profile/MIDP-2.0"
  }  # dimension network__http__parsed_user_agent__java_profile

  dimension: network__http__parsed_user_agent__java_profile_version {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.java_profile_version ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.java_profile_version"
    view_label: "UDM"
  }  # dimension network__http__parsed_user_agent__java_profile_version

  dimension: network__http__parsed_user_agent__locale {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.locale ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.locale"
    view_label: "UDM"
    description: "Locale in which the browser is running as country code and optionally language pair. Unavailable with reduced User-Agent and no client hints (go/ua-reduction-ua-string-reference)."
  }  # dimension network__http__parsed_user_agent__locale

  dimension: network__http__parsed_user_agent__messaging {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.messaging ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.messaging"
    view_label: "UDM"
    description: "Mobile specific: e.g. MMP/2.0"
  }  # dimension network__http__parsed_user_agent__messaging

  dimension: network__http__parsed_user_agent__messaging_version {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.messaging_version ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.messaging_version"
    view_label: "UDM"
  }  # dimension network__http__parsed_user_agent__messaging_version

  dimension: network__http__parsed_user_agent__os {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.os ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.os"
    view_label: "UDM"
    description: "Full name of the operating system  e.g. \"Darwin/9.7.0\", \"Android 1.5\", \"Windows 98\" Version is reduced, and other data might also be missing, for reduced User-Agent and no client hints (go/ua-reduction-ua-string-reference)."
  }  # dimension network__http__parsed_user_agent__os

  dimension: network__http__parsed_user_agent__os_variant {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.os_variant ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.os_variant"
    view_label: "UDM"
    description: "Extra qualifier for the OS  e.g. \"(i386)\", \"Build/CUPCAKE\", \"PalmSource/Palm-D061\" Unavailable with reduced User-Agent and no client hints (go/ua-reduction-ua-string-reference)."
  }  # dimension network__http__parsed_user_agent__os_variant

  dimension: network__http__parsed_user_agent__platform {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.platform ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.platform"
    view_label: "UDM"
    description: "The platform describes the environment in which the browser or app runs. For desktop user agents, Platform is a string describing the OS family  e.g. Windows, Macintosh, Linux. For mobile user agents, Platform either describes the OS family (if available) or the hardware maker.  e.g. Linux, or HTC, LG, Palm."
  }  # dimension network__http__parsed_user_agent__platform

  dimension: network__http__parsed_user_agent__security {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.security ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.security"
    view_label: "UDM"
    description: "Security level reported by user agent, either U, I or N. Unavailable with reduced User-Agent and no client hints (go/ua-reduction-ua-string-reference)."
  }  # dimension network__http__parsed_user_agent__security

  dimension: network__http__parsed_user_agent__sub_family {
    type: string
    sql: ${TABLE}.network.http.parsed_user_agent.sub_family ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.sub_family"
    view_label: "UDM"
    description: "Sub-family identifies individual regexps when a family has more than 1. This is used to generate the right UA string from a protobuf. Examples in the AppleWebKit family: Chrome and Safari. Can also be an arbitrary identifier."
  }  # dimension network__http__parsed_user_agent__sub_family

  dimension: network__http__referral_url {
    type: string
    sql: ${TABLE}.network.http.referral_url ;;
    group_label: "network"
    label: "network.http.referral_url"
    view_label: "UDM"
    description: "The URL for the HTTP referer."
  }  # dimension network__http__referral_url

  dimension: network__http__response_code {
    type: number
    sql: ${TABLE}.network.http.response_code ;;
    group_label: "network"
    label: "network.http.response_code"
    view_label: "UDM"
    description: "The response status code. e.g. 200, 302, 404, 500, etc."
  }  # dimension network__http__response_code

  dimension: network__http__user_agent {
    type: string
    sql: ${TABLE}.network.http.user_agent ;;
    group_label: "network"
    label: "network.http.user_agent"
    view_label: "UDM"
    description: "The User-Agent request header which includes the application type, operating system, software vendor or software version of the requesting software user agent."
  }  # dimension network__http__user_agent

  dimension: network__ip_protocol {
    type: number
    sql: ${TABLE}.network.ip_protocol ;;
    group_label: "network"
    label: "network.ip_protocol"
    view_label: "UDM"
    description: "The IP protocol."
  }  # dimension network__ip_protocol

  dimension: network__ip_protocol_enum_name {
    type: string
    suggestions: ["EIGRP", "ESP", "ETHERIP", "GRE", "ICMP", "ICMP6", "IGMP", "IP6IN4", "PIM", "SCTP", "TCP", "UDP", "UNKNOWN_IP_PROTOCOL", "VRRP"]
    sql: CASE ${TABLE}.network.ip_protocol WHEN 0 THEN 'UNKNOWN_IP_PROTOCOL' WHEN 1 THEN 'ICMP' WHEN 2 THEN 'IGMP' WHEN 6 THEN 'TCP' WHEN 17 THEN 'UDP' WHEN 41 THEN 'IP6IN4' WHEN 47 THEN 'GRE' WHEN 50 THEN 'ESP' WHEN 58 THEN 'ICMP6' WHEN 88 THEN 'EIGRP' WHEN 97 THEN 'ETHERIP' WHEN 103 THEN 'PIM' WHEN 112 THEN 'VRRP' WHEN 132 THEN 'SCTP' END ;;
    group_label: "network"
    label: "network.ip_protocol_enum_name"
    view_label: "UDM"
    description: "The IP protocol."
  }  # dimension network__ip_protocol_enum_name

  dimension: network__organization_name {
    type: string
    sql: ${TABLE}.network.organization_name ;;
    group_label: "network"
    label: "network.organization_name"
    view_label: "UDM"
    description: "Organization name (e.g Google)."
  }  # dimension network__organization_name

  dimension: network__parent_session_id {
    type: string
    sql: ${TABLE}.network.parent_session_id ;;
    group_label: "network"
    label: "network.parent_session_id"
    view_label: "UDM"
    description: "The ID of the parent network session."
  }  # dimension network__parent_session_id

  dimension: network__received_bytes {
    type: number
    sql: ${TABLE}.network.received_bytes ;;
    group_label: "network"
    label: "network.received_bytes"
    view_label: "UDM"
    description: "The number of bytes received."
  }  # dimension network__received_bytes

  dimension: network__received_packets {
    type: number
    sql: ${TABLE}.network.received_packets ;;
    group_label: "network"
    label: "network.received_packets"
    view_label: "UDM"
    description: "The number of packets received."
  }  # dimension network__received_packets

  dimension: network__sent_bytes {
    type: number
    sql: ${TABLE}.network.sent_bytes ;;
    group_label: "network"
    label: "network.sent_bytes"
    view_label: "UDM"
    description: "The number of bytes sent."
  }  # dimension network__sent_bytes

  dimension: network__sent_packets {
    type: number
    sql: ${TABLE}.network.sent_packets ;;
    group_label: "network"
    label: "network.sent_packets"
    view_label: "UDM"
    description: "The number of packets sent."
  }  # dimension network__sent_packets

  dimension_group: network__session_duration {
    type: duration
    intervals: [ second, minute, hour ]
    sql_start: TIMESTAMP_MICROS(0) ;;
    sql_end: TIMESTAMP_MICROS(IFNULL(${TABLE}.network.session_duration.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.network.session_duration.nanos, 0) / 1000) as INT64)) ;;
    group_label: "network"
    label: "network.session_duration"
    view_label: "UDM"
    description: "The duration of the session as the number of seconds and nanoseconds. For seconds, network.session_duration.seconds, the type is a 64-bit integer. For nanoseconds, network.session_duration.nanos, the type is a 32-bit integer."
  }  # dimension network__session_duration

  dimension: network__session_id {
    type: string
    sql: ${TABLE}.network.session_id ;;
    group_label: "network"
    label: "network.session_id"
    view_label: "UDM"
    description: "The ID of the network session."
  }  # dimension network__session_id

  dimension: network__smtp {
    hidden: yes
  }  # dimension network__smtp

  dimension: network__smtp__helo {
    type: string
    sql: ${TABLE}.network.smtp.helo ;;
    group_label: "network"
    label: "network.smtp.helo"
    view_label: "UDM"
    description: "The client's 'HELO'/'EHLO' string."
  }  # dimension network__smtp__helo

  dimension: network__smtp__is_tls {
    type: yesno
    sql: ${TABLE}.network.smtp.is_tls ;;
    group_label: "network"
    label: "network.smtp.is_tls"
    view_label: "UDM"
    description: "If the connection switched to TLS."
  }  # dimension network__smtp__is_tls

  dimension: network__smtp__mail_from {
    type: string
    sql: ${TABLE}.network.smtp.mail_from ;;
    group_label: "network"
    label: "network.smtp.mail_from"
    view_label: "UDM"
    description: "The client's 'MAIL FROM' string."
  }  # dimension network__smtp__mail_from

  dimension: network__smtp__rcpt_to {
    hidden: yes
  }  # dimension network__smtp__rcpt_to

  dimension: network__smtp__server_response {
    hidden: yes
  }  # dimension network__smtp__server_response

  dimension: network__tls {
    hidden: yes
  }  # dimension network__tls

  dimension: network__tls__cipher {
    type: string
    sql: ${TABLE}.network.tls.cipher ;;
    group_label: "network"
    label: "network.tls.cipher"
    view_label: "UDM"
    description: "Cipher used during the connection."
  }  # dimension network__tls__cipher

  dimension: network__tls__client {
    hidden: yes
  }  # dimension network__tls__client

  dimension: network__tls__client__certificate {
    hidden: yes
  }  # dimension network__tls__client__certificate

  dimension: network__tls__client__certificate__issuer {
    type: string
    sql: ${TABLE}.network.tls.client.certificate.issuer ;;
    group_label: "network"
    label: "network.tls.client.certificate.issuer"
    view_label: "UDM"
    description: "Issuer of the certificate."
  }  # dimension network__tls__client__certificate__issuer

  dimension_group: network__tls__client__certificate__not_after {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.network.tls.client.certificate.not_after.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.network.tls.client.certificate.not_after.nanos, 0) / 1000) as INT64)) ;;
    group_label: "network"
    label: "network.tls.client.certificate.not_after"
    view_label: "UDM"
    description: "Indicates when the certificate is no longer valid."
  }  # dimension network__tls__client__certificate__not_after

  dimension_group: network__tls__client__certificate__not_before {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.network.tls.client.certificate.not_before.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.network.tls.client.certificate.not_before.nanos, 0) / 1000) as INT64)) ;;
    group_label: "network"
    label: "network.tls.client.certificate.not_before"
    view_label: "UDM"
    description: "Indicates when the certificate is first valid."
  }  # dimension network__tls__client__certificate__not_before

  dimension: network__tls__client__certificate__serial {
    type: string
    sql: ${TABLE}.network.tls.client.certificate.serial ;;
    group_label: "network"
    label: "network.tls.client.certificate.serial"
    view_label: "UDM"
    description: "Certificate serial number."
  }  # dimension network__tls__client__certificate__serial

  dimension: network__tls__client__certificate__sha1 {
    type: string
    sql: ${TABLE}.network.tls.client.certificate.sha1 ;;
    group_label: "network"
    label: "network.tls.client.certificate.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the certificate."
  }  # dimension network__tls__client__certificate__sha1

  dimension: network__tls__client__certificate__sha256 {
    type: string
    sql: ${TABLE}.network.tls.client.certificate.sha256 ;;
    group_label: "network"
    label: "network.tls.client.certificate.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the certificate."
  }  # dimension network__tls__client__certificate__sha256

  dimension: network__tls__client__certificate__subject {
    type: string
    sql: ${TABLE}.network.tls.client.certificate.subject ;;
    group_label: "network"
    label: "network.tls.client.certificate.subject"
    view_label: "UDM"
    description: "Subject of the certificate."
  }  # dimension network__tls__client__certificate__subject

  dimension: network__tls__client__certificate__version {
    type: string
    sql: ${TABLE}.network.tls.client.certificate.version ;;
    group_label: "network"
    label: "network.tls.client.certificate.version"
    view_label: "UDM"
    description: "Certificate version."
  }  # dimension network__tls__client__certificate__version

  dimension: network__tls__client__ja3 {
    type: string
    sql: ${TABLE}.network.tls.client.ja3 ;;
    group_label: "network"
    label: "network.tls.client.ja3"
    view_label: "UDM"
    description: "JA3 hash from client hello."
  }  # dimension network__tls__client__ja3

  dimension: network__tls__client__server_name {
    type: string
    sql: ${TABLE}.network.tls.client.server_name ;;
    group_label: "network"
    label: "network.tls.client.server_name"
    view_label: "UDM"
    description: "Host name of the server, that the client is connecting to."
  }  # dimension network__tls__client__server_name

  dimension: network__tls__client__supported_ciphers {
    hidden: yes
  }  # dimension network__tls__client__supported_ciphers

  dimension: network__tls__curve {
    type: string
    sql: ${TABLE}.network.tls.curve ;;
    group_label: "network"
    label: "network.tls.curve"
    view_label: "UDM"
    description: "Elliptical curve used for a given cipher."
  }  # dimension network__tls__curve

  dimension: network__tls__established {
    type: yesno
    sql: ${TABLE}.network.tls.established ;;
    group_label: "network"
    label: "network.tls.established"
    view_label: "UDM"
    description: "Indicates whether the TLS negotiation was successful."
  }  # dimension network__tls__established

  dimension: network__tls__next_protocol {
    type: string
    sql: ${TABLE}.network.tls.next_protocol ;;
    group_label: "network"
    label: "network.tls.next_protocol"
    view_label: "UDM"
    description: "Protocol to be used for tunnel."
  }  # dimension network__tls__next_protocol

  dimension: network__tls__resumed {
    type: yesno
    sql: ${TABLE}.network.tls.resumed ;;
    group_label: "network"
    label: "network.tls.resumed"
    view_label: "UDM"
    description: "Indicates whether the TLS connection was resumed from a previous TLS negotiation."
  }  # dimension network__tls__resumed

  dimension: network__tls__server {
    hidden: yes
  }  # dimension network__tls__server

  dimension: network__tls__server__certificate {
    hidden: yes
  }  # dimension network__tls__server__certificate

  dimension: network__tls__server__certificate__issuer {
    type: string
    sql: ${TABLE}.network.tls.server.certificate.issuer ;;
    group_label: "network"
    label: "network.tls.server.certificate.issuer"
    view_label: "UDM"
    description: "Issuer of the certificate."
  }  # dimension network__tls__server__certificate__issuer

  dimension: network__tls__server__certificate__md5 {
    type: string
    sql: ${TABLE}.network.tls.server.certificate.md5 ;;
    group_label: "network"
    label: "network.tls.server.certificate.md5"
    view_label: "UDM"
    description: "The MD5 hash of the certificate."
  }  # dimension network__tls__server__certificate__md5

  dimension_group: network__tls__server__certificate__not_after {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.network.tls.server.certificate.not_after.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.network.tls.server.certificate.not_after.nanos, 0) / 1000) as INT64)) ;;
    group_label: "network"
    label: "network.tls.server.certificate.not_after"
    view_label: "UDM"
    description: "Indicates when the certificate is no longer valid."
  }  # dimension network__tls__server__certificate__not_after

  dimension_group: network__tls__server__certificate__not_before {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.network.tls.server.certificate.not_before.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.network.tls.server.certificate.not_before.nanos, 0) / 1000) as INT64)) ;;
    group_label: "network"
    label: "network.tls.server.certificate.not_before"
    view_label: "UDM"
    description: "Indicates when the certificate is first valid."
  }  # dimension network__tls__server__certificate__not_before

  dimension: network__tls__server__certificate__serial {
    type: string
    sql: ${TABLE}.network.tls.server.certificate.serial ;;
    group_label: "network"
    label: "network.tls.server.certificate.serial"
    view_label: "UDM"
    description: "Certificate serial number."
  }  # dimension network__tls__server__certificate__serial

  dimension: network__tls__server__certificate__sha1 {
    type: string
    sql: ${TABLE}.network.tls.server.certificate.sha1 ;;
    group_label: "network"
    label: "network.tls.server.certificate.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the certificate."
  }  # dimension network__tls__server__certificate__sha1

  dimension: network__tls__server__certificate__sha256 {
    type: string
    sql: ${TABLE}.network.tls.server.certificate.sha256 ;;
    group_label: "network"
    label: "network.tls.server.certificate.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the certificate."
  }  # dimension network__tls__server__certificate__sha256

  dimension: network__tls__server__certificate__subject {
    type: string
    sql: ${TABLE}.network.tls.server.certificate.subject ;;
    group_label: "network"
    label: "network.tls.server.certificate.subject"
    view_label: "UDM"
    description: "Subject of the certificate."
  }  # dimension network__tls__server__certificate__subject

  dimension: network__tls__server__certificate__version {
    type: string
    sql: ${TABLE}.network.tls.server.certificate.version ;;
    group_label: "network"
    label: "network.tls.server.certificate.version"
    view_label: "UDM"
    description: "Certificate version."
  }  # dimension network__tls__server__certificate__version

  dimension: network__tls__server__ja3s {
    type: string
    sql: ${TABLE}.network.tls.server.ja3s ;;
    group_label: "network"
    label: "network.tls.server.ja3s"
    view_label: "UDM"
    description: "JA3 hash from server hello."
  }  # dimension network__tls__server__ja3s

  dimension: network__tls__version {
    type: string
    sql: ${TABLE}.network.tls.version ;;
    group_label: "network"
    label: "network.tls.version"
    view_label: "UDM"
    description: "TLS version."
  }  # dimension network__tls__version

  dimension: network__tls__version_protocol {
    type: string
    sql: ${TABLE}.network.tls.version_protocol ;;
    group_label: "network"
    label: "network.tls.version_protocol"
    view_label: "UDM"
    description: "Protocol."
  }  # dimension network__tls__version_protocol

  dimension: observer {
    hidden: yes
  }  # dimension observer

  dimension: observer__administrative_domain {
    type: string
    sql: ${TABLE}.observer.administrative_domain ;;
    group_label: "observer"
    label: "observer.administrative_domain"
    view_label: "UDM"
    description: "Domain which the device belongs to (for example, the Microsoft Windows domain)."
  }  # dimension observer__administrative_domain

  dimension: observer__application {
    type: string
    sql: ${TABLE}.observer.application ;;
    group_label: "observer"
    label: "observer.application"
    view_label: "UDM"
    description: "The name of an application or service. Some SSO solutions only capture the name of a target application such as \"Atlassian\" or \"Chronicle\"."
  }  # dimension observer__application

  dimension: observer__asset {
    hidden: yes
  }  # dimension observer__asset

  dimension: observer__asset__attribute {
    hidden: yes
  }  # dimension observer__asset__attribute

  dimension: observer__asset__attribute__labels {
    hidden: yes
  }  # dimension observer__asset__attribute__labels

  dimension: observer__asset__category {
    type: string
    sql: ${TABLE}.observer.asset.category ;;
    group_label: "observer"
    label: "observer.asset.category"
    view_label: "UDM"
    description: "The category of the asset (e.g. \"End User Asset\", \"Workstation\", \"Server\")."
  }  # dimension observer__asset__category

  dimension: observer__asset__hostname {
    type: string
    sql: ${TABLE}.observer.asset.hostname ;;
    group_label: "observer"
    label: "observer.asset.hostname"
    view_label: "UDM"
    description: "Asset hostname or domain name field."
  }  # dimension observer__asset__hostname

  dimension: observer__asset__ip {
    hidden: yes
  }  # dimension observer__asset__ip

  dimension: observer__asset__location {
    hidden: yes
  }  # dimension observer__asset__location

  dimension: observer__asset__location__name {
    type: string
    sql: ${TABLE}.observer.asset.location.name ;;
    group_label: "observer"
    label: "observer.asset.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension observer__asset__location__name

  dimension: observer__asset__network_domain {
    type: string
    sql: ${TABLE}.observer.asset.network_domain ;;
    group_label: "observer"
    label: "observer.asset.network_domain"
    view_label: "UDM"
    description: "The network domain of the asset (e.g. \"corp.acme.com\")"
  }  # dimension observer__asset__network_domain

  dimension: observer__asset__platform_software {
    hidden: yes
  }  # dimension observer__asset__platform_software

  dimension: observer__asset__platform_software__platform_version {
    type: string
    sql: ${TABLE}.observer.asset.platform_software.platform_version ;;
    group_label: "observer"
    label: "observer.asset.platform_software.platform_version"
    view_label: "UDM"
    description: "The platform software version ( e.g. \"Microsoft Windows 1803\")."
  }  # dimension observer__asset__platform_software__platform_version

  dimension: observer__asset__product_object_id {
    type: string
    sql: ${TABLE}.observer.asset.product_object_id ;;
    group_label: "observer"
    label: "observer.asset.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID  or similar)."
  }  # dimension observer__asset__product_object_id

  dimension: observer__asset__software {
    hidden: yes
  }  # dimension observer__asset__software

  dimension: observer__asset_id {
    type: string
    sql: ${TABLE}.observer.asset_id ;;
    group_label: "observer"
    label: "observer.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension observer__asset_id

  dimension: observer__cloud {
    hidden: yes
  }  # dimension observer__cloud

  dimension: observer__cloud__availability_zone {
    type: string
    sql: ${TABLE}.observer.cloud.availability_zone ;;
    group_label: "observer"
    group_item_label: "observer.cloud.availability_zone [D]"
    label: "observer.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__cloud__availability_zone

  dimension: observer__cloud__environment {
    type: number
    sql: ${TABLE}.observer.cloud.environment ;;
    group_label: "observer"
    group_item_label: "observer.cloud.environment [D]"
    label: "observer.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__cloud__environment

  dimension: observer__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.observer.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "observer"
    group_item_label: "observer.cloud.environment_enum_name [D]"
    label: "observer.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__cloud__environment_enum_name

  dimension: observer__cloud__project {
    hidden: yes
  }  # dimension observer__cloud__project

  dimension: observer__cloud__project__id {
    type: string
    sql: ${TABLE}.observer.cloud.project.id ;;
    group_label: "observer"
    group_item_label: "observer.cloud.project.id [D]"
    label: "observer.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__cloud__project__id

  dimension: observer__cloud__project__name {
    type: string
    sql: ${TABLE}.observer.cloud.project.name ;;
    group_label: "observer"
    group_item_label: "observer.cloud.project.name [D]"
    label: "observer.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__cloud__project__name

  dimension: observer__domain {
    hidden: yes
  }  # dimension observer__domain

  dimension: observer__domain__name {
    type: string
    sql: ${TABLE}.observer.domain.name ;;
    group_label: "observer"
    label: "observer.domain.name"
    view_label: "UDM"
    description: "The domain name."
  }  # dimension observer__domain__name

  dimension: observer__file {
    hidden: yes
  }  # dimension observer__file

  dimension: observer__file__full_path {
    type: string
    sql: ${TABLE}.observer.file.full_path ;;
    group_label: "observer"
    label: "observer.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension observer__file__full_path

  dimension: observer__file__sha256 {
    type: string
    sql: ${TABLE}.observer.file.sha256 ;;
    group_label: "observer"
    label: "observer.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension observer__file__sha256

  dimension: observer__group {
    hidden: yes
  }  # dimension observer__group

  dimension: observer__group__attribute {
    hidden: yes
  }  # dimension observer__group__attribute

  dimension: observer__group__attribute__permissions {
    hidden: yes
  }  # dimension observer__group__attribute__permissions

  dimension: observer__group__attribute__roles {
    hidden: yes
  }  # dimension observer__group__attribute__roles

  dimension: observer__group__group_display_name {
    type: string
    sql: ${TABLE}.observer.group.group_display_name ;;
    group_label: "observer"
    label: "observer.group.group_display_name"
    view_label: "UDM"
    description: "Group display name. e.g. \"Finance\"."
  }  # dimension observer__group__group_display_name

  dimension: observer__hostname {
    type: string
    sql: ${TABLE}.observer.hostname ;;
    group_label: "observer"
    label: "observer.hostname"
    view_label: "UDM"
    description: "Client hostname or domain name field. Hostname also doubles as the domain for remote entities."
  }  # dimension observer__hostname

  dimension: observer__ip {
    hidden: yes
  }  # dimension observer__ip

  dimension: observer__labels {
    hidden: yes
  }  # dimension observer__labels

  dimension: observer__location {
    hidden: yes
  }  # dimension observer__location

  dimension: observer__location__country_or_region {
    type: string
    sql: ${TABLE}.observer.location.country_or_region ;;
    group_label: "observer"
    label: "observer.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension observer__location__country_or_region

  dimension: observer__location__name {
    type: string
    sql: ${TABLE}.observer.location.name ;;
    group_label: "observer"
    label: "observer.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension observer__location__name

  dimension: observer__mac {
    hidden: yes
  }  # dimension observer__mac

  dimension: observer__namespace {
    type: string
    sql: ${TABLE}.observer.namespace ;;
    group_label: "observer"
    label: "observer.namespace"
    view_label: "UDM"
    description: "Namespace which the device belongs to (e.g. AD forest) Uses for this field include Microsoft Windows AD forest, name of subsidiary or acquisition, etc."
  }  # dimension observer__namespace

  dimension: observer__nat_ip {
    hidden: yes
  }  # dimension observer__nat_ip

  dimension: observer__nat_port {
    type: number
    value_format: "#"
    sql: ${TABLE}.observer.nat_port ;;
    group_label: "observer"
    label: "observer.nat_port"
    view_label: "UDM"
    description: "NAT external network port number when a specific network connection is described within an event."
  }  # dimension observer__nat_port

  dimension: observer__platform {
    type: number
    sql: ${TABLE}.observer.platform ;;
    group_label: "observer"
    label: "observer.platform"
    view_label: "UDM"
    description: "Platform."
  }  # dimension observer__platform

  dimension: observer__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.observer.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "observer"
    label: "observer.platform_enum_name"
    view_label: "UDM"
    description: "Platform."
  }  # dimension observer__platform_enum_name

  dimension: observer__platform_version {
    type: string
    sql: ${TABLE}.observer.platform_version ;;
    group_label: "observer"
    label: "observer.platform_version"
    view_label: "UDM"
    description: "Platform version. For example, \"Microsoft Windows 1803\"."
  }  # dimension observer__platform_version

  dimension: observer__port {
    type: number
    value_format: "#"
    sql: ${TABLE}.observer.port ;;
    group_label: "observer"
    label: "observer.port"
    view_label: "UDM"
    description: "Source or destination network port number when a specific network connection is described within an event."
  }  # dimension observer__port

  dimension: observer__process {
    hidden: yes
  }  # dimension observer__process

  dimension: observer__process__command_line {
    type: string
    sql: ${TABLE}.observer.process.command_line ;;
    group_label: "observer"
    label: "observer.process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension observer__process__command_line

  dimension: observer__process__parent_pid {
    type: string
    sql: ${TABLE}.observer.process.parent_pid ;;
    group_label: "observer"
    group_item_label: "observer.process.parent_pid [D]"
    label: "observer.process.parent_pid"
    view_label: "UDM"
    description: "The ID of the parent process. Deprecated: use parent_process.pid instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__process__parent_pid

  dimension: observer__process__pid {
    type: string
    sql: ${TABLE}.observer.process.pid ;;
    group_label: "observer"
    label: "observer.process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension observer__process__pid

  dimension: observer__resource {
    hidden: yes
  }  # dimension observer__resource

  dimension: observer__resource__attribute {
    hidden: yes
  }  # dimension observer__resource__attribute

  dimension: observer__resource__attribute__cloud {
    hidden: yes
  }  # dimension observer__resource__attribute__cloud

  dimension: observer__resource__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.observer.resource.attribute.cloud.environment ;;
    group_label: "observer"
    label: "observer.resource.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension observer__resource__attribute__cloud__environment

  dimension: observer__resource__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.observer.resource.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "observer"
    label: "observer.resource.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension observer__resource__attribute__cloud__environment_enum_name

  dimension: observer__resource__attribute__labels {
    hidden: yes
  }  # dimension observer__resource__attribute__labels

  dimension: observer__resource__id {
    type: string
    sql: ${TABLE}.observer.resource.id ;;
    group_label: "observer"
    group_item_label: "observer.resource.id [D]"
    label: "observer.resource.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__resource__id

  dimension: observer__resource__name {
    type: string
    sql: ${TABLE}.observer.resource.name ;;
    group_label: "observer"
    label: "observer.resource.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension observer__resource__name

  dimension: observer__resource__parent {
    type: string
    sql: ${TABLE}.observer.resource.parent ;;
    group_label: "observer"
    group_item_label: "observer.resource.parent [D]"
    label: "observer.resource.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__resource__parent

  dimension: observer__resource__product_object_id {
    type: string
    sql: ${TABLE}.observer.resource.product_object_id ;;
    group_label: "observer"
    label: "observer.resource.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension observer__resource__product_object_id

  dimension: observer__resource__resource_subtype {
    type: string
    sql: ${TABLE}.observer.resource.resource_subtype ;;
    group_label: "observer"
    label: "observer.resource.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension observer__resource__resource_subtype

  dimension: observer__resource__resource_type {
    type: number
    sql: ${TABLE}.observer.resource.resource_type ;;
    group_label: "observer"
    label: "observer.resource.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension observer__resource__resource_type

  dimension: observer__resource__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.observer.resource.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "observer"
    label: "observer.resource.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension observer__resource__resource_type_enum_name

  dimension: observer__resource__type {
    type: string
    sql: ${TABLE}.observer.resource.type ;;
    group_label: "observer"
    group_item_label: "observer.resource.type [D]"
    label: "observer.resource.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension observer__resource__type

  dimension: observer__url {
    type: string
    sql: ${TABLE}.observer.url ;;
    group_label: "observer"
    label: "observer.url"
    view_label: "UDM"
    description: "The URL."
  }  # dimension observer__url

  dimension: observer__user {
    hidden: yes
  }  # dimension observer__user

  dimension: observer__user__attribute {
    hidden: yes
  }  # dimension observer__user__attribute

  dimension: observer__user__attribute__labels {
    hidden: yes
  }  # dimension observer__user__attribute__labels

  dimension: observer__user__email_addresses {
    hidden: yes
  }  # dimension observer__user__email_addresses

  dimension: observer__user__group_identifiers {
    hidden: yes
  }  # dimension observer__user__group_identifiers

  dimension: observer__user__product_object_id {
    type: string
    sql: ${TABLE}.observer.user.product_object_id ;;
    group_label: "observer"
    label: "observer.user.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension observer__user__product_object_id

  dimension: observer__user__user_display_name {
    type: string
    sql: ${TABLE}.observer.user.user_display_name ;;
    group_label: "observer"
    label: "observer.user.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension observer__user__user_display_name

  dimension: observer__user__userid {
    type: string
    sql: ${TABLE}.observer.user.userid ;;
    group_label: "observer"
    label: "observer.user.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension observer__user__userid

  dimension: principal {
    hidden: yes
  }  # dimension principal

  dimension: principal__administrative_domain {
    type: string
    sql: ${TABLE}.principal.administrative_domain ;;
    group_label: "principal"
    label: "principal.administrative_domain"
    view_label: "UDM"
    description: "Domain which the device belongs to (for example, the Microsoft Windows domain)."
  }  # dimension principal__administrative_domain

  dimension: principal__application {
    type: string
    sql: ${TABLE}.principal.application ;;
    group_label: "principal"
    label: "principal.application"
    view_label: "UDM"
    description: "The name of an application or service. Some SSO solutions only capture the name of a target application such as \"Atlassian\" or \"Chronicle\"."
  }  # dimension principal__application

  dimension: principal__artifact {
    hidden: yes
  }  # dimension principal__artifact

  dimension_group: principal__artifact__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.artifact.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.artifact.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.artifact.first_seen_time"
    view_label: "UDM"
    description: "First seen timestamp of the IP in the customer's environment."
  }  # dimension principal__artifact__first_seen_time

  dimension: principal__artifact__ip {
    type: string
    sql: ${TABLE}.principal.artifact.ip ;;
    group_label: "principal"
    label: "principal.artifact.ip"
    view_label: "UDM"
    description: "IP address of the artifact."
  }  # dimension principal__artifact__ip

  dimension_group: principal__artifact__last_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.artifact.last_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.artifact.last_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.artifact.last_seen_time"
    view_label: "UDM"
    description: "Last seen timestamp of the IP address in the customer's environment."
  }  # dimension principal__artifact__last_seen_time

  dimension: principal__artifact__network {
    hidden: yes
  }  # dimension principal__artifact__network

  dimension: principal__artifact__network__asn {
    type: string
    sql: ${TABLE}.principal.artifact.network.asn ;;
    group_label: "principal"
    label: "principal.artifact.network.asn"
    view_label: "UDM"
    description: "Autonomous system number."
  }  # dimension principal__artifact__network__asn

  dimension: principal__artifact__network__carrier_name {
    type: string
    sql: ${TABLE}.principal.artifact.network.carrier_name ;;
    group_label: "principal"
    label: "principal.artifact.network.carrier_name"
    view_label: "UDM"
    description: "Carrier identification."
  }  # dimension principal__artifact__network__carrier_name

  dimension: principal__artifact__network__http {
    hidden: yes
  }  # dimension principal__artifact__network__http

  dimension: principal__artifact__network__http__method {
    type: string
    sql: ${TABLE}.principal.artifact.network.http.method ;;
    group_label: "principal"
    label: "principal.artifact.network.http.method"
    view_label: "UDM"
    description: "The HTTP request method (e.g. \"GET\", \"POST\", \"PATCH\", \"DELETE\")."
  }  # dimension principal__artifact__network__http__method

  dimension: principal__artifact__network__session_id {
    type: string
    sql: ${TABLE}.principal.artifact.network.session_id ;;
    group_label: "principal"
    label: "principal.artifact.network.session_id"
    view_label: "UDM"
    description: "The ID of the network session."
  }  # dimension principal__artifact__network__session_id

  dimension: principal__asset {
    hidden: yes
  }  # dimension principal__asset

  dimension: principal__asset__asset_id {
    type: string
    sql: ${TABLE}.principal.asset.asset_id ;;
    group_label: "principal"
    label: "principal.asset.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension principal__asset__asset_id

  dimension: principal__asset__attribute {
    hidden: yes
  }  # dimension principal__asset__attribute

  dimension: principal__asset__attribute__cloud {
    hidden: yes
  }  # dimension principal__asset__attribute__cloud

  dimension: principal__asset__attribute__cloud__availability_zone {
    type: string
    sql: ${TABLE}.principal.asset.attribute.cloud.availability_zone ;;
    group_label: "principal"
    label: "principal.asset.attribute.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name)."
  }  # dimension principal__asset__attribute__cloud__availability_zone

  dimension: principal__asset__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.principal.asset.attribute.cloud.environment ;;
    group_label: "principal"
    label: "principal.asset.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension principal__asset__attribute__cloud__environment

  dimension: principal__asset__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.principal.asset.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "principal"
    label: "principal.asset.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension principal__asset__attribute__cloud__environment_enum_name

  dimension: principal__asset__attribute__cloud__project {
    hidden: yes
  }  # dimension principal__asset__attribute__cloud__project

  dimension: principal__asset__attribute__cloud__project__name {
    type: string
    sql: ${TABLE}.principal.asset.attribute.cloud.project.name ;;
    group_label: "principal"
    group_item_label: "principal.asset.attribute.cloud.project.name [D]"
    label: "principal.asset.attribute.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__attribute__cloud__project__name

  dimension: principal__asset__attribute__cloud__project__resource_type {
    type: number
    sql: ${TABLE}.principal.asset.attribute.cloud.project.resource_type ;;
    group_label: "principal"
    group_item_label: "principal.asset.attribute.cloud.project.resource_type [D]"
    label: "principal.asset.attribute.cloud.project.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__attribute__cloud__project__resource_type

  dimension: principal__asset__attribute__cloud__project__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.principal.asset.attribute.cloud.project.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "principal"
    group_item_label: "principal.asset.attribute.cloud.project.resource_type_enum_name [D]"
    label: "principal.asset.attribute.cloud.project.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__attribute__cloud__project__resource_type_enum_name

  dimension: principal__asset__attribute__cloud__vpc {
    hidden: yes
  }  # dimension principal__asset__attribute__cloud__vpc

  dimension: principal__asset__attribute__cloud__vpc__name {
    type: string
    sql: ${TABLE}.principal.asset.attribute.cloud.vpc.name ;;
    group_label: "principal"
    group_item_label: "principal.asset.attribute.cloud.vpc.name [D]"
    label: "principal.asset.attribute.cloud.vpc.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__attribute__cloud__vpc__name

  dimension: principal__asset__attribute__cloud__vpc__resource_type {
    type: number
    sql: ${TABLE}.principal.asset.attribute.cloud.vpc.resource_type ;;
    group_label: "principal"
    group_item_label: "principal.asset.attribute.cloud.vpc.resource_type [D]"
    label: "principal.asset.attribute.cloud.vpc.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__attribute__cloud__vpc__resource_type

  dimension: principal__asset__attribute__cloud__vpc__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.principal.asset.attribute.cloud.vpc.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "principal"
    group_item_label: "principal.asset.attribute.cloud.vpc.resource_type_enum_name [D]"
    label: "principal.asset.attribute.cloud.vpc.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__attribute__cloud__vpc__resource_type_enum_name

  dimension_group: principal__asset__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.asset.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.asset.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension principal__asset__attribute__creation_time

  dimension: principal__asset__attribute__labels {
    hidden: yes
  }  # dimension principal__asset__attribute__labels

  dimension_group: principal__asset__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.asset.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.asset.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension principal__asset__attribute__last_update_time

  dimension: principal__asset__attribute__roles {
    hidden: yes
  }  # dimension principal__asset__attribute__roles

  dimension: principal__asset__category {
    type: string
    sql: ${TABLE}.principal.asset.category ;;
    group_label: "principal"
    label: "principal.asset.category"
    view_label: "UDM"
    description: "The category of the asset (e.g. \"End User Asset\", \"Workstation\", \"Server\")."
  }  # dimension principal__asset__category

  dimension_group: principal__asset__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.asset.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.asset.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    group_item_label: "principal.asset.creation_time [D]"
    label: "principal.asset.creation_time"
    view_label: "UDM"
    description: "Time the asset was created or provisioned. Deprecate: creation_time should be populated in Attribute as generic metadata. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__creation_time

  dimension: principal__asset__deployment_status {
    type: number
    sql: ${TABLE}.principal.asset.deployment_status ;;
    group_label: "principal"
    label: "principal.asset.deployment_status"
    view_label: "UDM"
    description: "The deployment status of the asset for device lifecycle purposes."
  }  # dimension principal__asset__deployment_status

  dimension: principal__asset__deployment_status_enum_name {
    type: string
    suggestions: ["ACTIVE", "DECOMISSIONED", "DEPLOYMENT_STATUS_UNSPECIFIED", "PENDING_DECOMISSION"]
    sql: CASE ${TABLE}.principal.asset.deployment_status WHEN 0 THEN 'DEPLOYMENT_STATUS_UNSPECIFIED' WHEN 1 THEN 'ACTIVE' WHEN 2 THEN 'PENDING_DECOMISSION' WHEN 3 THEN 'DECOMISSIONED' END ;;
    group_label: "principal"
    label: "principal.asset.deployment_status_enum_name"
    view_label: "UDM"
    description: "The deployment status of the asset for device lifecycle purposes."
  }  # dimension principal__asset__deployment_status_enum_name

  dimension_group: principal__asset__first_discover_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.asset.first_discover_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.asset.first_discover_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.first_discover_time"
    view_label: "UDM"
    description: "Time the asset was first discovered (by asset management/discoverability software)."
  }  # dimension principal__asset__first_discover_time

  dimension_group: principal__asset__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.asset.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.asset.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.first_seen_time"
    view_label: "UDM"
    description: "The first observed time for an asset. The value is calculated on the basis of the first time the identifier was observed."
  }  # dimension principal__asset__first_seen_time

  dimension: principal__asset__hardware {
    hidden: yes
  }  # dimension principal__asset__hardware

  dimension: principal__asset__hostname {
    type: string
    sql: ${TABLE}.principal.asset.hostname ;;
    group_label: "principal"
    label: "principal.asset.hostname"
    view_label: "UDM"
    description: "Asset hostname or domain name field."
  }  # dimension principal__asset__hostname

  dimension: principal__asset__ip {
    hidden: yes
  }  # dimension principal__asset__ip

  dimension: principal__asset__labels {
    hidden: yes
  }  # dimension principal__asset__labels

  dimension_group: principal__asset__last_boot_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.asset.last_boot_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.asset.last_boot_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.last_boot_time"
    view_label: "UDM"
    description: "Time the asset was last boot started."
  }  # dimension principal__asset__last_boot_time

  dimension_group: principal__asset__last_discover_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.asset.last_discover_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.asset.last_discover_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.last_discover_time"
    view_label: "UDM"
    description: "Time the asset was last discovered (by asset management/discoverability software)."
  }  # dimension principal__asset__last_discover_time

  dimension: principal__asset__location {
    hidden: yes
  }  # dimension principal__asset__location

  dimension: principal__asset__location__city {
    type: string
    sql: ${TABLE}.principal.asset.location.city ;;
    group_label: "principal"
    label: "principal.asset.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension principal__asset__location__city

  dimension: principal__asset__location__country_or_region {
    type: string
    sql: ${TABLE}.principal.asset.location.country_or_region ;;
    group_label: "principal"
    label: "principal.asset.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension principal__asset__location__country_or_region

  dimension: principal__asset__location__floor_name {
    type: string
    sql: ${TABLE}.principal.asset.location.floor_name ;;
    group_label: "principal"
    label: "principal.asset.location.floor_name"
    view_label: "UDM"
    description: "Floor name, number or a combination of the two for a building. (e.g. \"1-A\")."
  }  # dimension principal__asset__location__floor_name

  dimension: principal__asset__location__name {
    type: string
    sql: ${TABLE}.principal.asset.location.name ;;
    group_label: "principal"
    label: "principal.asset.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension principal__asset__location__name

  dimension: principal__asset__location__region_coordinates {
    type: location
    sql_latitude: ${TABLE}.principal.asset.location.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.principal.asset.location.region_coordinates.longitude ;;
    group_label: "principal"
    group_item_label: "principal.asset.location.region_coordinates [L]"
    label: "principal.asset.location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [L]: This is a location field and can be used in maps."
  }  # dimension principal__asset__location__region_coordinates

  dimension: principal__asset__location__region_latitude {
    type: number
    sql: ${TABLE}.principal.asset.location.region_latitude ;;
    group_label: "principal"
    group_item_label: "principal.asset.location.region_latitude [D]"
    label: "principal.asset.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__location__region_latitude

  dimension: principal__asset__location__region_longitude {
    type: number
    sql: ${TABLE}.principal.asset.location.region_longitude ;;
    group_label: "principal"
    group_item_label: "principal.asset.location.region_longitude [D]"
    label: "principal.asset.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__asset__location__region_longitude

  dimension: principal__asset__location__location {
    type: location
    sql_latitude: ${TABLE}.principal.asset.location.region_latitude ;;
    sql_longitude: ${TABLE}.principal.asset.location.region_longitude ;;
    group_label: "principal"
    group_item_label: "principal.asset.location.location [D][L]"
    label: "principal.asset.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension principal__asset__location__location

  dimension: principal__asset__location__state {
    type: string
    sql: ${TABLE}.principal.asset.location.state ;;
    group_label: "principal"
    label: "principal.asset.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension principal__asset__location__state

  dimension: principal__asset__mac {
    hidden: yes
  }  # dimension principal__asset__mac

  dimension: principal__asset__nat_ip {
    hidden: yes
  }  # dimension principal__asset__nat_ip

  dimension: principal__asset__network_domain {
    type: string
    sql: ${TABLE}.principal.asset.network_domain ;;
    group_label: "principal"
    label: "principal.asset.network_domain"
    view_label: "UDM"
    description: "The network domain of the asset (e.g. \"corp.acme.com\")"
  }  # dimension principal__asset__network_domain

  dimension: principal__asset__platform_software {
    hidden: yes
  }  # dimension principal__asset__platform_software

  dimension: principal__asset__platform_software__platform {
    type: number
    sql: ${TABLE}.principal.asset.platform_software.platform ;;
    group_label: "principal"
    label: "principal.asset.platform_software.platform"
    view_label: "UDM"
    description: "The platform operating system."
  }  # dimension principal__asset__platform_software__platform

  dimension: principal__asset__platform_software__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.principal.asset.platform_software.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "principal"
    label: "principal.asset.platform_software.platform_enum_name"
    view_label: "UDM"
    description: "The platform operating system."
  }  # dimension principal__asset__platform_software__platform_enum_name

  dimension: principal__asset__platform_software__platform_patch_level {
    type: string
    sql: ${TABLE}.principal.asset.platform_software.platform_patch_level ;;
    group_label: "principal"
    label: "principal.asset.platform_software.platform_patch_level"
    view_label: "UDM"
    description: "The platform software patch level ( e.g. \"Build 17134.48\", \"SP1\")."
  }  # dimension principal__asset__platform_software__platform_patch_level

  dimension: principal__asset__platform_software__platform_version {
    type: string
    sql: ${TABLE}.principal.asset.platform_software.platform_version ;;
    group_label: "principal"
    label: "principal.asset.platform_software.platform_version"
    view_label: "UDM"
    description: "The platform software version ( e.g. \"Microsoft Windows 1803\")."
  }  # dimension principal__asset__platform_software__platform_version

  dimension: principal__asset__product_object_id {
    type: string
    sql: ${TABLE}.principal.asset.product_object_id ;;
    group_label: "principal"
    label: "principal.asset.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID  or similar)."
  }  # dimension principal__asset__product_object_id

  dimension: principal__asset__software {
    hidden: yes
  }  # dimension principal__asset__software

  dimension_group: principal__asset__system_last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.asset.system_last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.asset.system_last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.system_last_update_time"
    view_label: "UDM"
    description: "Time the asset system or OS was last updated. For all other operations that are not system updates (such as resizing a vm, etc.) use Attribute.last_update_time."
  }  # dimension principal__asset__system_last_update_time

  dimension: principal__asset__type {
    type: number
    sql: ${TABLE}.principal.asset.type ;;
    group_label: "principal"
    label: "principal.asset.type"
    view_label: "UDM"
    description: "The type of the asset (e.g. workstation or laptop or server)."
  }  # dimension principal__asset__type

  dimension: principal__asset__type_enum_name {
    type: string
    suggestions: ["IOT", "LAPTOP", "MOBILE", "NETWORK_ATTACHED_STORAGE", "PRINTER", "ROLE_UNSPECIFIED", "SCANNER", "SERVER", "TAPE_LIBRARY", "WORKSTATION"]
    sql: CASE ${TABLE}.principal.asset.type WHEN 0 THEN 'ROLE_UNSPECIFIED' WHEN 1 THEN 'WORKSTATION' WHEN 2 THEN 'LAPTOP' WHEN 3 THEN 'IOT' WHEN 4 THEN 'NETWORK_ATTACHED_STORAGE' WHEN 5 THEN 'PRINTER' WHEN 6 THEN 'SCANNER' WHEN 7 THEN 'SERVER' WHEN 8 THEN 'TAPE_LIBRARY' WHEN 9 THEN 'MOBILE' END ;;
    group_label: "principal"
    label: "principal.asset.type_enum_name"
    view_label: "UDM"
    description: "The type of the asset (e.g. workstation or laptop or server)."
  }  # dimension principal__asset__type_enum_name

  dimension: principal__asset__vulnerabilities {
    hidden: yes
  }  # dimension principal__asset__vulnerabilities

  dimension: principal__asset_id {
    type: string
    sql: ${TABLE}.principal.asset_id ;;
    group_label: "principal"
    label: "principal.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension principal__asset_id

  dimension: principal__cloud {
    hidden: yes
  }  # dimension principal__cloud

  dimension: principal__cloud__availability_zone {
    type: string
    sql: ${TABLE}.principal.cloud.availability_zone ;;
    group_label: "principal"
    group_item_label: "principal.cloud.availability_zone [D]"
    label: "principal.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__availability_zone

  dimension: principal__cloud__environment {
    type: number
    sql: ${TABLE}.principal.cloud.environment ;;
    group_label: "principal"
    group_item_label: "principal.cloud.environment [D]"
    label: "principal.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__environment

  dimension: principal__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.principal.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "principal"
    group_item_label: "principal.cloud.environment_enum_name [D]"
    label: "principal.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__environment_enum_name

  dimension: principal__cloud__project {
    hidden: yes
  }  # dimension principal__cloud__project

  dimension: principal__cloud__project__id {
    type: string
    sql: ${TABLE}.principal.cloud.project.id ;;
    group_label: "principal"
    group_item_label: "principal.cloud.project.id [D]"
    label: "principal.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__project__id

  dimension: principal__cloud__project__name {
    type: string
    sql: ${TABLE}.principal.cloud.project.name ;;
    group_label: "principal"
    group_item_label: "principal.cloud.project.name [D]"
    label: "principal.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__project__name

  dimension: principal__cloud__project__parent {
    type: string
    sql: ${TABLE}.principal.cloud.project.parent ;;
    group_label: "principal"
    group_item_label: "principal.cloud.project.parent [D]"
    label: "principal.cloud.project.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__project__parent

  dimension: principal__cloud__project__product_object_id {
    type: string
    sql: ${TABLE}.principal.cloud.project.product_object_id ;;
    group_label: "principal"
    group_item_label: "principal.cloud.project.product_object_id [D]"
    label: "principal.cloud.project.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__project__product_object_id

  dimension: principal__cloud__project__resource_subtype {
    type: string
    sql: ${TABLE}.principal.cloud.project.resource_subtype ;;
    group_label: "principal"
    group_item_label: "principal.cloud.project.resource_subtype [D]"
    label: "principal.cloud.project.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\"). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__project__resource_subtype

  dimension: principal__cloud__project__type {
    type: string
    sql: ${TABLE}.principal.cloud.project.type ;;
    group_label: "principal"
    group_item_label: "principal.cloud.project.type [D]"
    label: "principal.cloud.project.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__project__type

  dimension: principal__cloud__vpc {
    hidden: yes
  }  # dimension principal__cloud__vpc

  dimension: principal__cloud__vpc__id {
    type: string
    sql: ${TABLE}.principal.cloud.vpc.id ;;
    group_label: "principal"
    group_item_label: "principal.cloud.vpc.id [D]"
    label: "principal.cloud.vpc.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__vpc__id

  dimension: principal__cloud__vpc__name {
    type: string
    sql: ${TABLE}.principal.cloud.vpc.name ;;
    group_label: "principal"
    group_item_label: "principal.cloud.vpc.name [D]"
    label: "principal.cloud.vpc.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__vpc__name

  dimension: principal__cloud__vpc__product_object_id {
    type: string
    sql: ${TABLE}.principal.cloud.vpc.product_object_id ;;
    group_label: "principal"
    group_item_label: "principal.cloud.vpc.product_object_id [D]"
    label: "principal.cloud.vpc.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__vpc__product_object_id

  dimension: principal__cloud__vpc__resource_type {
    type: number
    sql: ${TABLE}.principal.cloud.vpc.resource_type ;;
    group_label: "principal"
    group_item_label: "principal.cloud.vpc.resource_type [D]"
    label: "principal.cloud.vpc.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__vpc__resource_type

  dimension: principal__cloud__vpc__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.principal.cloud.vpc.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "principal"
    group_item_label: "principal.cloud.vpc.resource_type_enum_name [D]"
    label: "principal.cloud.vpc.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__cloud__vpc__resource_type_enum_name

  dimension: principal__domain {
    hidden: yes
  }  # dimension principal__domain

  dimension: principal__domain__admin {
    hidden: yes
  }  # dimension principal__domain__admin

  dimension: principal__domain__admin__userid {
    type: string
    sql: ${TABLE}.principal.domain.admin.userid ;;
    group_label: "principal"
    label: "principal.domain.admin.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension principal__domain__admin__userid

  dimension: principal__domain__billing {
    hidden: yes
  }  # dimension principal__domain__billing

  dimension: principal__domain__billing__userid {
    type: string
    sql: ${TABLE}.principal.domain.billing.userid ;;
    group_label: "principal"
    label: "principal.domain.billing.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension principal__domain__billing__userid

  dimension: principal__domain__contact_email {
    type: string
    sql: ${TABLE}.principal.domain.contact_email ;;
    group_label: "principal"
    label: "principal.domain.contact_email"
    view_label: "UDM"
    description: "Contact email address."
  }  # dimension principal__domain__contact_email

  dimension_group: principal__domain__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.domain.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.domain.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.domain.first_seen_time"
    view_label: "UDM"
    description: "First seen timestamp of the domain in the customer's environment."
  }  # dimension principal__domain__first_seen_time

  dimension_group: principal__domain__last_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.domain.last_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.domain.last_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.domain.last_seen_time"
    view_label: "UDM"
    description: "Last seen timestamp of the domain in the customer's environment."
  }  # dimension principal__domain__last_seen_time

  dimension: principal__domain__name {
    type: string
    sql: ${TABLE}.principal.domain.name ;;
    group_label: "principal"
    label: "principal.domain.name"
    view_label: "UDM"
    description: "The domain name."
  }  # dimension principal__domain__name

  dimension: principal__domain__name_server {
    hidden: yes
  }  # dimension principal__domain__name_server

  dimension: principal__domain__prevalence {
    hidden: yes
  }  # dimension principal__domain__prevalence

  dimension: principal__domain__prevalence__day_count {
    type: number
    sql: ${TABLE}.principal.domain.prevalence.day_count ;;
    group_label: "principal"
    label: "principal.domain.prevalence.day_count"
    view_label: "UDM"
    description: "The number of days over which rolling_max is calculated."
  }  # dimension principal__domain__prevalence__day_count

  dimension: principal__domain__prevalence__rolling_max {
    type: number
    sql: ${TABLE}.principal.domain.prevalence.rolling_max ;;
    group_label: "principal"
    label: "principal.domain.prevalence.rolling_max"
    view_label: "UDM"
    description: "The maximum number of assets per day accessing the resource over the trailing day_count days."
  }  # dimension principal__domain__prevalence__rolling_max

  dimension: principal__domain__registrant {
    hidden: yes
  }  # dimension principal__domain__registrant

  dimension: principal__domain__registrant__personal_address {
    hidden: yes
  }  # dimension principal__domain__registrant__personal_address

  dimension: principal__domain__registrant__personal_address__floor_name {
    type: string
    sql: ${TABLE}.principal.domain.registrant.personal_address.floor_name ;;
    group_label: "principal"
    label: "principal.domain.registrant.personal_address.floor_name"
    view_label: "UDM"
    description: "Floor name, number or a combination of the two for a building. (e.g. \"1-A\")."
  }  # dimension principal__domain__registrant__personal_address__floor_name

  dimension: principal__domain__status {
    type: string
    sql: ${TABLE}.principal.domain.status ;;
    group_label: "principal"
    label: "principal.domain.status"
    view_label: "UDM"
    description: "Domain status. See <a href=\"https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en\">https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en</a> for meanings of possible values"
  }  # dimension principal__domain__status

  dimension: principal__domain__tech {
    hidden: yes
  }  # dimension principal__domain__tech

  dimension: principal__domain__tech__group_identifiers {
    hidden: yes
  }  # dimension principal__domain__tech__group_identifiers

  dimension: principal__domain__tech__product_object_id {
    type: string
    sql: ${TABLE}.principal.domain.tech.product_object_id ;;
    group_label: "principal"
    label: "principal.domain.tech.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension principal__domain__tech__product_object_id

  dimension: principal__domain__whois_server {
    type: string
    sql: ${TABLE}.principal.domain.whois_server ;;
    group_label: "principal"
    label: "principal.domain.whois_server"
    view_label: "UDM"
    description: "Whois server name."
  }  # dimension principal__domain__whois_server

  dimension: principal__group {
    hidden: yes
  }  # dimension principal__group

  dimension: principal__group__attribute {
    hidden: yes
  }  # dimension principal__group__attribute

  dimension: principal__group__attribute__labels {
    hidden: yes
  }  # dimension principal__group__attribute__labels

  dimension: principal__group__attribute__roles {
    hidden: yes
  }  # dimension principal__group__attribute__roles

  dimension: principal__group__email_addresses {
    hidden: yes
  }  # dimension principal__group__email_addresses

  dimension: principal__group__group_display_name {
    type: string
    sql: ${TABLE}.principal.group.group_display_name ;;
    group_label: "principal"
    label: "principal.group.group_display_name"
    view_label: "UDM"
    description: "Group display name. e.g. \"Finance\"."
  }  # dimension principal__group__group_display_name

  dimension: principal__group__product_object_id {
    type: string
    sql: ${TABLE}.principal.group.product_object_id ;;
    group_label: "principal"
    label: "principal.group.product_object_id"
    view_label: "UDM"
    description: "Product globally unique user object identifier, such as an LDAP Object Identifier."
  }  # dimension principal__group__product_object_id

  dimension: principal__group__windows_sid {
    type: string
    sql: ${TABLE}.principal.group.windows_sid ;;
    group_label: "principal"
    label: "principal.group.windows_sid"
    view_label: "UDM"
    description: "Microsoft Windows SID of the group."
  }  # dimension principal__group__windows_sid

  dimension: principal__hostname {
    type: string
    sql: ${TABLE}.principal.hostname ;;
    group_label: "principal"
    label: "principal.hostname"
    view_label: "UDM"
    description: "Client hostname or domain name field. Hostname also doubles as the domain for remote entities."
  }  # dimension principal__hostname

  dimension: principal__investigation {
    hidden: yes
  }  # dimension principal__investigation

  dimension: principal__investigation__comments {
    hidden: yes
  }  # dimension principal__investigation__comments

  dimension: principal__investigation__priority {
    type: number
    sql: ${TABLE}.principal.investigation.priority ;;
    group_label: "principal"
    label: "principal.investigation.priority"
    view_label: "UDM"
    description: "Priority of the Alert or Finding set by analyst."
  }  # dimension principal__investigation__priority

  dimension: principal__investigation__priority_enum_name {
    type: string
    suggestions: ["PRIORITY_CRITICAL", "PRIORITY_HIGH", "PRIORITY_INFO", "PRIORITY_LOW", "PRIORITY_MEDIUM", "PRIORITY_UNSPECIFIED"]
    sql: CASE ${TABLE}.principal.investigation.priority WHEN 0 THEN 'PRIORITY_UNSPECIFIED' WHEN 100 THEN 'PRIORITY_INFO' WHEN 200 THEN 'PRIORITY_LOW' WHEN 300 THEN 'PRIORITY_MEDIUM' WHEN 400 THEN 'PRIORITY_HIGH' WHEN 500 THEN 'PRIORITY_CRITICAL' END ;;
    group_label: "principal"
    label: "principal.investigation.priority_enum_name"
    view_label: "UDM"
    description: "Priority of the Alert or Finding set by analyst."
  }  # dimension principal__investigation__priority_enum_name

  dimension: principal__investigation__risk_score {
    type: number
    sql: ${TABLE}.principal.investigation.risk_score ;;
    group_label: "principal"
    label: "principal.investigation.risk_score"
    view_label: "UDM"
    description: "Risk score for a finding set by an analyst."
  }  # dimension principal__investigation__risk_score

  dimension: principal__investigation__root_cause {
    type: string
    sql: ${TABLE}.principal.investigation.root_cause ;;
    group_label: "principal"
    label: "principal.investigation.root_cause"
    view_label: "UDM"
    description: "Root cause of the Alert or Finding set by analyst."
  }  # dimension principal__investigation__root_cause

  dimension: principal__investigation__status {
    type: number
    sql: ${TABLE}.principal.investigation.status ;;
    group_label: "principal"
    label: "principal.investigation.status"
    view_label: "UDM"
    description: "Describes the workflow status of a finding."
  }  # dimension principal__investigation__status

  dimension: principal__investigation__status_enum_name {
    type: string
    suggestions: ["CLOSED", "NEW", "OPEN", "REVIEWED", "STATUS_UNSPECIFIED"]
    sql: CASE ${TABLE}.principal.investigation.status WHEN 0 THEN 'STATUS_UNSPECIFIED' WHEN 1 THEN 'NEW' WHEN 2 THEN 'REVIEWED' WHEN 3 THEN 'CLOSED' WHEN 4 THEN 'OPEN' END ;;
    group_label: "principal"
    label: "principal.investigation.status_enum_name"
    view_label: "UDM"
    description: "Describes the workflow status of a finding."
  }  # dimension principal__investigation__status_enum_name

  dimension: principal__investigation__verdict {
    type: number
    sql: ${TABLE}.principal.investigation.verdict ;;
    group_label: "principal"
    label: "principal.investigation.verdict"
    view_label: "UDM"
    description: "Describes reason a finding investigation was resolved."
  }  # dimension principal__investigation__verdict

  dimension: principal__investigation__verdict_enum_name {
    type: string
    suggestions: ["FALSE_POSITIVE", "TRUE_POSITIVE", "VERDICT_UNSPECIFIED"]
    sql: CASE ${TABLE}.principal.investigation.verdict WHEN 0 THEN 'VERDICT_UNSPECIFIED' WHEN 1 THEN 'TRUE_POSITIVE' WHEN 2 THEN 'FALSE_POSITIVE' END ;;
    group_label: "principal"
    label: "principal.investigation.verdict_enum_name"
    view_label: "UDM"
    description: "Describes reason a finding investigation was resolved."
  }  # dimension principal__investigation__verdict_enum_name

  dimension: principal__ip {
    hidden: yes
  }  # dimension principal__ip

  dimension: principal__ip_geo_artifact {
    hidden: yes
  }  # dimension principal__ip_geo_artifact

  dimension: principal__ip_location {
    hidden: yes
  }  # dimension principal__ip_location

  dimension: principal__labels {
    hidden: yes
  }  # dimension principal__labels

  dimension: principal__location {
    hidden: yes
  }  # dimension principal__location

  dimension: principal__location__city {
    type: string
    sql: ${TABLE}.principal.location.city ;;
    group_label: "principal"
    label: "principal.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension principal__location__city

  dimension: principal__location__country_or_region {
    type: string
    sql: ${TABLE}.principal.location.country_or_region ;;
    group_label: "principal"
    label: "principal.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension principal__location__country_or_region

  dimension: principal__location__floor_name {
    type: string
    sql: ${TABLE}.principal.location.floor_name ;;
    group_label: "principal"
    label: "principal.location.floor_name"
    view_label: "UDM"
    description: "Floor name, number or a combination of the two for a building. (e.g. \"1-A\")."
  }  # dimension principal__location__floor_name

  dimension: principal__location__name {
    type: string
    sql: ${TABLE}.principal.location.name ;;
    group_label: "principal"
    label: "principal.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension principal__location__name

  dimension: principal__location__region_coordinates {
    type: location
    sql_latitude: ${TABLE}.principal.location.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.principal.location.region_coordinates.longitude ;;
    group_label: "principal"
    group_item_label: "principal.location.region_coordinates [L]"
    label: "principal.location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [L]: This is a location field and can be used in maps."
  }  # dimension principal__location__region_coordinates

  dimension: principal__location__region_latitude {
    type: number
    sql: ${TABLE}.principal.location.region_latitude ;;
    group_label: "principal"
    group_item_label: "principal.location.region_latitude [D]"
    label: "principal.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__location__region_latitude

  dimension: principal__location__region_longitude {
    type: number
    sql: ${TABLE}.principal.location.region_longitude ;;
    group_label: "principal"
    group_item_label: "principal.location.region_longitude [D]"
    label: "principal.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__location__region_longitude

  dimension: principal__location__location {
    type: location
    sql_latitude: ${TABLE}.principal.location.region_latitude ;;
    sql_longitude: ${TABLE}.principal.location.region_longitude ;;
    group_label: "principal"
    group_item_label: "principal.location.location [D][L]"
    label: "principal.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension principal__location__location

  dimension: principal__location__state {
    type: string
    sql: ${TABLE}.principal.location.state ;;
    group_label: "principal"
    label: "principal.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension principal__location__state

  dimension: principal__mac {
    hidden: yes
  }  # dimension principal__mac

  dimension: principal__namespace {
    type: string
    sql: ${TABLE}.principal.namespace ;;
    group_label: "principal"
    label: "principal.namespace"
    view_label: "UDM"
    description: "Namespace which the device belongs to (e.g. AD forest) Uses for this field include Microsoft Windows AD forest, name of subsidiary or acquisition, etc."
  }  # dimension principal__namespace

  dimension: principal__nat_ip {
    hidden: yes
  }  # dimension principal__nat_ip

  dimension: principal__nat_port {
    type: number
    value_format: "#"
    sql: ${TABLE}.principal.nat_port ;;
    group_label: "principal"
    label: "principal.nat_port"
    view_label: "UDM"
    description: "NAT external network port number when a specific network connection is described within an event."
  }  # dimension principal__nat_port

  dimension: principal__network {
    hidden: yes
  }  # dimension principal__network

  dimension: principal__network__asn {
    type: string
    sql: ${TABLE}.principal.network.asn ;;
    group_label: "principal"
    label: "principal.network.asn"
    view_label: "UDM"
    description: "Autonomous system number."
  }  # dimension principal__network__asn

  dimension: principal__network__dns {
    hidden: yes
  }  # dimension principal__network__dns

  dimension: principal__network__dns__additional {
    hidden: yes
  }  # dimension principal__network__dns__additional

  dimension: principal__network__dns__id {
    type: number
    sql: ${TABLE}.principal.network.dns.id ;;
    group_label: "principal"
    label: "principal.network.dns.id"
    view_label: "UDM"
    description: "DNS query id."
  }  # dimension principal__network__dns__id

  dimension: principal__network__dns__questions {
    hidden: yes
  }  # dimension principal__network__dns__questions

  dimension: principal__network__http {
    hidden: yes
  }  # dimension principal__network__http

  dimension: principal__network__http__method {
    type: string
    sql: ${TABLE}.principal.network.http.method ;;
    group_label: "principal"
    label: "principal.network.http.method"
    view_label: "UDM"
    description: "The HTTP request method (e.g. \"GET\", \"POST\", \"PATCH\", \"DELETE\")."
  }  # dimension principal__network__http__method

  dimension: principal__network__http__referral_url {
    type: string
    sql: ${TABLE}.principal.network.http.referral_url ;;
    group_label: "principal"
    label: "principal.network.http.referral_url"
    view_label: "UDM"
    description: "The URL for the HTTP referer."
  }  # dimension principal__network__http__referral_url

  dimension: principal__network__http__user_agent {
    type: string
    sql: ${TABLE}.principal.network.http.user_agent ;;
    group_label: "principal"
    label: "principal.network.http.user_agent"
    view_label: "UDM"
    description: "The User-Agent request header which includes the application type, operating system, software vendor or software version of the requesting software user agent."
  }  # dimension principal__network__http__user_agent

  dimension: principal__network__organization_name {
    type: string
    sql: ${TABLE}.principal.network.organization_name ;;
    group_label: "principal"
    label: "principal.network.organization_name"
    view_label: "UDM"
    description: "Organization name (e.g Google)."
  }  # dimension principal__network__organization_name

  dimension: principal__network__parent_session_id {
    type: string
    sql: ${TABLE}.principal.network.parent_session_id ;;
    group_label: "principal"
    label: "principal.network.parent_session_id"
    view_label: "UDM"
    description: "The ID of the parent network session."
  }  # dimension principal__network__parent_session_id

  dimension: principal__network__session_id {
    type: string
    sql: ${TABLE}.principal.network.session_id ;;
    group_label: "principal"
    label: "principal.network.session_id"
    view_label: "UDM"
    description: "The ID of the network session."
  }  # dimension principal__network__session_id

  dimension: principal__network__tls {
    hidden: yes
  }  # dimension principal__network__tls

  dimension: principal__network__tls__client {
    hidden: yes
  }  # dimension principal__network__tls__client

  dimension: principal__network__tls__client__certificate {
    hidden: yes
  }  # dimension principal__network__tls__client__certificate

  dimension: principal__network__tls__client__certificate__issuer {
    type: string
    sql: ${TABLE}.principal.network.tls.client.certificate.issuer ;;
    group_label: "principal"
    label: "principal.network.tls.client.certificate.issuer"
    view_label: "UDM"
    description: "Issuer of the certificate."
  }  # dimension principal__network__tls__client__certificate__issuer

  dimension: principal__network__tls__client__certificate__serial {
    type: string
    sql: ${TABLE}.principal.network.tls.client.certificate.serial ;;
    group_label: "principal"
    label: "principal.network.tls.client.certificate.serial"
    view_label: "UDM"
    description: "Certificate serial number."
  }  # dimension principal__network__tls__client__certificate__serial

  dimension: principal__network__tls__client__certificate__subject {
    type: string
    sql: ${TABLE}.principal.network.tls.client.certificate.subject ;;
    group_label: "principal"
    label: "principal.network.tls.client.certificate.subject"
    view_label: "UDM"
    description: "Subject of the certificate."
  }  # dimension principal__network__tls__client__certificate__subject

  dimension: principal__platform {
    type: number
    sql: ${TABLE}.principal.platform ;;
    group_label: "principal"
    label: "principal.platform"
    view_label: "UDM"
    description: "Platform."
  }  # dimension principal__platform

  dimension: principal__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.principal.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "principal"
    label: "principal.platform_enum_name"
    view_label: "UDM"
    description: "Platform."
  }  # dimension principal__platform_enum_name

  dimension: principal__platform_patch_level {
    type: string
    sql: ${TABLE}.principal.platform_patch_level ;;
    group_label: "principal"
    label: "principal.platform_patch_level"
    view_label: "UDM"
    description: "Platform patch level. For example, \"Build 17134.48\""
  }  # dimension principal__platform_patch_level

  dimension: principal__platform_version {
    type: string
    sql: ${TABLE}.principal.platform_version ;;
    group_label: "principal"
    label: "principal.platform_version"
    view_label: "UDM"
    description: "Platform version. For example, \"Microsoft Windows 1803\"."
  }  # dimension principal__platform_version

  dimension: principal__port {
    type: number
    value_format: "#"
    sql: ${TABLE}.principal.port ;;
    group_label: "principal"
    label: "principal.port"
    view_label: "UDM"
    description: "Source or destination network port number when a specific network connection is described within an event."
  }  # dimension principal__port

  dimension: principal__process {
    hidden: yes
  }  # dimension principal__process

  dimension: principal__process__access_mask {
    type: number
    sql: ${TABLE}.principal.process.access_mask ;;
    group_label: "principal"
    label: "principal.process.access_mask"
    view_label: "UDM"
    description: "A bit mask representing the level of access."
  }  # dimension principal__process__access_mask

  dimension: principal__process__command_line {
    type: string
    sql: ${TABLE}.principal.process.command_line ;;
    group_label: "principal"
    label: "principal.process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension principal__process__command_line

  dimension: principal__process__command_line_history {
    hidden: yes
  }  # dimension principal__process__command_line_history

  dimension: principal__process__file {
    hidden: yes
  }  # dimension principal__process__file

  dimension: principal__process__file__authentihash {
    type: string
    sql: ${TABLE}.principal.process.file.authentihash ;;
    group_label: "principal"
    label: "principal.process.file.authentihash"
    view_label: "UDM"
    description: "Authentihash of the file."
  }  # dimension principal__process__file__authentihash

  dimension: principal__process__file__capabilities_tags {
    hidden: yes
  }  # dimension principal__process__file__capabilities_tags

  dimension: principal__process__file__file_metadata {
    hidden: yes
  }  # dimension principal__process__file__file_metadata

  dimension: principal__process__file__file_metadata__pe {
    hidden: yes
  }  # dimension principal__process__file__file_metadata__pe

  dimension: principal__process__file__file_metadata__pe__import_hash {
    type: string
    sql: ${TABLE}.principal.process.file.file_metadata.pe.import_hash ;;
    group_label: "principal"
    group_item_label: "principal.process.file.file_metadata.pe.import_hash [D]"
    label: "principal.process.file.file_metadata.pe.import_hash"
    view_label: "UDM"
    description: "Hash of PE imports. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__process__file__file_metadata__pe__import_hash

  dimension: principal__process__file__file_type {
    type: number
    sql: ${TABLE}.principal.process.file.file_type ;;
    group_label: "principal"
    label: "principal.process.file.file_type"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension principal__process__file__file_type

  dimension: principal__process__file__file_type_enum_name {
    type: string
    suggestions: ["FILE_TYPE_ACE", "FILE_TYPE_ANDROID", "FILE_TYPE_APPLE", "FILE_TYPE_APPLEDOUBLE", "FILE_TYPE_APPLESCRIPT", "FILE_TYPE_APPLESCRIPT_COMPILED", "FILE_TYPE_APPLESINGLE", "FILE_TYPE_APPLE_PLIST", "FILE_TYPE_ARC", "FILE_TYPE_ARJ", "FILE_TYPE_ASD", "FILE_TYPE_ASF", "FILE_TYPE_AVI", "FILE_TYPE_AWK", "FILE_TYPE_BLACKHOLE", "FILE_TYPE_BMP", "FILE_TYPE_BZIP", "FILE_TYPE_C", "FILE_TYPE_CAB", "FILE_TYPE_CAP", "FILE_TYPE_CHM", "FILE_TYPE_COFF", "FILE_TYPE_COOKIE", "FILE_TYPE_CPP", "FILE_TYPE_CRX", "FILE_TYPE_DEB", "FILE_TYPE_DIB", "FILE_TYPE_DIVX", "FILE_TYPE_DMG", "FILE_TYPE_DOC", "FILE_TYPE_DOCX", "FILE_TYPE_DOS_COM", "FILE_TYPE_DOS_EXE", "FILE_TYPE_DYALOG", "FILE_TYPE_DZIP", "FILE_TYPE_EBOOK", "FILE_TYPE_ELF", "FILE_TYPE_EMAIL_TYPE", "FILE_TYPE_EMF", "FILE_TYPE_EOT", "FILE_TYPE_EPS", "FILE_TYPE_FLA", "FILE_TYPE_FLAC", "FILE_TYPE_FLC", "FILE_TYPE_FLI", "FILE_TYPE_FLV", "FILE_TYPE_FORTRAN", "FILE_TYPE_FPX", "FILE_TYPE_GIF", "FILE_TYPE_GIMP", "FILE_TYPE_GUL", "FILE_TYPE_GZIP", "FILE_TYPE_HTML", "FILE_TYPE_HWP", "FILE_TYPE_ICO", "FILE_TYPE_IN_DESIGN", "FILE_TYPE_IPHONE", "FILE_TYPE_ISOIMAGE", "FILE_TYPE_JAR", "FILE_TYPE_JAVA", "FILE_TYPE_JAVASCRIPT", "FILE_TYPE_JAVA_BYTECODE", "FILE_TYPE_JNG", "FILE_TYPE_JPEG", "FILE_TYPE_KGB", "FILE_TYPE_LATEX", "FILE_TYPE_LINUX", "FILE_TYPE_LINUX_KERNEL", "FILE_TYPE_LNK", "FILE_TYPE_MACH_O", "FILE_TYPE_MACINTOSH", "FILE_TYPE_MACINTOSH_HFS", "FILE_TYPE_MACINTOSH_LIB", "FILE_TYPE_MIDI", "FILE_TYPE_MOV", "FILE_TYPE_MP3", "FILE_TYPE_MP4", "FILE_TYPE_MPEG", "FILE_TYPE_MSCOMPRESS", "FILE_TYPE_MSI", "FILE_TYPE_NE_DLL", "FILE_TYPE_NE_EXE", "FILE_TYPE_ODF", "FILE_TYPE_ODG", "FILE_TYPE_ODP", "FILE_TYPE_ODS", "FILE_TYPE_ODT", "FILE_TYPE_OGG", "FILE_TYPE_OUTLOOK", "FILE_TYPE_PALMOS", "FILE_TYPE_PASCAL", "FILE_TYPE_PDF", "FILE_TYPE_PERL", "FILE_TYPE_PE_DLL", "FILE_TYPE_PE_EXE", "FILE_TYPE_PHP", "FILE_TYPE_PKG", "FILE_TYPE_PNG", "FILE_TYPE_POWERSHELL", "FILE_TYPE_PPSX", "FILE_TYPE_PPT", "FILE_TYPE_PPTX", "FILE_TYPE_PS", "FILE_TYPE_PSD", "FILE_TYPE_PYTHON", "FILE_TYPE_QUICKTIME", "FILE_TYPE_RAR", "FILE_TYPE_RM", "FILE_TYPE_ROM", "FILE_TYPE_RPM", "FILE_TYPE_RTF", "FILE_TYPE_RUBY", "FILE_TYPE_RZIP", "FILE_TYPE_SCRIPT", "FILE_TYPE_SEVENZIP", "FILE_TYPE_SHELLSCRIPT", "FILE_TYPE_SVG", "FILE_TYPE_SWF", "FILE_TYPE_SYMBIAN", "FILE_TYPE_T3GP", "FILE_TYPE_TAR", "FILE_TYPE_TARGA", "FILE_TYPE_TEXT", "FILE_TYPE_TIFF", "FILE_TYPE_TORRENT", "FILE_TYPE_TTF", "FILE_TYPE_UNSPECIFIED", "FILE_TYPE_VBA", "FILE_TYPE_WAV", "FILE_TYPE_WEBP", "FILE_TYPE_WINCE", "FILE_TYPE_WMA", "FILE_TYPE_WMV", "FILE_TYPE_WOFF", "FILE_TYPE_XLS", "FILE_TYPE_XLSX", "FILE_TYPE_XML", "FILE_TYPE_XPI", "FILE_TYPE_XWD", "FILE_TYPE_ZIP", "FILE_TYPE_ZLIB"]
    sql: CASE ${TABLE}.principal.process.file.file_type WHEN 0 THEN 'FILE_TYPE_UNSPECIFIED' WHEN 1 THEN 'FILE_TYPE_PE_EXE' WHEN 2 THEN 'FILE_TYPE_PE_DLL' WHEN 3 THEN 'FILE_TYPE_MSI' WHEN 10 THEN 'FILE_TYPE_NE_EXE' WHEN 11 THEN 'FILE_TYPE_NE_DLL' WHEN 20 THEN 'FILE_TYPE_DOS_EXE' WHEN 21 THEN 'FILE_TYPE_DOS_COM' WHEN 30 THEN 'FILE_TYPE_COFF' WHEN 31 THEN 'FILE_TYPE_ELF' WHEN 32 THEN 'FILE_TYPE_LINUX_KERNEL' WHEN 33 THEN 'FILE_TYPE_RPM' WHEN 34 THEN 'FILE_TYPE_LINUX' WHEN 35 THEN 'FILE_TYPE_MACH_O' WHEN 36 THEN 'FILE_TYPE_JAVA_BYTECODE' WHEN 37 THEN 'FILE_TYPE_DMG' WHEN 38 THEN 'FILE_TYPE_DEB' WHEN 39 THEN 'FILE_TYPE_PKG' WHEN 50 THEN 'FILE_TYPE_LNK' WHEN 100 THEN 'FILE_TYPE_JPEG' WHEN 101 THEN 'FILE_TYPE_TIFF' WHEN 102 THEN 'FILE_TYPE_GIF' WHEN 103 THEN 'FILE_TYPE_PNG' WHEN 104 THEN 'FILE_TYPE_BMP' WHEN 105 THEN 'FILE_TYPE_GIMP' WHEN 106 THEN 'FILE_TYPE_IN_DESIGN' WHEN 107 THEN 'FILE_TYPE_PSD' WHEN 108 THEN 'FILE_TYPE_TARGA' WHEN 109 THEN 'FILE_TYPE_XWD' WHEN 110 THEN 'FILE_TYPE_DIB' WHEN 111 THEN 'FILE_TYPE_JNG' WHEN 112 THEN 'FILE_TYPE_ICO' WHEN 113 THEN 'FILE_TYPE_FPX' WHEN 114 THEN 'FILE_TYPE_EPS' WHEN 115 THEN 'FILE_TYPE_SVG' WHEN 116 THEN 'FILE_TYPE_EMF' WHEN 117 THEN 'FILE_TYPE_WEBP' WHEN 150 THEN 'FILE_TYPE_OGG' WHEN 151 THEN 'FILE_TYPE_FLC' WHEN 152 THEN 'FILE_TYPE_FLI' WHEN 153 THEN 'FILE_TYPE_MP3' WHEN 154 THEN 'FILE_TYPE_FLAC' WHEN 155 THEN 'FILE_TYPE_WAV' WHEN 156 THEN 'FILE_TYPE_MIDI' WHEN 157 THEN 'FILE_TYPE_AVI' WHEN 158 THEN 'FILE_TYPE_MPEG' WHEN 159 THEN 'FILE_TYPE_QUICKTIME' WHEN 160 THEN 'FILE_TYPE_ASF' WHEN 161 THEN 'FILE_TYPE_DIVX' WHEN 162 THEN 'FILE_TYPE_FLV' WHEN 163 THEN 'FILE_TYPE_WMA' WHEN 164 THEN 'FILE_TYPE_WMV' WHEN 165 THEN 'FILE_TYPE_RM' WHEN 166 THEN 'FILE_TYPE_MOV' WHEN 167 THEN 'FILE_TYPE_MP4' WHEN 168 THEN 'FILE_TYPE_T3GP' WHEN 200 THEN 'FILE_TYPE_PDF' WHEN 201 THEN 'FILE_TYPE_PS' WHEN 202 THEN 'FILE_TYPE_DOC' WHEN 203 THEN 'FILE_TYPE_DOCX' WHEN 204 THEN 'FILE_TYPE_PPT' WHEN 205 THEN 'FILE_TYPE_PPTX' WHEN 209 THEN 'FILE_TYPE_PPSX' WHEN 206 THEN 'FILE_TYPE_XLS' WHEN 207 THEN 'FILE_TYPE_XLSX' WHEN 208 THEN 'FILE_TYPE_RTF' WHEN 250 THEN 'FILE_TYPE_ODP' WHEN 251 THEN 'FILE_TYPE_ODS' WHEN 252 THEN 'FILE_TYPE_ODT' WHEN 253 THEN 'FILE_TYPE_HWP' WHEN 254 THEN 'FILE_TYPE_GUL' WHEN 255 THEN 'FILE_TYPE_ODF' WHEN 256 THEN 'FILE_TYPE_ODG' WHEN 260 THEN 'FILE_TYPE_EBOOK' WHEN 261 THEN 'FILE_TYPE_LATEX' WHEN 262 THEN 'FILE_TYPE_TTF' WHEN 263 THEN 'FILE_TYPE_EOT' WHEN 264 THEN 'FILE_TYPE_WOFF' WHEN 265 THEN 'FILE_TYPE_CHM' WHEN 300 THEN 'FILE_TYPE_ZIP' WHEN 301 THEN 'FILE_TYPE_GZIP' WHEN 302 THEN 'FILE_TYPE_BZIP' WHEN 303 THEN 'FILE_TYPE_RZIP' WHEN 304 THEN 'FILE_TYPE_DZIP' WHEN 305 THEN 'FILE_TYPE_SEVENZIP' WHEN 306 THEN 'FILE_TYPE_CAB' WHEN 307 THEN 'FILE_TYPE_JAR' WHEN 308 THEN 'FILE_TYPE_RAR' WHEN 309 THEN 'FILE_TYPE_MSCOMPRESS' WHEN 310 THEN 'FILE_TYPE_ACE' WHEN 311 THEN 'FILE_TYPE_ARC' WHEN 312 THEN 'FILE_TYPE_ARJ' WHEN 313 THEN 'FILE_TYPE_ASD' WHEN 314 THEN 'FILE_TYPE_BLACKHOLE' WHEN 315 THEN 'FILE_TYPE_KGB' WHEN 316 THEN 'FILE_TYPE_ZLIB' WHEN 317 THEN 'FILE_TYPE_TAR' WHEN 400 THEN 'FILE_TYPE_TEXT' WHEN 401 THEN 'FILE_TYPE_SCRIPT' WHEN 402 THEN 'FILE_TYPE_PHP' WHEN 403 THEN 'FILE_TYPE_PYTHON' WHEN 404 THEN 'FILE_TYPE_PERL' WHEN 405 THEN 'FILE_TYPE_RUBY' WHEN 406 THEN 'FILE_TYPE_C' WHEN 407 THEN 'FILE_TYPE_CPP' WHEN 408 THEN 'FILE_TYPE_JAVA' WHEN 409 THEN 'FILE_TYPE_SHELLSCRIPT' WHEN 410 THEN 'FILE_TYPE_PASCAL' WHEN 411 THEN 'FILE_TYPE_AWK' WHEN 412 THEN 'FILE_TYPE_DYALOG' WHEN 413 THEN 'FILE_TYPE_FORTRAN' WHEN 414 THEN 'FILE_TYPE_JAVASCRIPT' WHEN 415 THEN 'FILE_TYPE_POWERSHELL' WHEN 416 THEN 'FILE_TYPE_VBA' WHEN 500 THEN 'FILE_TYPE_SYMBIAN' WHEN 501 THEN 'FILE_TYPE_PALMOS' WHEN 502 THEN 'FILE_TYPE_WINCE' WHEN 503 THEN 'FILE_TYPE_ANDROID' WHEN 504 THEN 'FILE_TYPE_IPHONE' WHEN 600 THEN 'FILE_TYPE_HTML' WHEN 601 THEN 'FILE_TYPE_XML' WHEN 602 THEN 'FILE_TYPE_SWF' WHEN 603 THEN 'FILE_TYPE_FLA' WHEN 604 THEN 'FILE_TYPE_COOKIE' WHEN 605 THEN 'FILE_TYPE_TORRENT' WHEN 606 THEN 'FILE_TYPE_EMAIL_TYPE' WHEN 607 THEN 'FILE_TYPE_OUTLOOK' WHEN 700 THEN 'FILE_TYPE_CAP' WHEN 800 THEN 'FILE_TYPE_ISOIMAGE' WHEN 1000 THEN 'FILE_TYPE_APPLE' WHEN 1001 THEN 'FILE_TYPE_MACINTOSH' WHEN 1002 THEN 'FILE_TYPE_APPLESINGLE' WHEN 1003 THEN 'FILE_TYPE_APPLEDOUBLE' WHEN 1004 THEN 'FILE_TYPE_MACINTOSH_HFS' WHEN 1005 THEN 'FILE_TYPE_APPLE_PLIST' WHEN 1006 THEN 'FILE_TYPE_MACINTOSH_LIB' WHEN 1007 THEN 'FILE_TYPE_APPLESCRIPT' WHEN 1008 THEN 'FILE_TYPE_APPLESCRIPT_COMPILED' WHEN 1100 THEN 'FILE_TYPE_CRX' WHEN 1101 THEN 'FILE_TYPE_XPI' WHEN 1200 THEN 'FILE_TYPE_ROM' END ;;
    group_label: "principal"
    label: "principal.process.file.file_type_enum_name"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension principal__process__file__file_type_enum_name

  dimension_group: principal__process__file__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.process.file.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.process.file.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.process.file.first_seen_time"
    view_label: "UDM"
    description: "Timestamp the file was first seen in the customer's environment."
  }  # dimension principal__process__file__first_seen_time

  dimension: principal__process__file__full_path {
    type: string
    sql: ${TABLE}.principal.process.file.full_path ;;
    group_label: "principal"
    label: "principal.process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension principal__process__file__full_path

  dimension_group: principal__process__file__last_modification_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.process.file.last_modification_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.process.file.last_modification_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.process.file.last_modification_time"
    view_label: "UDM"
    description: "Timestamp when the file was last updated."
  }  # dimension principal__process__file__last_modification_time

  dimension: principal__process__file__md5 {
    type: string
    sql: ${TABLE}.principal.process.file.md5 ;;
    group_label: "principal"
    label: "principal.process.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension principal__process__file__md5

  dimension: principal__process__file__mime_type {
    type: string
    sql: ${TABLE}.principal.process.file.mime_type ;;
    group_label: "principal"
    label: "principal.process.file.mime_type"
    view_label: "UDM"
    description: "The MIME (Multipurpose Internet Mail Extensions) type of the file, for example \"PE\", \"PDF\", \"powershell script\", etc."
  }  # dimension principal__process__file__mime_type

  dimension: principal__process__file__names {
    hidden: yes
  }  # dimension principal__process__file__names

  dimension: principal__process__file__pe_file {
    hidden: yes
  }  # dimension principal__process__file__pe_file

  dimension: principal__process__file__pe_file__signature_info {
    hidden: yes
  }  # dimension principal__process__file__pe_file__signature_info

  dimension: principal__process__file__pe_file__signature_info__verification_message {
    type: string
    sql: ${TABLE}.principal.process.file.pe_file.signature_info.verification_message ;;
    group_label: "principal"
    group_item_label: "principal.process.file.pe_file.signature_info.verification_message [D]"
    label: "principal.process.file.pe_file.signature_info.verification_message"
    view_label: "UDM"
    description: "Status of the certificate. Valid values are \"Signed\", \"Unsigned\" or a description of the certificate anomaly, if found. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__process__file__pe_file__signature_info__verification_message

  dimension: principal__process__file__sha1 {
    type: string
    sql: ${TABLE}.principal.process.file.sha1 ;;
    group_label: "principal"
    label: "principal.process.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension principal__process__file__sha1

  dimension: principal__process__file__sha256 {
    type: string
    sql: ${TABLE}.principal.process.file.sha256 ;;
    group_label: "principal"
    label: "principal.process.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension principal__process__file__sha256

  dimension: principal__process__file__size {
    type: number
    sql: ${TABLE}.principal.process.file.size ;;
    group_label: "principal"
    label: "principal.process.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension principal__process__file__size

  dimension: principal__process__parent_pid {
    type: string
    sql: ${TABLE}.principal.process.parent_pid ;;
    group_label: "principal"
    group_item_label: "principal.process.parent_pid [D]"
    label: "principal.process.parent_pid"
    view_label: "UDM"
    description: "The ID of the parent process. Deprecated: use parent_process.pid instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__process__parent_pid

  dimension: principal__process__parent_process {
    hidden: yes
  }  # dimension principal__process__parent_process

  dimension: principal__process__parent_process__command_line {
    type: string
    sql: ${TABLE}.principal.process.parent_process.command_line ;;
    group_label: "principal"
    label: "principal.process.parent_process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension principal__process__parent_process__command_line

  dimension: principal__process__parent_process__file {
    hidden: yes
  }  # dimension principal__process__parent_process__file

  dimension: principal__process__parent_process__file__file_metadata {
    hidden: yes
  }  # dimension principal__process__parent_process__file__file_metadata

  dimension: principal__process__parent_process__file__file_metadata__pe {
    hidden: yes
  }  # dimension principal__process__parent_process__file__file_metadata__pe

  dimension: principal__process__parent_process__file__file_metadata__pe__import_hash {
    type: string
    sql: ${TABLE}.principal.process.parent_process.file.file_metadata.pe.import_hash ;;
    group_label: "principal"
    group_item_label: "principal.process.parent_process.file.file_metadata.pe.import_hash [D]"
    label: "principal.process.parent_process.file.file_metadata.pe.import_hash"
    view_label: "UDM"
    description: "Hash of PE imports. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__process__parent_process__file__file_metadata__pe__import_hash

  dimension: principal__process__parent_process__file__full_path {
    type: string
    sql: ${TABLE}.principal.process.parent_process.file.full_path ;;
    group_label: "principal"
    label: "principal.process.parent_process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension principal__process__parent_process__file__full_path

  dimension: principal__process__parent_process__file__md5 {
    type: string
    sql: ${TABLE}.principal.process.parent_process.file.md5 ;;
    group_label: "principal"
    label: "principal.process.parent_process.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension principal__process__parent_process__file__md5

  dimension: principal__process__parent_process__file__mime_type {
    type: string
    sql: ${TABLE}.principal.process.parent_process.file.mime_type ;;
    group_label: "principal"
    label: "principal.process.parent_process.file.mime_type"
    view_label: "UDM"
    description: "The MIME (Multipurpose Internet Mail Extensions) type of the file, for example \"PE\", \"PDF\", \"powershell script\", etc."
  }  # dimension principal__process__parent_process__file__mime_type

  dimension: principal__process__parent_process__file__names {
    hidden: yes
  }  # dimension principal__process__parent_process__file__names

  dimension: principal__process__parent_process__file__sha1 {
    type: string
    sql: ${TABLE}.principal.process.parent_process.file.sha1 ;;
    group_label: "principal"
    label: "principal.process.parent_process.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension principal__process__parent_process__file__sha1

  dimension: principal__process__parent_process__file__sha256 {
    type: string
    sql: ${TABLE}.principal.process.parent_process.file.sha256 ;;
    group_label: "principal"
    label: "principal.process.parent_process.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension principal__process__parent_process__file__sha256

  dimension: principal__process__parent_process__file__size {
    type: number
    sql: ${TABLE}.principal.process.parent_process.file.size ;;
    group_label: "principal"
    label: "principal.process.parent_process.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension principal__process__parent_process__file__size

  dimension: principal__process__parent_process__parent_pid {
    type: string
    sql: ${TABLE}.principal.process.parent_process.parent_pid ;;
    group_label: "principal"
    group_item_label: "principal.process.parent_process.parent_pid [D]"
    label: "principal.process.parent_process.parent_pid"
    view_label: "UDM"
    description: "The ID of the parent process. Deprecated: use parent_process.pid instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__process__parent_process__parent_pid

  dimension: principal__process__parent_process__pid {
    type: string
    sql: ${TABLE}.principal.process.parent_process.pid ;;
    group_label: "principal"
    label: "principal.process.parent_process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension principal__process__parent_process__pid

  dimension: principal__process__parent_process__product_specific_process_id {
    type: string
    sql: ${TABLE}.principal.process.parent_process.product_specific_process_id ;;
    group_label: "principal"
    label: "principal.process.parent_process.product_specific_process_id"
    view_label: "UDM"
    description: "A product specific process id."
  }  # dimension principal__process__parent_process__product_specific_process_id

  dimension: principal__process__pid {
    type: string
    sql: ${TABLE}.principal.process.pid ;;
    group_label: "principal"
    label: "principal.process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension principal__process__pid

  dimension: principal__process__product_specific_parent_process_id {
    type: string
    sql: ${TABLE}.principal.process.product_specific_parent_process_id ;;
    group_label: "principal"
    group_item_label: "principal.process.product_specific_parent_process_id [D]"
    label: "principal.process.product_specific_parent_process_id"
    view_label: "UDM"
    description: "A product specific id for the parent process. Please use parent_process.product_specific_process_id instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__process__product_specific_parent_process_id

  dimension: principal__process__product_specific_process_id {
    type: string
    sql: ${TABLE}.principal.process.product_specific_process_id ;;
    group_label: "principal"
    label: "principal.process.product_specific_process_id"
    view_label: "UDM"
    description: "A product specific process id."
  }  # dimension principal__process__product_specific_process_id

  dimension: principal__process_ancestors {
    hidden: yes
  }  # dimension principal__process_ancestors

  dimension: principal__resource {
    hidden: yes
  }  # dimension principal__resource

  dimension: principal__resource__attribute {
    hidden: yes
  }  # dimension principal__resource__attribute

  dimension: principal__resource__attribute__cloud {
    hidden: yes
  }  # dimension principal__resource__attribute__cloud

  dimension: principal__resource__attribute__cloud__availability_zone {
    type: string
    sql: ${TABLE}.principal.resource.attribute.cloud.availability_zone ;;
    group_label: "principal"
    label: "principal.resource.attribute.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name)."
  }  # dimension principal__resource__attribute__cloud__availability_zone

  dimension: principal__resource__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.principal.resource.attribute.cloud.environment ;;
    group_label: "principal"
    label: "principal.resource.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension principal__resource__attribute__cloud__environment

  dimension: principal__resource__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.principal.resource.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "principal"
    label: "principal.resource.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension principal__resource__attribute__cloud__environment_enum_name

  dimension: principal__resource__attribute__cloud__project {
    hidden: yes
  }  # dimension principal__resource__attribute__cloud__project

  dimension: principal__resource__attribute__cloud__project__name {
    type: string
    sql: ${TABLE}.principal.resource.attribute.cloud.project.name ;;
    group_label: "principal"
    group_item_label: "principal.resource.attribute.cloud.project.name [D]"
    label: "principal.resource.attribute.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__resource__attribute__cloud__project__name

  dimension: principal__resource__attribute__cloud__project__resource_subtype {
    type: string
    sql: ${TABLE}.principal.resource.attribute.cloud.project.resource_subtype ;;
    group_label: "principal"
    group_item_label: "principal.resource.attribute.cloud.project.resource_subtype [D]"
    label: "principal.resource.attribute.cloud.project.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\"). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__resource__attribute__cloud__project__resource_subtype

  dimension_group: principal__resource__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.resource.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.resource.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.resource.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension principal__resource__attribute__creation_time

  dimension: principal__resource__attribute__labels {
    hidden: yes
  }  # dimension principal__resource__attribute__labels

  dimension_group: principal__resource__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.resource.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.resource.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.resource.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension principal__resource__attribute__last_update_time

  dimension: principal__resource__attribute__permissions {
    hidden: yes
  }  # dimension principal__resource__attribute__permissions

  dimension: principal__resource__attribute__roles {
    hidden: yes
  }  # dimension principal__resource__attribute__roles

  dimension: principal__resource__id {
    type: string
    sql: ${TABLE}.principal.resource.id ;;
    group_label: "principal"
    group_item_label: "principal.resource.id [D]"
    label: "principal.resource.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__resource__id

  dimension: principal__resource__name {
    type: string
    sql: ${TABLE}.principal.resource.name ;;
    group_label: "principal"
    label: "principal.resource.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension principal__resource__name

  dimension: principal__resource__parent {
    type: string
    sql: ${TABLE}.principal.resource.parent ;;
    group_label: "principal"
    group_item_label: "principal.resource.parent [D]"
    label: "principal.resource.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__resource__parent

  dimension: principal__resource__product_object_id {
    type: string
    sql: ${TABLE}.principal.resource.product_object_id ;;
    group_label: "principal"
    label: "principal.resource.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension principal__resource__product_object_id

  dimension: principal__resource__resource_subtype {
    type: string
    sql: ${TABLE}.principal.resource.resource_subtype ;;
    group_label: "principal"
    label: "principal.resource.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension principal__resource__resource_subtype

  dimension: principal__resource__resource_type {
    type: number
    sql: ${TABLE}.principal.resource.resource_type ;;
    group_label: "principal"
    label: "principal.resource.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension principal__resource__resource_type

  dimension: principal__resource__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.principal.resource.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "principal"
    label: "principal.resource.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension principal__resource__resource_type_enum_name

  dimension: principal__resource__type {
    type: string
    sql: ${TABLE}.principal.resource.type ;;
    group_label: "principal"
    group_item_label: "principal.resource.type [D]"
    label: "principal.resource.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__resource__type

  dimension: principal__resource_ancestors {
    hidden: yes
  }  # dimension principal__resource_ancestors

  dimension: principal__url {
    type: string
    sql: ${TABLE}.principal.url ;;
    group_label: "principal"
    label: "principal.url"
    view_label: "UDM"
    description: "The URL."
  }  # dimension principal__url

  dimension: principal__user {
    hidden: yes
  }  # dimension principal__user

  dimension_group: principal__user__account_expiration_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.account_expiration_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.account_expiration_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.account_expiration_time"
    view_label: "UDM"
    description: "User account expiration timestamp."
  }  # dimension principal__user__account_expiration_time

  dimension_group: principal__user__account_lockout_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.account_lockout_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.account_lockout_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.account_lockout_time"
    view_label: "UDM"
    description: "User account lockout timestamp."
  }  # dimension principal__user__account_lockout_time

  dimension: principal__user__account_type {
    type: number
    sql: ${TABLE}.principal.user.account_type ;;
    group_label: "principal"
    label: "principal.user.account_type"
    view_label: "UDM"
    description: "Type of user account (service, domain, cloud, etc).  Somewhat aligned to: <a href=\"https://attack.mitre.org/techniques/T1078/\">https://attack.mitre.org/techniques/T1078/</a>"
  }  # dimension principal__user__account_type

  dimension: principal__user__account_type_enum_name {
    type: string
    suggestions: ["ACCOUNT_TYPE_UNSPECIFIED", "CLOUD_ACCOUNT_TYPE", "DEFAULT_ACCOUNT_TYPE", "DOMAIN_ACCOUNT_TYPE", "LOCAL_ACCOUNT_TYPE", "SERVICE_ACCOUNT_TYPE"]
    sql: CASE ${TABLE}.principal.user.account_type WHEN 0 THEN 'ACCOUNT_TYPE_UNSPECIFIED' WHEN 1 THEN 'DOMAIN_ACCOUNT_TYPE' WHEN 2 THEN 'LOCAL_ACCOUNT_TYPE' WHEN 3 THEN 'CLOUD_ACCOUNT_TYPE' WHEN 4 THEN 'SERVICE_ACCOUNT_TYPE' WHEN 5 THEN 'DEFAULT_ACCOUNT_TYPE' END ;;
    group_label: "principal"
    label: "principal.user.account_type_enum_name"
    view_label: "UDM"
    description: "Type of user account (service, domain, cloud, etc).  Somewhat aligned to: <a href=\"https://attack.mitre.org/techniques/T1078/\">https://attack.mitre.org/techniques/T1078/</a>"
  }  # dimension principal__user__account_type_enum_name

  dimension: principal__user__attribute {
    hidden: yes
  }  # dimension principal__user__attribute

  dimension: principal__user__attribute__cloud {
    hidden: yes
  }  # dimension principal__user__attribute__cloud

  dimension: principal__user__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.principal.user.attribute.cloud.environment ;;
    group_label: "principal"
    label: "principal.user.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension principal__user__attribute__cloud__environment

  dimension: principal__user__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.principal.user.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "principal"
    label: "principal.user.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension principal__user__attribute__cloud__environment_enum_name

  dimension: principal__user__attribute__cloud__project {
    hidden: yes
  }  # dimension principal__user__attribute__cloud__project

  dimension: principal__user__attribute__cloud__project__id {
    type: string
    sql: ${TABLE}.principal.user.attribute.cloud.project.id ;;
    group_label: "principal"
    group_item_label: "principal.user.attribute.cloud.project.id [D]"
    label: "principal.user.attribute.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__user__attribute__cloud__project__id

  dimension_group: principal__user__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension principal__user__attribute__creation_time

  dimension: principal__user__attribute__labels {
    hidden: yes
  }  # dimension principal__user__attribute__labels

  dimension_group: principal__user__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension principal__user__attribute__last_update_time

  dimension: principal__user__attribute__permissions {
    hidden: yes
  }  # dimension principal__user__attribute__permissions

  dimension: principal__user__attribute__roles {
    hidden: yes
  }  # dimension principal__user__attribute__roles

  dimension: principal__user__company_name {
    type: string
    sql: ${TABLE}.principal.user.company_name ;;
    group_label: "principal"
    label: "principal.user.company_name"
    view_label: "UDM"
    description: "User job company name."
  }  # dimension principal__user__company_name

  dimension: principal__user__department {
    hidden: yes
  }  # dimension principal__user__department

  dimension: principal__user__email_addresses {
    hidden: yes
  }  # dimension principal__user__email_addresses

  dimension: principal__user__employee_id {
    type: string
    sql: ${TABLE}.principal.user.employee_id ;;
    group_label: "principal"
    label: "principal.user.employee_id"
    view_label: "UDM"
    description: "Human capital management identifier."
  }  # dimension principal__user__employee_id

  dimension: principal__user__first_name {
    type: string
    sql: ${TABLE}.principal.user.first_name ;;
    group_label: "principal"
    label: "principal.user.first_name"
    view_label: "UDM"
    description: "First name of the user (e.g. \"John\")."
  }  # dimension principal__user__first_name

  dimension: principal__user__group_identifiers {
    hidden: yes
  }  # dimension principal__user__group_identifiers

  dimension: principal__user__groupid {
    type: string
    sql: ${TABLE}.principal.user.groupid ;;
    group_label: "principal"
    group_item_label: "principal.user.groupid [D]"
    label: "principal.user.groupid"
    view_label: "UDM"
    description: "The ID of the group that the user belongs to. Deprecated in favor of the repeated group_identifiers field. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__user__groupid

  dimension_group: principal__user__hire_date {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.hire_date.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.hire_date.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.hire_date"
    view_label: "UDM"
    description: "User job employment hire date."
  }  # dimension principal__user__hire_date

  dimension_group: principal__user__last_bad_password_attempt_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.last_bad_password_attempt_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.last_bad_password_attempt_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.last_bad_password_attempt_time"
    view_label: "UDM"
    description: "User last bad password attempt timestamp."
  }  # dimension principal__user__last_bad_password_attempt_time

  dimension_group: principal__user__last_login_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.last_login_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.last_login_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.last_login_time"
    view_label: "UDM"
    description: "User last login timestamp."
  }  # dimension principal__user__last_login_time

  dimension: principal__user__last_name {
    type: string
    sql: ${TABLE}.principal.user.last_name ;;
    group_label: "principal"
    label: "principal.user.last_name"
    view_label: "UDM"
    description: "Last name of the user (e.g. \"Locke\")."
  }  # dimension principal__user__last_name

  dimension_group: principal__user__last_password_change_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.last_password_change_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.last_password_change_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.last_password_change_time"
    view_label: "UDM"
    description: "User last password change timestamp."
  }  # dimension principal__user__last_password_change_time

  dimension: principal__user__managers {
    hidden: yes
  }  # dimension principal__user__managers

  dimension: principal__user__middle_name {
    type: string
    sql: ${TABLE}.principal.user.middle_name ;;
    group_label: "principal"
    label: "principal.user.middle_name"
    view_label: "UDM"
    description: "Middle name of the user."
  }  # dimension principal__user__middle_name

  dimension: principal__user__office_address {
    hidden: yes
  }  # dimension principal__user__office_address

  dimension: principal__user__office_address__city {
    type: string
    sql: ${TABLE}.principal.user.office_address.city ;;
    group_label: "principal"
    label: "principal.user.office_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension principal__user__office_address__city

  dimension: principal__user__office_address__country_or_region {
    type: string
    sql: ${TABLE}.principal.user.office_address.country_or_region ;;
    group_label: "principal"
    label: "principal.user.office_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension principal__user__office_address__country_or_region

  dimension: principal__user__office_address__floor_name {
    type: string
    sql: ${TABLE}.principal.user.office_address.floor_name ;;
    group_label: "principal"
    label: "principal.user.office_address.floor_name"
    view_label: "UDM"
    description: "Floor name, number or a combination of the two for a building. (e.g. \"1-A\")."
  }  # dimension principal__user__office_address__floor_name

  dimension: principal__user__office_address__name {
    type: string
    sql: ${TABLE}.principal.user.office_address.name ;;
    group_label: "principal"
    label: "principal.user.office_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension principal__user__office_address__name

  dimension: principal__user__office_address__state {
    type: string
    sql: ${TABLE}.principal.user.office_address.state ;;
    group_label: "principal"
    label: "principal.user.office_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension principal__user__office_address__state

  dimension: principal__user__personal_address {
    hidden: yes
  }  # dimension principal__user__personal_address

  dimension: principal__user__personal_address__city {
    type: string
    sql: ${TABLE}.principal.user.personal_address.city ;;
    group_label: "principal"
    label: "principal.user.personal_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension principal__user__personal_address__city

  dimension: principal__user__personal_address__country_or_region {
    type: string
    sql: ${TABLE}.principal.user.personal_address.country_or_region ;;
    group_label: "principal"
    label: "principal.user.personal_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension principal__user__personal_address__country_or_region

  dimension: principal__user__personal_address__name {
    type: string
    sql: ${TABLE}.principal.user.personal_address.name ;;
    group_label: "principal"
    label: "principal.user.personal_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension principal__user__personal_address__name

  dimension: principal__user__personal_address__state {
    type: string
    sql: ${TABLE}.principal.user.personal_address.state ;;
    group_label: "principal"
    label: "principal.user.personal_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension principal__user__personal_address__state

  dimension: principal__user__phone_numbers {
    hidden: yes
  }  # dimension principal__user__phone_numbers

  dimension: principal__user__product_object_id {
    type: string
    sql: ${TABLE}.principal.user.product_object_id ;;
    group_label: "principal"
    label: "principal.user.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension principal__user__product_object_id

  dimension: principal__user__role_description {
    type: string
    sql: ${TABLE}.principal.user.role_description ;;
    group_label: "principal"
    group_item_label: "principal.user.role_description [D]"
    label: "principal.user.role_description"
    view_label: "UDM"
    description: "System role description for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__user__role_description

  dimension: principal__user__role_name {
    type: string
    sql: ${TABLE}.principal.user.role_name ;;
    group_label: "principal"
    group_item_label: "principal.user.role_name [D]"
    label: "principal.user.role_name"
    view_label: "UDM"
    description: "System role name for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__user__role_name

  dimension_group: principal__user__termination_date {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.principal.user.termination_date.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.principal.user.termination_date.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.termination_date"
    view_label: "UDM"
    description: "User job employment termination date."
  }  # dimension principal__user__termination_date

  dimension: principal__user__time_off {
    hidden: yes
  }  # dimension principal__user__time_off

  dimension: principal__user__title {
    type: string
    sql: ${TABLE}.principal.user.title ;;
    group_label: "principal"
    label: "principal.user.title"
    view_label: "UDM"
    description: "User job title."
  }  # dimension principal__user__title

  dimension: principal__user__user_authentication_status {
    type: number
    sql: ${TABLE}.principal.user.user_authentication_status ;;
    group_label: "principal"
    label: "principal.user.user_authentication_status"
    view_label: "UDM"
    description: "System authentication status for user."
  }  # dimension principal__user__user_authentication_status

  dimension: principal__user__user_authentication_status_enum_name {
    type: string
    suggestions: ["ACTIVE", "DELETED", "NO_ACTIVE_CREDENTIALS", "SUSPENDED", "UNKNOWN_AUTHENTICATION_STATUS"]
    sql: CASE ${TABLE}.principal.user.user_authentication_status WHEN 0 THEN 'UNKNOWN_AUTHENTICATION_STATUS' WHEN 1 THEN 'ACTIVE' WHEN 2 THEN 'SUSPENDED' WHEN 3 THEN 'NO_ACTIVE_CREDENTIALS' WHEN 4 THEN 'DELETED' END ;;
    group_label: "principal"
    label: "principal.user.user_authentication_status_enum_name"
    view_label: "UDM"
    description: "System authentication status for user."
  }  # dimension principal__user__user_authentication_status_enum_name

  dimension: principal__user__user_display_name {
    type: string
    sql: ${TABLE}.principal.user.user_display_name ;;
    group_label: "principal"
    label: "principal.user.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension principal__user__user_display_name

  dimension: principal__user__user_role {
    type: number
    sql: ${TABLE}.principal.user.user_role ;;
    group_label: "principal"
    group_item_label: "principal.user.user_role [D]"
    label: "principal.user.user_role"
    view_label: "UDM"
    description: "System role for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__user__user_role

  dimension: principal__user__user_role_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "UNKNOWN_ROLE"]
    sql: CASE ${TABLE}.principal.user.user_role WHEN 0 THEN 'UNKNOWN_ROLE' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "principal"
    group_item_label: "principal.user.user_role_enum_name [D]"
    label: "principal.user.user_role_enum_name"
    view_label: "UDM"
    description: "System role for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension principal__user__user_role_enum_name

  dimension: principal__user__userid {
    type: string
    sql: ${TABLE}.principal.user.userid ;;
    group_label: "principal"
    label: "principal.user.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension principal__user__userid

  dimension: principal__user__windows_sid {
    type: string
    sql: ${TABLE}.principal.user.windows_sid ;;
    group_label: "principal"
    label: "principal.user.windows_sid"
    view_label: "UDM"
    description: "The Microsoft Windows SID of the user."
  }  # dimension principal__user__windows_sid

  dimension: security_result {
    hidden: yes
  }  # dimension security_result

  dimension: src {
    hidden: yes
  }  # dimension src

  dimension: src__administrative_domain {
    type: string
    sql: ${TABLE}.src.administrative_domain ;;
    group_label: "src"
    label: "src.administrative_domain"
    view_label: "UDM"
    description: "Domain which the device belongs to (for example, the Microsoft Windows domain)."
  }  # dimension src__administrative_domain

  dimension: src__application {
    type: string
    sql: ${TABLE}.src.application ;;
    group_label: "src"
    label: "src.application"
    view_label: "UDM"
    description: "The name of an application or service. Some SSO solutions only capture the name of a target application such as \"Atlassian\" or \"Chronicle\"."
  }  # dimension src__application

  dimension: src__artifact {
    hidden: yes
  }  # dimension src__artifact

  dimension_group: src__artifact__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.artifact.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.artifact.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.artifact.first_seen_time"
    view_label: "UDM"
    description: "First seen timestamp of the IP in the customer's environment."
  }  # dimension src__artifact__first_seen_time

  dimension: src__asset {
    hidden: yes
  }  # dimension src__asset

  dimension: src__asset__asset_id {
    type: string
    sql: ${TABLE}.src.asset.asset_id ;;
    group_label: "src"
    label: "src.asset.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension src__asset__asset_id

  dimension: src__asset__attribute {
    hidden: yes
  }  # dimension src__asset__attribute

  dimension: src__asset__attribute__cloud {
    hidden: yes
  }  # dimension src__asset__attribute__cloud

  dimension: src__asset__attribute__cloud__availability_zone {
    type: string
    sql: ${TABLE}.src.asset.attribute.cloud.availability_zone ;;
    group_label: "src"
    label: "src.asset.attribute.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name)."
  }  # dimension src__asset__attribute__cloud__availability_zone

  dimension: src__asset__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.src.asset.attribute.cloud.environment ;;
    group_label: "src"
    label: "src.asset.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension src__asset__attribute__cloud__environment

  dimension: src__asset__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.src.asset.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "src"
    label: "src.asset.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension src__asset__attribute__cloud__environment_enum_name

  dimension: src__asset__attribute__cloud__project {
    hidden: yes
  }  # dimension src__asset__attribute__cloud__project

  dimension: src__asset__attribute__cloud__project__name {
    type: string
    sql: ${TABLE}.src.asset.attribute.cloud.project.name ;;
    group_label: "src"
    group_item_label: "src.asset.attribute.cloud.project.name [D]"
    label: "src.asset.attribute.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__asset__attribute__cloud__project__name

  dimension: src__asset__attribute__cloud__project__resource_type {
    type: number
    sql: ${TABLE}.src.asset.attribute.cloud.project.resource_type ;;
    group_label: "src"
    group_item_label: "src.asset.attribute.cloud.project.resource_type [D]"
    label: "src.asset.attribute.cloud.project.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__asset__attribute__cloud__project__resource_type

  dimension: src__asset__attribute__cloud__project__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.src.asset.attribute.cloud.project.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "src"
    group_item_label: "src.asset.attribute.cloud.project.resource_type_enum_name [D]"
    label: "src.asset.attribute.cloud.project.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__asset__attribute__cloud__project__resource_type_enum_name

  dimension: src__asset__attribute__cloud__vpc {
    hidden: yes
  }  # dimension src__asset__attribute__cloud__vpc

  dimension: src__asset__attribute__cloud__vpc__name {
    type: string
    sql: ${TABLE}.src.asset.attribute.cloud.vpc.name ;;
    group_label: "src"
    group_item_label: "src.asset.attribute.cloud.vpc.name [D]"
    label: "src.asset.attribute.cloud.vpc.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__asset__attribute__cloud__vpc__name

  dimension: src__asset__attribute__cloud__vpc__resource_type {
    type: number
    sql: ${TABLE}.src.asset.attribute.cloud.vpc.resource_type ;;
    group_label: "src"
    group_item_label: "src.asset.attribute.cloud.vpc.resource_type [D]"
    label: "src.asset.attribute.cloud.vpc.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__asset__attribute__cloud__vpc__resource_type

  dimension: src__asset__attribute__cloud__vpc__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.src.asset.attribute.cloud.vpc.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "src"
    group_item_label: "src.asset.attribute.cloud.vpc.resource_type_enum_name [D]"
    label: "src.asset.attribute.cloud.vpc.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__asset__attribute__cloud__vpc__resource_type_enum_name

  dimension_group: src__asset__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.asset.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.asset.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension src__asset__attribute__creation_time

  dimension: src__asset__attribute__labels {
    hidden: yes
  }  # dimension src__asset__attribute__labels

  dimension_group: src__asset__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.asset.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.asset.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension src__asset__attribute__last_update_time

  dimension: src__asset__category {
    type: string
    sql: ${TABLE}.src.asset.category ;;
    group_label: "src"
    label: "src.asset.category"
    view_label: "UDM"
    description: "The category of the asset (e.g. \"End User Asset\", \"Workstation\", \"Server\")."
  }  # dimension src__asset__category

  dimension: src__asset__deployment_status {
    type: number
    sql: ${TABLE}.src.asset.deployment_status ;;
    group_label: "src"
    label: "src.asset.deployment_status"
    view_label: "UDM"
    description: "The deployment status of the asset for device lifecycle purposes."
  }  # dimension src__asset__deployment_status

  dimension: src__asset__deployment_status_enum_name {
    type: string
    suggestions: ["ACTIVE", "DECOMISSIONED", "DEPLOYMENT_STATUS_UNSPECIFIED", "PENDING_DECOMISSION"]
    sql: CASE ${TABLE}.src.asset.deployment_status WHEN 0 THEN 'DEPLOYMENT_STATUS_UNSPECIFIED' WHEN 1 THEN 'ACTIVE' WHEN 2 THEN 'PENDING_DECOMISSION' WHEN 3 THEN 'DECOMISSIONED' END ;;
    group_label: "src"
    label: "src.asset.deployment_status_enum_name"
    view_label: "UDM"
    description: "The deployment status of the asset for device lifecycle purposes."
  }  # dimension src__asset__deployment_status_enum_name

  dimension_group: src__asset__first_discover_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.asset.first_discover_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.asset.first_discover_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.first_discover_time"
    view_label: "UDM"
    description: "Time the asset was first discovered (by asset management/discoverability software)."
  }  # dimension src__asset__first_discover_time

  dimension_group: src__asset__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.asset.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.asset.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.first_seen_time"
    view_label: "UDM"
    description: "The first observed time for an asset. The value is calculated on the basis of the first time the identifier was observed."
  }  # dimension src__asset__first_seen_time

  dimension: src__asset__hardware {
    hidden: yes
  }  # dimension src__asset__hardware

  dimension: src__asset__hostname {
    type: string
    sql: ${TABLE}.src.asset.hostname ;;
    group_label: "src"
    label: "src.asset.hostname"
    view_label: "UDM"
    description: "Asset hostname or domain name field."
  }  # dimension src__asset__hostname

  dimension: src__asset__ip {
    hidden: yes
  }  # dimension src__asset__ip

  dimension: src__asset__labels {
    hidden: yes
  }  # dimension src__asset__labels

  dimension_group: src__asset__last_boot_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.asset.last_boot_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.asset.last_boot_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.last_boot_time"
    view_label: "UDM"
    description: "Time the asset was last boot started."
  }  # dimension src__asset__last_boot_time

  dimension_group: src__asset__last_discover_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.asset.last_discover_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.asset.last_discover_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.last_discover_time"
    view_label: "UDM"
    description: "Time the asset was last discovered (by asset management/discoverability software)."
  }  # dimension src__asset__last_discover_time

  dimension: src__asset__location {
    hidden: yes
  }  # dimension src__asset__location

  dimension: src__asset__location__city {
    type: string
    sql: ${TABLE}.src.asset.location.city ;;
    group_label: "src"
    label: "src.asset.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension src__asset__location__city

  dimension: src__asset__location__country_or_region {
    type: string
    sql: ${TABLE}.src.asset.location.country_or_region ;;
    group_label: "src"
    label: "src.asset.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension src__asset__location__country_or_region

  dimension: src__asset__location__floor_name {
    type: string
    sql: ${TABLE}.src.asset.location.floor_name ;;
    group_label: "src"
    label: "src.asset.location.floor_name"
    view_label: "UDM"
    description: "Floor name, number or a combination of the two for a building. (e.g. \"1-A\")."
  }  # dimension src__asset__location__floor_name

  dimension: src__asset__location__name {
    type: string
    sql: ${TABLE}.src.asset.location.name ;;
    group_label: "src"
    label: "src.asset.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension src__asset__location__name

  dimension: src__asset__location__region_latitude {
    type: number
    sql: ${TABLE}.src.asset.location.region_latitude ;;
    group_label: "src"
    group_item_label: "src.asset.location.region_latitude [D]"
    label: "src.asset.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__asset__location__region_latitude

  dimension: src__asset__location__region_longitude {
    type: number
    sql: ${TABLE}.src.asset.location.region_longitude ;;
    group_label: "src"
    group_item_label: "src.asset.location.region_longitude [D]"
    label: "src.asset.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__asset__location__region_longitude

  dimension: src__asset__location__location {
    type: location
    sql_latitude: ${TABLE}.src.asset.location.region_latitude ;;
    sql_longitude: ${TABLE}.src.asset.location.region_longitude ;;
    group_label: "src"
    group_item_label: "src.asset.location.location [D][L]"
    label: "src.asset.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension src__asset__location__location

  dimension: src__asset__location__state {
    type: string
    sql: ${TABLE}.src.asset.location.state ;;
    group_label: "src"
    label: "src.asset.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension src__asset__location__state

  dimension: src__asset__mac {
    hidden: yes
  }  # dimension src__asset__mac

  dimension: src__asset__nat_ip {
    hidden: yes
  }  # dimension src__asset__nat_ip

  dimension: src__asset__network_domain {
    type: string
    sql: ${TABLE}.src.asset.network_domain ;;
    group_label: "src"
    label: "src.asset.network_domain"
    view_label: "UDM"
    description: "The network domain of the asset (e.g. \"corp.acme.com\")"
  }  # dimension src__asset__network_domain

  dimension: src__asset__platform_software {
    hidden: yes
  }  # dimension src__asset__platform_software

  dimension: src__asset__platform_software__platform {
    type: number
    sql: ${TABLE}.src.asset.platform_software.platform ;;
    group_label: "src"
    label: "src.asset.platform_software.platform"
    view_label: "UDM"
    description: "The platform operating system."
  }  # dimension src__asset__platform_software__platform

  dimension: src__asset__platform_software__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.src.asset.platform_software.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "src"
    label: "src.asset.platform_software.platform_enum_name"
    view_label: "UDM"
    description: "The platform operating system."
  }  # dimension src__asset__platform_software__platform_enum_name

  dimension: src__asset__platform_software__platform_patch_level {
    type: string
    sql: ${TABLE}.src.asset.platform_software.platform_patch_level ;;
    group_label: "src"
    label: "src.asset.platform_software.platform_patch_level"
    view_label: "UDM"
    description: "The platform software patch level ( e.g. \"Build 17134.48\", \"SP1\")."
  }  # dimension src__asset__platform_software__platform_patch_level

  dimension: src__asset__platform_software__platform_version {
    type: string
    sql: ${TABLE}.src.asset.platform_software.platform_version ;;
    group_label: "src"
    label: "src.asset.platform_software.platform_version"
    view_label: "UDM"
    description: "The platform software version ( e.g. \"Microsoft Windows 1803\")."
  }  # dimension src__asset__platform_software__platform_version

  dimension: src__asset__product_object_id {
    type: string
    sql: ${TABLE}.src.asset.product_object_id ;;
    group_label: "src"
    label: "src.asset.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID  or similar)."
  }  # dimension src__asset__product_object_id

  dimension: src__asset__software {
    hidden: yes
  }  # dimension src__asset__software

  dimension_group: src__asset__system_last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.asset.system_last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.asset.system_last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.system_last_update_time"
    view_label: "UDM"
    description: "Time the asset system or OS was last updated. For all other operations that are not system updates (such as resizing a vm, etc.) use Attribute.last_update_time."
  }  # dimension src__asset__system_last_update_time

  dimension: src__asset__type {
    type: number
    sql: ${TABLE}.src.asset.type ;;
    group_label: "src"
    label: "src.asset.type"
    view_label: "UDM"
    description: "The type of the asset (e.g. workstation or laptop or server)."
  }  # dimension src__asset__type

  dimension: src__asset__type_enum_name {
    type: string
    suggestions: ["IOT", "LAPTOP", "MOBILE", "NETWORK_ATTACHED_STORAGE", "PRINTER", "ROLE_UNSPECIFIED", "SCANNER", "SERVER", "TAPE_LIBRARY", "WORKSTATION"]
    sql: CASE ${TABLE}.src.asset.type WHEN 0 THEN 'ROLE_UNSPECIFIED' WHEN 1 THEN 'WORKSTATION' WHEN 2 THEN 'LAPTOP' WHEN 3 THEN 'IOT' WHEN 4 THEN 'NETWORK_ATTACHED_STORAGE' WHEN 5 THEN 'PRINTER' WHEN 6 THEN 'SCANNER' WHEN 7 THEN 'SERVER' WHEN 8 THEN 'TAPE_LIBRARY' WHEN 9 THEN 'MOBILE' END ;;
    group_label: "src"
    label: "src.asset.type_enum_name"
    view_label: "UDM"
    description: "The type of the asset (e.g. workstation or laptop or server)."
  }  # dimension src__asset__type_enum_name

  dimension: src__asset__vulnerabilities {
    hidden: yes
  }  # dimension src__asset__vulnerabilities

  dimension: src__asset_id {
    type: string
    sql: ${TABLE}.src.asset_id ;;
    group_label: "src"
    label: "src.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension src__asset_id

  dimension: src__cloud {
    hidden: yes
  }  # dimension src__cloud

  dimension: src__cloud__availability_zone {
    type: string
    sql: ${TABLE}.src.cloud.availability_zone ;;
    group_label: "src"
    group_item_label: "src.cloud.availability_zone [D]"
    label: "src.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__cloud__availability_zone

  dimension: src__cloud__project {
    hidden: yes
  }  # dimension src__cloud__project

  dimension: src__cloud__project__id {
    type: string
    sql: ${TABLE}.src.cloud.project.id ;;
    group_label: "src"
    group_item_label: "src.cloud.project.id [D]"
    label: "src.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__cloud__project__id

  dimension: src__domain {
    hidden: yes
  }  # dimension src__domain

  dimension: src__domain__name {
    type: string
    sql: ${TABLE}.src.domain.name ;;
    group_label: "src"
    label: "src.domain.name"
    view_label: "UDM"
    description: "The domain name."
  }  # dimension src__domain__name

  dimension: src__domain__status {
    type: string
    sql: ${TABLE}.src.domain.status ;;
    group_label: "src"
    label: "src.domain.status"
    view_label: "UDM"
    description: "Domain status. See <a href=\"https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en\">https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en</a> for meanings of possible values"
  }  # dimension src__domain__status

  dimension: src__email {
    type: string
    sql: ${TABLE}.src.email ;;
    group_label: "src"
    label: "src.email"
    view_label: "UDM"
    description: "Email address. Only filled in for security_result.about"
  }  # dimension src__email

  dimension: src__file {
    hidden: yes
  }  # dimension src__file

  dimension: src__file__ahash {
    type: string
    sql: ${TABLE}.src.file.ahash ;;
    group_label: "src"
    group_item_label: "src.file.ahash [D]"
    label: "src.file.ahash"
    view_label: "UDM"
    description: "Deprecated. Use authentihash instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__file__ahash

  dimension: src__file__authentihash {
    type: string
    sql: ${TABLE}.src.file.authentihash ;;
    group_label: "src"
    label: "src.file.authentihash"
    view_label: "UDM"
    description: "Authentihash of the file."
  }  # dimension src__file__authentihash

  dimension: src__file__capabilities_tags {
    hidden: yes
  }  # dimension src__file__capabilities_tags

  dimension: src__file__embedded_domains {
    hidden: yes
  }  # dimension src__file__embedded_domains

  dimension: src__file__embedded_ips {
    hidden: yes
  }  # dimension src__file__embedded_ips

  dimension: src__file__embedded_urls {
    hidden: yes
  }  # dimension src__file__embedded_urls

  dimension: src__file__exif_info {
    hidden: yes
  }  # dimension src__file__exif_info

  dimension: src__file__exif_info__company {
    type: string
    sql: ${TABLE}.src.file.exif_info.company ;;
    group_label: "src"
    label: "src.file.exif_info.company"
    view_label: "UDM"
    description: "company name."
  }  # dimension src__file__exif_info__company

  dimension_group: src__file__exif_info__compilation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.file.exif_info.compilation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.file.exif_info.compilation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.file.exif_info.compilation_time"
    view_label: "UDM"
    description: "Compilation time."
  }  # dimension src__file__exif_info__compilation_time

  dimension: src__file__exif_info__entry_point {
    type: number
    sql: ${TABLE}.src.file.exif_info.entry_point ;;
    group_label: "src"
    label: "src.file.exif_info.entry_point"
    view_label: "UDM"
    description: "entry point."
  }  # dimension src__file__exif_info__entry_point

  dimension: src__file__exif_info__file_description {
    type: string
    sql: ${TABLE}.src.file.exif_info.file_description ;;
    group_label: "src"
    label: "src.file.exif_info.file_description"
    view_label: "UDM"
    description: "description of a file."
  }  # dimension src__file__exif_info__file_description

  dimension: src__file__exif_info__original_file {
    type: string
    sql: ${TABLE}.src.file.exif_info.original_file ;;
    group_label: "src"
    label: "src.file.exif_info.original_file"
    view_label: "UDM"
    description: "original file name."
  }  # dimension src__file__exif_info__original_file

  dimension: src__file__exif_info__product {
    type: string
    sql: ${TABLE}.src.file.exif_info.product ;;
    group_label: "src"
    label: "src.file.exif_info.product"
    view_label: "UDM"
    description: "product name."
  }  # dimension src__file__exif_info__product

  dimension: src__file__file_type {
    type: number
    sql: ${TABLE}.src.file.file_type ;;
    group_label: "src"
    label: "src.file.file_type"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension src__file__file_type

  dimension: src__file__file_type_enum_name {
    type: string
    suggestions: ["FILE_TYPE_ACE", "FILE_TYPE_ANDROID", "FILE_TYPE_APPLE", "FILE_TYPE_APPLEDOUBLE", "FILE_TYPE_APPLESCRIPT", "FILE_TYPE_APPLESCRIPT_COMPILED", "FILE_TYPE_APPLESINGLE", "FILE_TYPE_APPLE_PLIST", "FILE_TYPE_ARC", "FILE_TYPE_ARJ", "FILE_TYPE_ASD", "FILE_TYPE_ASF", "FILE_TYPE_AVI", "FILE_TYPE_AWK", "FILE_TYPE_BLACKHOLE", "FILE_TYPE_BMP", "FILE_TYPE_BZIP", "FILE_TYPE_C", "FILE_TYPE_CAB", "FILE_TYPE_CAP", "FILE_TYPE_CHM", "FILE_TYPE_COFF", "FILE_TYPE_COOKIE", "FILE_TYPE_CPP", "FILE_TYPE_CRX", "FILE_TYPE_DEB", "FILE_TYPE_DIB", "FILE_TYPE_DIVX", "FILE_TYPE_DMG", "FILE_TYPE_DOC", "FILE_TYPE_DOCX", "FILE_TYPE_DOS_COM", "FILE_TYPE_DOS_EXE", "FILE_TYPE_DYALOG", "FILE_TYPE_DZIP", "FILE_TYPE_EBOOK", "FILE_TYPE_ELF", "FILE_TYPE_EMAIL_TYPE", "FILE_TYPE_EMF", "FILE_TYPE_EOT", "FILE_TYPE_EPS", "FILE_TYPE_FLA", "FILE_TYPE_FLAC", "FILE_TYPE_FLC", "FILE_TYPE_FLI", "FILE_TYPE_FLV", "FILE_TYPE_FORTRAN", "FILE_TYPE_FPX", "FILE_TYPE_GIF", "FILE_TYPE_GIMP", "FILE_TYPE_GUL", "FILE_TYPE_GZIP", "FILE_TYPE_HTML", "FILE_TYPE_HWP", "FILE_TYPE_ICO", "FILE_TYPE_IN_DESIGN", "FILE_TYPE_IPHONE", "FILE_TYPE_ISOIMAGE", "FILE_TYPE_JAR", "FILE_TYPE_JAVA", "FILE_TYPE_JAVASCRIPT", "FILE_TYPE_JAVA_BYTECODE", "FILE_TYPE_JNG", "FILE_TYPE_JPEG", "FILE_TYPE_KGB", "FILE_TYPE_LATEX", "FILE_TYPE_LINUX", "FILE_TYPE_LINUX_KERNEL", "FILE_TYPE_LNK", "FILE_TYPE_MACH_O", "FILE_TYPE_MACINTOSH", "FILE_TYPE_MACINTOSH_HFS", "FILE_TYPE_MACINTOSH_LIB", "FILE_TYPE_MIDI", "FILE_TYPE_MOV", "FILE_TYPE_MP3", "FILE_TYPE_MP4", "FILE_TYPE_MPEG", "FILE_TYPE_MSCOMPRESS", "FILE_TYPE_MSI", "FILE_TYPE_NE_DLL", "FILE_TYPE_NE_EXE", "FILE_TYPE_ODF", "FILE_TYPE_ODG", "FILE_TYPE_ODP", "FILE_TYPE_ODS", "FILE_TYPE_ODT", "FILE_TYPE_OGG", "FILE_TYPE_OUTLOOK", "FILE_TYPE_PALMOS", "FILE_TYPE_PASCAL", "FILE_TYPE_PDF", "FILE_TYPE_PERL", "FILE_TYPE_PE_DLL", "FILE_TYPE_PE_EXE", "FILE_TYPE_PHP", "FILE_TYPE_PKG", "FILE_TYPE_PNG", "FILE_TYPE_POWERSHELL", "FILE_TYPE_PPSX", "FILE_TYPE_PPT", "FILE_TYPE_PPTX", "FILE_TYPE_PS", "FILE_TYPE_PSD", "FILE_TYPE_PYTHON", "FILE_TYPE_QUICKTIME", "FILE_TYPE_RAR", "FILE_TYPE_RM", "FILE_TYPE_ROM", "FILE_TYPE_RPM", "FILE_TYPE_RTF", "FILE_TYPE_RUBY", "FILE_TYPE_RZIP", "FILE_TYPE_SCRIPT", "FILE_TYPE_SEVENZIP", "FILE_TYPE_SHELLSCRIPT", "FILE_TYPE_SVG", "FILE_TYPE_SWF", "FILE_TYPE_SYMBIAN", "FILE_TYPE_T3GP", "FILE_TYPE_TAR", "FILE_TYPE_TARGA", "FILE_TYPE_TEXT", "FILE_TYPE_TIFF", "FILE_TYPE_TORRENT", "FILE_TYPE_TTF", "FILE_TYPE_UNSPECIFIED", "FILE_TYPE_VBA", "FILE_TYPE_WAV", "FILE_TYPE_WEBP", "FILE_TYPE_WINCE", "FILE_TYPE_WMA", "FILE_TYPE_WMV", "FILE_TYPE_WOFF", "FILE_TYPE_XLS", "FILE_TYPE_XLSX", "FILE_TYPE_XML", "FILE_TYPE_XPI", "FILE_TYPE_XWD", "FILE_TYPE_ZIP", "FILE_TYPE_ZLIB"]
    sql: CASE ${TABLE}.src.file.file_type WHEN 0 THEN 'FILE_TYPE_UNSPECIFIED' WHEN 1 THEN 'FILE_TYPE_PE_EXE' WHEN 2 THEN 'FILE_TYPE_PE_DLL' WHEN 3 THEN 'FILE_TYPE_MSI' WHEN 10 THEN 'FILE_TYPE_NE_EXE' WHEN 11 THEN 'FILE_TYPE_NE_DLL' WHEN 20 THEN 'FILE_TYPE_DOS_EXE' WHEN 21 THEN 'FILE_TYPE_DOS_COM' WHEN 30 THEN 'FILE_TYPE_COFF' WHEN 31 THEN 'FILE_TYPE_ELF' WHEN 32 THEN 'FILE_TYPE_LINUX_KERNEL' WHEN 33 THEN 'FILE_TYPE_RPM' WHEN 34 THEN 'FILE_TYPE_LINUX' WHEN 35 THEN 'FILE_TYPE_MACH_O' WHEN 36 THEN 'FILE_TYPE_JAVA_BYTECODE' WHEN 37 THEN 'FILE_TYPE_DMG' WHEN 38 THEN 'FILE_TYPE_DEB' WHEN 39 THEN 'FILE_TYPE_PKG' WHEN 50 THEN 'FILE_TYPE_LNK' WHEN 100 THEN 'FILE_TYPE_JPEG' WHEN 101 THEN 'FILE_TYPE_TIFF' WHEN 102 THEN 'FILE_TYPE_GIF' WHEN 103 THEN 'FILE_TYPE_PNG' WHEN 104 THEN 'FILE_TYPE_BMP' WHEN 105 THEN 'FILE_TYPE_GIMP' WHEN 106 THEN 'FILE_TYPE_IN_DESIGN' WHEN 107 THEN 'FILE_TYPE_PSD' WHEN 108 THEN 'FILE_TYPE_TARGA' WHEN 109 THEN 'FILE_TYPE_XWD' WHEN 110 THEN 'FILE_TYPE_DIB' WHEN 111 THEN 'FILE_TYPE_JNG' WHEN 112 THEN 'FILE_TYPE_ICO' WHEN 113 THEN 'FILE_TYPE_FPX' WHEN 114 THEN 'FILE_TYPE_EPS' WHEN 115 THEN 'FILE_TYPE_SVG' WHEN 116 THEN 'FILE_TYPE_EMF' WHEN 117 THEN 'FILE_TYPE_WEBP' WHEN 150 THEN 'FILE_TYPE_OGG' WHEN 151 THEN 'FILE_TYPE_FLC' WHEN 152 THEN 'FILE_TYPE_FLI' WHEN 153 THEN 'FILE_TYPE_MP3' WHEN 154 THEN 'FILE_TYPE_FLAC' WHEN 155 THEN 'FILE_TYPE_WAV' WHEN 156 THEN 'FILE_TYPE_MIDI' WHEN 157 THEN 'FILE_TYPE_AVI' WHEN 158 THEN 'FILE_TYPE_MPEG' WHEN 159 THEN 'FILE_TYPE_QUICKTIME' WHEN 160 THEN 'FILE_TYPE_ASF' WHEN 161 THEN 'FILE_TYPE_DIVX' WHEN 162 THEN 'FILE_TYPE_FLV' WHEN 163 THEN 'FILE_TYPE_WMA' WHEN 164 THEN 'FILE_TYPE_WMV' WHEN 165 THEN 'FILE_TYPE_RM' WHEN 166 THEN 'FILE_TYPE_MOV' WHEN 167 THEN 'FILE_TYPE_MP4' WHEN 168 THEN 'FILE_TYPE_T3GP' WHEN 200 THEN 'FILE_TYPE_PDF' WHEN 201 THEN 'FILE_TYPE_PS' WHEN 202 THEN 'FILE_TYPE_DOC' WHEN 203 THEN 'FILE_TYPE_DOCX' WHEN 204 THEN 'FILE_TYPE_PPT' WHEN 205 THEN 'FILE_TYPE_PPTX' WHEN 209 THEN 'FILE_TYPE_PPSX' WHEN 206 THEN 'FILE_TYPE_XLS' WHEN 207 THEN 'FILE_TYPE_XLSX' WHEN 208 THEN 'FILE_TYPE_RTF' WHEN 250 THEN 'FILE_TYPE_ODP' WHEN 251 THEN 'FILE_TYPE_ODS' WHEN 252 THEN 'FILE_TYPE_ODT' WHEN 253 THEN 'FILE_TYPE_HWP' WHEN 254 THEN 'FILE_TYPE_GUL' WHEN 255 THEN 'FILE_TYPE_ODF' WHEN 256 THEN 'FILE_TYPE_ODG' WHEN 260 THEN 'FILE_TYPE_EBOOK' WHEN 261 THEN 'FILE_TYPE_LATEX' WHEN 262 THEN 'FILE_TYPE_TTF' WHEN 263 THEN 'FILE_TYPE_EOT' WHEN 264 THEN 'FILE_TYPE_WOFF' WHEN 265 THEN 'FILE_TYPE_CHM' WHEN 300 THEN 'FILE_TYPE_ZIP' WHEN 301 THEN 'FILE_TYPE_GZIP' WHEN 302 THEN 'FILE_TYPE_BZIP' WHEN 303 THEN 'FILE_TYPE_RZIP' WHEN 304 THEN 'FILE_TYPE_DZIP' WHEN 305 THEN 'FILE_TYPE_SEVENZIP' WHEN 306 THEN 'FILE_TYPE_CAB' WHEN 307 THEN 'FILE_TYPE_JAR' WHEN 308 THEN 'FILE_TYPE_RAR' WHEN 309 THEN 'FILE_TYPE_MSCOMPRESS' WHEN 310 THEN 'FILE_TYPE_ACE' WHEN 311 THEN 'FILE_TYPE_ARC' WHEN 312 THEN 'FILE_TYPE_ARJ' WHEN 313 THEN 'FILE_TYPE_ASD' WHEN 314 THEN 'FILE_TYPE_BLACKHOLE' WHEN 315 THEN 'FILE_TYPE_KGB' WHEN 316 THEN 'FILE_TYPE_ZLIB' WHEN 317 THEN 'FILE_TYPE_TAR' WHEN 400 THEN 'FILE_TYPE_TEXT' WHEN 401 THEN 'FILE_TYPE_SCRIPT' WHEN 402 THEN 'FILE_TYPE_PHP' WHEN 403 THEN 'FILE_TYPE_PYTHON' WHEN 404 THEN 'FILE_TYPE_PERL' WHEN 405 THEN 'FILE_TYPE_RUBY' WHEN 406 THEN 'FILE_TYPE_C' WHEN 407 THEN 'FILE_TYPE_CPP' WHEN 408 THEN 'FILE_TYPE_JAVA' WHEN 409 THEN 'FILE_TYPE_SHELLSCRIPT' WHEN 410 THEN 'FILE_TYPE_PASCAL' WHEN 411 THEN 'FILE_TYPE_AWK' WHEN 412 THEN 'FILE_TYPE_DYALOG' WHEN 413 THEN 'FILE_TYPE_FORTRAN' WHEN 414 THEN 'FILE_TYPE_JAVASCRIPT' WHEN 415 THEN 'FILE_TYPE_POWERSHELL' WHEN 416 THEN 'FILE_TYPE_VBA' WHEN 500 THEN 'FILE_TYPE_SYMBIAN' WHEN 501 THEN 'FILE_TYPE_PALMOS' WHEN 502 THEN 'FILE_TYPE_WINCE' WHEN 503 THEN 'FILE_TYPE_ANDROID' WHEN 504 THEN 'FILE_TYPE_IPHONE' WHEN 600 THEN 'FILE_TYPE_HTML' WHEN 601 THEN 'FILE_TYPE_XML' WHEN 602 THEN 'FILE_TYPE_SWF' WHEN 603 THEN 'FILE_TYPE_FLA' WHEN 604 THEN 'FILE_TYPE_COOKIE' WHEN 605 THEN 'FILE_TYPE_TORRENT' WHEN 606 THEN 'FILE_TYPE_EMAIL_TYPE' WHEN 607 THEN 'FILE_TYPE_OUTLOOK' WHEN 700 THEN 'FILE_TYPE_CAP' WHEN 800 THEN 'FILE_TYPE_ISOIMAGE' WHEN 1000 THEN 'FILE_TYPE_APPLE' WHEN 1001 THEN 'FILE_TYPE_MACINTOSH' WHEN 1002 THEN 'FILE_TYPE_APPLESINGLE' WHEN 1003 THEN 'FILE_TYPE_APPLEDOUBLE' WHEN 1004 THEN 'FILE_TYPE_MACINTOSH_HFS' WHEN 1005 THEN 'FILE_TYPE_APPLE_PLIST' WHEN 1006 THEN 'FILE_TYPE_MACINTOSH_LIB' WHEN 1007 THEN 'FILE_TYPE_APPLESCRIPT' WHEN 1008 THEN 'FILE_TYPE_APPLESCRIPT_COMPILED' WHEN 1100 THEN 'FILE_TYPE_CRX' WHEN 1101 THEN 'FILE_TYPE_XPI' WHEN 1200 THEN 'FILE_TYPE_ROM' END ;;
    group_label: "src"
    label: "src.file.file_type_enum_name"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension src__file__file_type_enum_name

  dimension_group: src__file__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.file.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.file.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.file.first_seen_time"
    view_label: "UDM"
    description: "Timestamp the file was first seen in the customer's environment."
  }  # dimension src__file__first_seen_time

  dimension: src__file__full_path {
    type: string
    sql: ${TABLE}.src.file.full_path ;;
    group_label: "src"
    label: "src.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension src__file__full_path

  dimension_group: src__file__last_analysis_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.file.last_analysis_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.file.last_analysis_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.file.last_analysis_time"
    view_label: "UDM"
    description: "Timestamp the file was last analysed."
  }  # dimension src__file__last_analysis_time

  dimension_group: src__file__last_modification_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.file.last_modification_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.file.last_modification_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.file.last_modification_time"
    view_label: "UDM"
    description: "Timestamp when the file was last updated."
  }  # dimension src__file__last_modification_time

  dimension_group: src__file__last_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.file.last_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.file.last_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.file.last_seen_time"
    view_label: "UDM"
    description: "Timestamp the file was last seen in the customer's environment."
  }  # dimension src__file__last_seen_time

  dimension: src__file__md5 {
    type: string
    sql: ${TABLE}.src.file.md5 ;;
    group_label: "src"
    label: "src.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension src__file__md5

  dimension: src__file__mime_type {
    type: string
    sql: ${TABLE}.src.file.mime_type ;;
    group_label: "src"
    label: "src.file.mime_type"
    view_label: "UDM"
    description: "The MIME (Multipurpose Internet Mail Extensions) type of the file, for example \"PE\", \"PDF\", \"powershell script\", etc."
  }  # dimension src__file__mime_type

  dimension: src__file__names {
    hidden: yes
  }  # dimension src__file__names

  dimension: src__file__pe_file {
    hidden: yes
  }  # dimension src__file__pe_file

  dimension_group: src__file__pe_file__compilation_exiftool_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.file.pe_file.compilation_exiftool_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.file.pe_file.compilation_exiftool_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.file.pe_file.compilation_exiftool_time"
    view_label: "UDM"
    description: "info.exiftool.TimeStamp."
  }  # dimension src__file__pe_file__compilation_exiftool_time

  dimension_group: src__file__pe_file__compilation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.file.pe_file.compilation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.file.pe_file.compilation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.file.pe_file.compilation_time"
    view_label: "UDM"
    description: "info.pe-timestamp."
  }  # dimension src__file__pe_file__compilation_time

  dimension: src__file__pe_file__entry_point {
    type: number
    sql: ${TABLE}.src.file.pe_file.entry_point ;;
    group_label: "src"
    label: "src.file.pe_file.entry_point"
    view_label: "UDM"
    description: "info.pe-entry-point."
  }  # dimension src__file__pe_file__entry_point

  dimension: src__file__pe_file__entry_point_exiftool {
    type: number
    sql: ${TABLE}.src.file.pe_file.entry_point_exiftool ;;
    group_label: "src"
    label: "src.file.pe_file.entry_point_exiftool"
    view_label: "UDM"
    description: "info.exiftool.EntryPoint."
  }  # dimension src__file__pe_file__entry_point_exiftool

  dimension: src__file__pe_file__imphash {
    type: string
    sql: ${TABLE}.src.file.pe_file.imphash ;;
    group_label: "src"
    label: "src.file.pe_file.imphash"
    view_label: "UDM"
    description: "Imphash of the file."
  }  # dimension src__file__pe_file__imphash

  dimension: src__file__pe_file__imports {
    hidden: yes
  }  # dimension src__file__pe_file__imports

  dimension: src__file__pe_file__resource {
    hidden: yes
  }  # dimension src__file__pe_file__resource

  dimension: src__file__pe_file__resources_language_count_str {
    hidden: yes
  }  # dimension src__file__pe_file__resources_language_count_str

  dimension: src__file__pe_file__resources_type_count_str {
    hidden: yes
  }  # dimension src__file__pe_file__resources_type_count_str

  dimension: src__file__pe_file__section {
    hidden: yes
  }  # dimension src__file__pe_file__section

  dimension: src__file__sha1 {
    type: string
    sql: ${TABLE}.src.file.sha1 ;;
    group_label: "src"
    label: "src.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension src__file__sha1

  dimension: src__file__sha256 {
    type: string
    sql: ${TABLE}.src.file.sha256 ;;
    group_label: "src"
    label: "src.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension src__file__sha256

  dimension: src__file__signature_info {
    hidden: yes
  }  # dimension src__file__signature_info

  dimension: src__file__signature_info__codesign {
    hidden: yes
  }  # dimension src__file__signature_info__codesign

  dimension_group: src__file__signature_info__codesign__compilation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.file.signature_info.codesign.compilation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.file.signature_info.codesign.compilation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.file.signature_info.codesign.compilation_time"
    view_label: "UDM"
    description: "Code sign timestamp"
  }  # dimension src__file__signature_info__codesign__compilation_time

  dimension: src__file__signature_info__codesign__format {
    type: string
    sql: ${TABLE}.src.file.signature_info.codesign.format ;;
    group_label: "src"
    label: "src.file.signature_info.codesign.format"
    view_label: "UDM"
    description: "Code sign format."
  }  # dimension src__file__signature_info__codesign__format

  dimension: src__file__signature_info__codesign__id {
    type: string
    sql: ${TABLE}.src.file.signature_info.codesign.id ;;
    group_label: "src"
    label: "src.file.signature_info.codesign.id"
    view_label: "UDM"
    description: "Code sign identifier."
  }  # dimension src__file__signature_info__codesign__id

  dimension: src__file__signature_info__sigcheck {
    hidden: yes
  }  # dimension src__file__signature_info__sigcheck

  dimension: src__file__signature_info__sigcheck__signers {
    hidden: yes
  }  # dimension src__file__signature_info__sigcheck__signers

  dimension: src__file__signature_info__sigcheck__verification_message {
    type: string
    sql: ${TABLE}.src.file.signature_info.sigcheck.verification_message ;;
    group_label: "src"
    label: "src.file.signature_info.sigcheck.verification_message"
    view_label: "UDM"
    description: "Status of the certificate. Valid values are \"Signed\", \"Unsigned\" or a description of the certificate anomaly, if found."
  }  # dimension src__file__signature_info__sigcheck__verification_message

  dimension: src__file__signature_info__sigcheck__verified {
    type: yesno
    sql: ${TABLE}.src.file.signature_info.sigcheck.verified ;;
    group_label: "src"
    label: "src.file.signature_info.sigcheck.verified"
    view_label: "UDM"
    description: "True iff verification_message == \"Signed\""
  }  # dimension src__file__signature_info__sigcheck__verified

  dimension: src__file__signature_info__sigcheck__x509 {
    hidden: yes
  }  # dimension src__file__signature_info__sigcheck__x509

  dimension: src__file__size {
    type: number
    sql: ${TABLE}.src.file.size ;;
    group_label: "src"
    label: "src.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension src__file__size

  dimension: src__file__ssdeep {
    type: string
    sql: ${TABLE}.src.file.ssdeep ;;
    group_label: "src"
    label: "src.file.ssdeep"
    view_label: "UDM"
    description: "Ssdeep of the file"
  }  # dimension src__file__ssdeep

  dimension: src__file__tags {
    hidden: yes
  }  # dimension src__file__tags

  dimension: src__file__vhash {
    type: string
    sql: ${TABLE}.src.file.vhash ;;
    group_label: "src"
    label: "src.file.vhash"
    view_label: "UDM"
    description: "Vhash of the file."
  }  # dimension src__file__vhash

  dimension: src__group {
    hidden: yes
  }  # dimension src__group

  dimension: src__group__group_display_name {
    type: string
    sql: ${TABLE}.src.group.group_display_name ;;
    group_label: "src"
    label: "src.group.group_display_name"
    view_label: "UDM"
    description: "Group display name. e.g. \"Finance\"."
  }  # dimension src__group__group_display_name

  dimension: src__group__product_object_id {
    type: string
    sql: ${TABLE}.src.group.product_object_id ;;
    group_label: "src"
    label: "src.group.product_object_id"
    view_label: "UDM"
    description: "Product globally unique user object identifier, such as an LDAP Object Identifier."
  }  # dimension src__group__product_object_id

  dimension: src__hostname {
    type: string
    sql: ${TABLE}.src.hostname ;;
    group_label: "src"
    label: "src.hostname"
    view_label: "UDM"
    description: "Client hostname or domain name field. Hostname also doubles as the domain for remote entities."
  }  # dimension src__hostname

  dimension: src__investigation {
    hidden: yes
  }  # dimension src__investigation

  dimension: src__investigation__risk_score {
    type: number
    sql: ${TABLE}.src.investigation.risk_score ;;
    group_label: "src"
    label: "src.investigation.risk_score"
    view_label: "UDM"
    description: "Risk score for a finding set by an analyst."
  }  # dimension src__investigation__risk_score

  dimension: src__ip {
    hidden: yes
  }  # dimension src__ip

  dimension: src__ip_geo_artifact {
    hidden: yes
  }  # dimension src__ip_geo_artifact

  dimension: src__ip_location {
    hidden: yes
  }  # dimension src__ip_location

  dimension: src__labels {
    hidden: yes
  }  # dimension src__labels

  dimension: src__location {
    hidden: yes
  }  # dimension src__location

  dimension: src__location__city {
    type: string
    sql: ${TABLE}.src.location.city ;;
    group_label: "src"
    label: "src.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension src__location__city

  dimension: src__location__country_or_region {
    type: string
    sql: ${TABLE}.src.location.country_or_region ;;
    group_label: "src"
    label: "src.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension src__location__country_or_region

  dimension: src__location__name {
    type: string
    sql: ${TABLE}.src.location.name ;;
    group_label: "src"
    label: "src.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension src__location__name

  dimension: src__location__region_coordinates {
    type: location
    sql_latitude: ${TABLE}.src.location.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.src.location.region_coordinates.longitude ;;
    group_label: "src"
    group_item_label: "src.location.region_coordinates [L]"
    label: "src.location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [L]: This is a location field and can be used in maps."
  }  # dimension src__location__region_coordinates

  dimension: src__location__region_latitude {
    type: number
    sql: ${TABLE}.src.location.region_latitude ;;
    group_label: "src"
    group_item_label: "src.location.region_latitude [D]"
    label: "src.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__location__region_latitude

  dimension: src__location__region_longitude {
    type: number
    sql: ${TABLE}.src.location.region_longitude ;;
    group_label: "src"
    group_item_label: "src.location.region_longitude [D]"
    label: "src.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__location__region_longitude

  dimension: src__location__location {
    type: location
    sql_latitude: ${TABLE}.src.location.region_latitude ;;
    sql_longitude: ${TABLE}.src.location.region_longitude ;;
    group_label: "src"
    group_item_label: "src.location.location [D][L]"
    label: "src.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension src__location__location

  dimension: src__location__state {
    type: string
    sql: ${TABLE}.src.location.state ;;
    group_label: "src"
    label: "src.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension src__location__state

  dimension: src__mac {
    hidden: yes
  }  # dimension src__mac

  dimension: src__namespace {
    type: string
    sql: ${TABLE}.src.namespace ;;
    group_label: "src"
    label: "src.namespace"
    view_label: "UDM"
    description: "Namespace which the device belongs to (e.g. AD forest) Uses for this field include Microsoft Windows AD forest, name of subsidiary or acquisition, etc."
  }  # dimension src__namespace

  dimension: src__nat_ip {
    hidden: yes
  }  # dimension src__nat_ip

  dimension: src__network {
    hidden: yes
  }  # dimension src__network

  dimension: src__network__application_protocol_version {
    type: string
    sql: ${TABLE}.src.network.application_protocol_version ;;
    group_label: "src"
    label: "src.network.application_protocol_version"
    view_label: "UDM"
    description: "The version of the application protocol. e.g. \"1.1, 2.0\""
  }  # dimension src__network__application_protocol_version

  dimension: src__network__asn {
    type: string
    sql: ${TABLE}.src.network.asn ;;
    group_label: "src"
    label: "src.network.asn"
    view_label: "UDM"
    description: "Autonomous system number."
  }  # dimension src__network__asn

  dimension: src__network__carrier_name {
    type: string
    sql: ${TABLE}.src.network.carrier_name ;;
    group_label: "src"
    label: "src.network.carrier_name"
    view_label: "UDM"
    description: "Carrier identification."
  }  # dimension src__network__carrier_name

  dimension: src__network__http {
    hidden: yes
  }  # dimension src__network__http

  dimension: src__network__http__user_agent {
    type: string
    sql: ${TABLE}.src.network.http.user_agent ;;
    group_label: "src"
    label: "src.network.http.user_agent"
    view_label: "UDM"
    description: "The User-Agent request header which includes the application type, operating system, software vendor or software version of the requesting software user agent."
  }  # dimension src__network__http__user_agent

  dimension: src__network__session_id {
    type: string
    sql: ${TABLE}.src.network.session_id ;;
    group_label: "src"
    label: "src.network.session_id"
    view_label: "UDM"
    description: "The ID of the network session."
  }  # dimension src__network__session_id

  dimension: src__platform_version {
    type: string
    sql: ${TABLE}.src.platform_version ;;
    group_label: "src"
    label: "src.platform_version"
    view_label: "UDM"
    description: "Platform version. For example, \"Microsoft Windows 1803\"."
  }  # dimension src__platform_version

  dimension: src__port {
    type: number
    value_format: "#"
    sql: ${TABLE}.src.port ;;
    group_label: "src"
    label: "src.port"
    view_label: "UDM"
    description: "Source or destination network port number when a specific network connection is described within an event."
  }  # dimension src__port

  dimension: src__process {
    hidden: yes
  }  # dimension src__process

  dimension: src__process__command_line {
    type: string
    sql: ${TABLE}.src.process.command_line ;;
    group_label: "src"
    label: "src.process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension src__process__command_line

  dimension: src__process__file {
    hidden: yes
  }  # dimension src__process__file

  dimension: src__process__file__full_path {
    type: string
    sql: ${TABLE}.src.process.file.full_path ;;
    group_label: "src"
    label: "src.process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension src__process__file__full_path

  dimension: src__process__file__md5 {
    type: string
    sql: ${TABLE}.src.process.file.md5 ;;
    group_label: "src"
    label: "src.process.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension src__process__file__md5

  dimension: src__process__file__names {
    hidden: yes
  }  # dimension src__process__file__names

  dimension: src__process__file__sha1 {
    type: string
    sql: ${TABLE}.src.process.file.sha1 ;;
    group_label: "src"
    label: "src.process.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension src__process__file__sha1

  dimension: src__process__file__sha256 {
    type: string
    sql: ${TABLE}.src.process.file.sha256 ;;
    group_label: "src"
    label: "src.process.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension src__process__file__sha256

  dimension: src__process__file__size {
    type: number
    sql: ${TABLE}.src.process.file.size ;;
    group_label: "src"
    label: "src.process.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension src__process__file__size

  dimension: src__process__pid {
    type: string
    sql: ${TABLE}.src.process.pid ;;
    group_label: "src"
    label: "src.process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension src__process__pid

  dimension: src__process__product_specific_process_id {
    type: string
    sql: ${TABLE}.src.process.product_specific_process_id ;;
    group_label: "src"
    label: "src.process.product_specific_process_id"
    view_label: "UDM"
    description: "A product specific process id."
  }  # dimension src__process__product_specific_process_id

  dimension: src__registry {
    hidden: yes
  }  # dimension src__registry

  dimension: src__registry__registry_key {
    type: string
    sql: ${TABLE}.src.registry.registry_key ;;
    group_label: "src"
    label: "src.registry.registry_key"
    view_label: "UDM"
    description: "Registry key associated with an application or system component (e.g., HKEY_, HKCU\Environment...)."
  }  # dimension src__registry__registry_key

  dimension: src__registry__registry_value_data {
    type: string
    sql: ${TABLE}.src.registry.registry_value_data ;;
    group_label: "src"
    label: "src.registry.registry_value_data"
    view_label: "UDM"
    description: "Data associated with a registry value (e.g. %USERPROFILE%\Local Settings\Temp)."
  }  # dimension src__registry__registry_value_data

  dimension: src__registry__registry_value_name {
    type: string
    sql: ${TABLE}.src.registry.registry_value_name ;;
    group_label: "src"
    label: "src.registry.registry_value_name"
    view_label: "UDM"
    description: "Name of the registry value associated with an application or system component (e.g. TEMP)."
  }  # dimension src__registry__registry_value_name

  dimension: src__resource {
    hidden: yes
  }  # dimension src__resource

  dimension: src__resource__attribute {
    hidden: yes
  }  # dimension src__resource__attribute

  dimension_group: src__resource__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.resource.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.resource.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.resource.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension src__resource__attribute__creation_time

  dimension: src__resource__attribute__labels {
    hidden: yes
  }  # dimension src__resource__attribute__labels

  dimension_group: src__resource__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.resource.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.resource.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.resource.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension src__resource__attribute__last_update_time

  dimension: src__resource__attribute__permissions {
    hidden: yes
  }  # dimension src__resource__attribute__permissions

  dimension: src__resource__id {
    type: string
    sql: ${TABLE}.src.resource.id ;;
    group_label: "src"
    group_item_label: "src.resource.id [D]"
    label: "src.resource.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__resource__id

  dimension: src__resource__name {
    type: string
    sql: ${TABLE}.src.resource.name ;;
    group_label: "src"
    label: "src.resource.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension src__resource__name

  dimension: src__resource__parent {
    type: string
    sql: ${TABLE}.src.resource.parent ;;
    group_label: "src"
    group_item_label: "src.resource.parent [D]"
    label: "src.resource.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__resource__parent

  dimension: src__resource__product_object_id {
    type: string
    sql: ${TABLE}.src.resource.product_object_id ;;
    group_label: "src"
    label: "src.resource.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension src__resource__product_object_id

  dimension: src__resource__resource_subtype {
    type: string
    sql: ${TABLE}.src.resource.resource_subtype ;;
    group_label: "src"
    label: "src.resource.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension src__resource__resource_subtype

  dimension: src__resource__resource_type {
    type: number
    sql: ${TABLE}.src.resource.resource_type ;;
    group_label: "src"
    label: "src.resource.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension src__resource__resource_type

  dimension: src__resource__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.src.resource.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "src"
    label: "src.resource.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension src__resource__resource_type_enum_name

  dimension: src__resource__type {
    type: string
    sql: ${TABLE}.src.resource.type ;;
    group_label: "src"
    group_item_label: "src.resource.type [D]"
    label: "src.resource.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__resource__type

  dimension: src__resource_ancestors {
    hidden: yes
  }  # dimension src__resource_ancestors

  dimension: src__url {
    type: string
    sql: ${TABLE}.src.url ;;
    group_label: "src"
    label: "src.url"
    view_label: "UDM"
    description: "The URL."
  }  # dimension src__url

  dimension: src__user {
    hidden: yes
  }  # dimension src__user

  dimension: src__user__account_type {
    type: number
    sql: ${TABLE}.src.user.account_type ;;
    group_label: "src"
    label: "src.user.account_type"
    view_label: "UDM"
    description: "Type of user account (service, domain, cloud, etc).  Somewhat aligned to: <a href=\"https://attack.mitre.org/techniques/T1078/\">https://attack.mitre.org/techniques/T1078/</a>"
  }  # dimension src__user__account_type

  dimension: src__user__account_type_enum_name {
    type: string
    suggestions: ["ACCOUNT_TYPE_UNSPECIFIED", "CLOUD_ACCOUNT_TYPE", "DEFAULT_ACCOUNT_TYPE", "DOMAIN_ACCOUNT_TYPE", "LOCAL_ACCOUNT_TYPE", "SERVICE_ACCOUNT_TYPE"]
    sql: CASE ${TABLE}.src.user.account_type WHEN 0 THEN 'ACCOUNT_TYPE_UNSPECIFIED' WHEN 1 THEN 'DOMAIN_ACCOUNT_TYPE' WHEN 2 THEN 'LOCAL_ACCOUNT_TYPE' WHEN 3 THEN 'CLOUD_ACCOUNT_TYPE' WHEN 4 THEN 'SERVICE_ACCOUNT_TYPE' WHEN 5 THEN 'DEFAULT_ACCOUNT_TYPE' END ;;
    group_label: "src"
    label: "src.user.account_type_enum_name"
    view_label: "UDM"
    description: "Type of user account (service, domain, cloud, etc).  Somewhat aligned to: <a href=\"https://attack.mitre.org/techniques/T1078/\">https://attack.mitre.org/techniques/T1078/</a>"
  }  # dimension src__user__account_type_enum_name

  dimension: src__user__attribute {
    hidden: yes
  }  # dimension src__user__attribute

  dimension: src__user__attribute__cloud {
    hidden: yes
  }  # dimension src__user__attribute__cloud

  dimension: src__user__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.src.user.attribute.cloud.environment ;;
    group_label: "src"
    label: "src.user.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension src__user__attribute__cloud__environment

  dimension: src__user__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.src.user.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "src"
    label: "src.user.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension src__user__attribute__cloud__environment_enum_name

  dimension: src__user__attribute__cloud__project {
    hidden: yes
  }  # dimension src__user__attribute__cloud__project

  dimension: src__user__attribute__cloud__project__id {
    type: string
    sql: ${TABLE}.src.user.attribute.cloud.project.id ;;
    group_label: "src"
    group_item_label: "src.user.attribute.cloud.project.id [D]"
    label: "src.user.attribute.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__user__attribute__cloud__project__id

  dimension_group: src__user__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.user.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.user.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.user.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension src__user__attribute__creation_time

  dimension: src__user__attribute__labels {
    hidden: yes
  }  # dimension src__user__attribute__labels

  dimension_group: src__user__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.user.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.user.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.user.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension src__user__attribute__last_update_time

  dimension: src__user__attribute__roles {
    hidden: yes
  }  # dimension src__user__attribute__roles

  dimension: src__user__company_name {
    type: string
    sql: ${TABLE}.src.user.company_name ;;
    group_label: "src"
    label: "src.user.company_name"
    view_label: "UDM"
    description: "User job company name."
  }  # dimension src__user__company_name

  dimension: src__user__department {
    hidden: yes
  }  # dimension src__user__department

  dimension: src__user__email_addresses {
    hidden: yes
  }  # dimension src__user__email_addresses

  dimension: src__user__employee_id {
    type: string
    sql: ${TABLE}.src.user.employee_id ;;
    group_label: "src"
    label: "src.user.employee_id"
    view_label: "UDM"
    description: "Human capital management identifier."
  }  # dimension src__user__employee_id

  dimension: src__user__first_name {
    type: string
    sql: ${TABLE}.src.user.first_name ;;
    group_label: "src"
    label: "src.user.first_name"
    view_label: "UDM"
    description: "First name of the user (e.g. \"John\")."
  }  # dimension src__user__first_name

  dimension: src__user__group_identifiers {
    hidden: yes
  }  # dimension src__user__group_identifiers

  dimension: src__user__groupid {
    type: string
    sql: ${TABLE}.src.user.groupid ;;
    group_label: "src"
    group_item_label: "src.user.groupid [D]"
    label: "src.user.groupid"
    view_label: "UDM"
    description: "The ID of the group that the user belongs to. Deprecated in favor of the repeated group_identifiers field. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__user__groupid

  dimension_group: src__user__hire_date {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.user.hire_date.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.user.hire_date.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.user.hire_date"
    view_label: "UDM"
    description: "User job employment hire date."
  }  # dimension src__user__hire_date

  dimension_group: src__user__last_login_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.user.last_login_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.user.last_login_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.user.last_login_time"
    view_label: "UDM"
    description: "User last login timestamp."
  }  # dimension src__user__last_login_time

  dimension: src__user__last_name {
    type: string
    sql: ${TABLE}.src.user.last_name ;;
    group_label: "src"
    label: "src.user.last_name"
    view_label: "UDM"
    description: "Last name of the user (e.g. \"Locke\")."
  }  # dimension src__user__last_name

  dimension_group: src__user__last_password_change_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.user.last_password_change_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.user.last_password_change_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.user.last_password_change_time"
    view_label: "UDM"
    description: "User last password change timestamp."
  }  # dimension src__user__last_password_change_time

  dimension: src__user__managers {
    hidden: yes
  }  # dimension src__user__managers

  dimension: src__user__middle_name {
    type: string
    sql: ${TABLE}.src.user.middle_name ;;
    group_label: "src"
    label: "src.user.middle_name"
    view_label: "UDM"
    description: "Middle name of the user."
  }  # dimension src__user__middle_name

  dimension: src__user__office_address {
    hidden: yes
  }  # dimension src__user__office_address

  dimension: src__user__office_address__city {
    type: string
    sql: ${TABLE}.src.user.office_address.city ;;
    group_label: "src"
    label: "src.user.office_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension src__user__office_address__city

  dimension: src__user__office_address__country_or_region {
    type: string
    sql: ${TABLE}.src.user.office_address.country_or_region ;;
    group_label: "src"
    label: "src.user.office_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension src__user__office_address__country_or_region

  dimension: src__user__office_address__floor_name {
    type: string
    sql: ${TABLE}.src.user.office_address.floor_name ;;
    group_label: "src"
    label: "src.user.office_address.floor_name"
    view_label: "UDM"
    description: "Floor name, number or a combination of the two for a building. (e.g. \"1-A\")."
  }  # dimension src__user__office_address__floor_name

  dimension: src__user__office_address__name {
    type: string
    sql: ${TABLE}.src.user.office_address.name ;;
    group_label: "src"
    label: "src.user.office_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension src__user__office_address__name

  dimension: src__user__office_address__state {
    type: string
    sql: ${TABLE}.src.user.office_address.state ;;
    group_label: "src"
    label: "src.user.office_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension src__user__office_address__state

  dimension: src__user__personal_address {
    hidden: yes
  }  # dimension src__user__personal_address

  dimension: src__user__personal_address__city {
    type: string
    sql: ${TABLE}.src.user.personal_address.city ;;
    group_label: "src"
    label: "src.user.personal_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension src__user__personal_address__city

  dimension: src__user__personal_address__country_or_region {
    type: string
    sql: ${TABLE}.src.user.personal_address.country_or_region ;;
    group_label: "src"
    label: "src.user.personal_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension src__user__personal_address__country_or_region

  dimension: src__user__personal_address__name {
    type: string
    sql: ${TABLE}.src.user.personal_address.name ;;
    group_label: "src"
    label: "src.user.personal_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension src__user__personal_address__name

  dimension: src__user__personal_address__state {
    type: string
    sql: ${TABLE}.src.user.personal_address.state ;;
    group_label: "src"
    label: "src.user.personal_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension src__user__personal_address__state

  dimension: src__user__phone_numbers {
    hidden: yes
  }  # dimension src__user__phone_numbers

  dimension: src__user__product_object_id {
    type: string
    sql: ${TABLE}.src.user.product_object_id ;;
    group_label: "src"
    label: "src.user.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension src__user__product_object_id

  dimension: src__user__role_name {
    type: string
    sql: ${TABLE}.src.user.role_name ;;
    group_label: "src"
    group_item_label: "src.user.role_name [D]"
    label: "src.user.role_name"
    view_label: "UDM"
    description: "System role name for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension src__user__role_name

  dimension_group: src__user__termination_date {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.src.user.termination_date.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.src.user.termination_date.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.user.termination_date"
    view_label: "UDM"
    description: "User job employment termination date."
  }  # dimension src__user__termination_date

  dimension: src__user__time_off {
    hidden: yes
  }  # dimension src__user__time_off

  dimension: src__user__title {
    type: string
    sql: ${TABLE}.src.user.title ;;
    group_label: "src"
    label: "src.user.title"
    view_label: "UDM"
    description: "User job title."
  }  # dimension src__user__title

  dimension: src__user__user_authentication_status {
    type: number
    sql: ${TABLE}.src.user.user_authentication_status ;;
    group_label: "src"
    label: "src.user.user_authentication_status"
    view_label: "UDM"
    description: "System authentication status for user."
  }  # dimension src__user__user_authentication_status

  dimension: src__user__user_authentication_status_enum_name {
    type: string
    suggestions: ["ACTIVE", "DELETED", "NO_ACTIVE_CREDENTIALS", "SUSPENDED", "UNKNOWN_AUTHENTICATION_STATUS"]
    sql: CASE ${TABLE}.src.user.user_authentication_status WHEN 0 THEN 'UNKNOWN_AUTHENTICATION_STATUS' WHEN 1 THEN 'ACTIVE' WHEN 2 THEN 'SUSPENDED' WHEN 3 THEN 'NO_ACTIVE_CREDENTIALS' WHEN 4 THEN 'DELETED' END ;;
    group_label: "src"
    label: "src.user.user_authentication_status_enum_name"
    view_label: "UDM"
    description: "System authentication status for user."
  }  # dimension src__user__user_authentication_status_enum_name

  dimension: src__user__user_display_name {
    type: string
    sql: ${TABLE}.src.user.user_display_name ;;
    group_label: "src"
    label: "src.user.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension src__user__user_display_name

  dimension: src__user__userid {
    type: string
    sql: ${TABLE}.src.user.userid ;;
    group_label: "src"
    label: "src.user.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension src__user__userid

  dimension: src__user__windows_sid {
    type: string
    sql: ${TABLE}.src.user.windows_sid ;;
    group_label: "src"
    label: "src.user.windows_sid"
    view_label: "UDM"
    description: "The Microsoft Windows SID of the user."
  }  # dimension src__user__windows_sid

  dimension: target {
    hidden: yes
  }  # dimension target

  dimension: target__administrative_domain {
    type: string
    sql: ${TABLE}.target.administrative_domain ;;
    group_label: "target"
    label: "target.administrative_domain"
    view_label: "UDM"
    description: "Domain which the device belongs to (for example, the Microsoft Windows domain)."
  }  # dimension target__administrative_domain

  dimension: target__application {
    type: string
    sql: ${TABLE}.target.application ;;
    group_label: "target"
    label: "target.application"
    view_label: "UDM"
    description: "The name of an application or service. Some SSO solutions only capture the name of a target application such as \"Atlassian\" or \"Chronicle\"."
  }  # dimension target__application

  dimension: target__artifact {
    hidden: yes
  }  # dimension target__artifact

  dimension: target__artifact__ip {
    type: string
    sql: ${TABLE}.target.artifact.ip ;;
    group_label: "target"
    label: "target.artifact.ip"
    view_label: "UDM"
    description: "IP address of the artifact."
  }  # dimension target__artifact__ip

  dimension: target__artifact__location {
    hidden: yes
  }  # dimension target__artifact__location

  dimension: target__artifact__location__name {
    type: string
    sql: ${TABLE}.target.artifact.location.name ;;
    group_label: "target"
    label: "target.artifact.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension target__artifact__location__name

  dimension: target__asset {
    hidden: yes
  }  # dimension target__asset

  dimension: target__asset__asset_id {
    type: string
    sql: ${TABLE}.target.asset.asset_id ;;
    group_label: "target"
    label: "target.asset.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension target__asset__asset_id

  dimension: target__asset__attribute {
    hidden: yes
  }  # dimension target__asset__attribute

  dimension: target__asset__attribute__cloud {
    hidden: yes
  }  # dimension target__asset__attribute__cloud

  dimension: target__asset__attribute__cloud__availability_zone {
    type: string
    sql: ${TABLE}.target.asset.attribute.cloud.availability_zone ;;
    group_label: "target"
    label: "target.asset.attribute.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name)."
  }  # dimension target__asset__attribute__cloud__availability_zone

  dimension: target__asset__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.target.asset.attribute.cloud.environment ;;
    group_label: "target"
    label: "target.asset.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension target__asset__attribute__cloud__environment

  dimension: target__asset__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.target.asset.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "target"
    label: "target.asset.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension target__asset__attribute__cloud__environment_enum_name

  dimension: target__asset__attribute__cloud__project {
    hidden: yes
  }  # dimension target__asset__attribute__cloud__project

  dimension: target__asset__attribute__cloud__project__id {
    type: string
    sql: ${TABLE}.target.asset.attribute.cloud.project.id ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.project.id [D]"
    label: "target.asset.attribute.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__project__id

  dimension: target__asset__attribute__cloud__project__name {
    type: string
    sql: ${TABLE}.target.asset.attribute.cloud.project.name ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.project.name [D]"
    label: "target.asset.attribute.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__project__name

  dimension: target__asset__attribute__cloud__project__product_object_id {
    type: string
    sql: ${TABLE}.target.asset.attribute.cloud.project.product_object_id ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.project.product_object_id [D]"
    label: "target.asset.attribute.cloud.project.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__project__product_object_id

  dimension: target__asset__attribute__cloud__project__resource_type {
    type: number
    sql: ${TABLE}.target.asset.attribute.cloud.project.resource_type ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.project.resource_type [D]"
    label: "target.asset.attribute.cloud.project.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__project__resource_type

  dimension: target__asset__attribute__cloud__project__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.target.asset.attribute.cloud.project.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.project.resource_type_enum_name [D]"
    label: "target.asset.attribute.cloud.project.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__project__resource_type_enum_name

  dimension: target__asset__attribute__cloud__project__type {
    type: string
    sql: ${TABLE}.target.asset.attribute.cloud.project.type ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.project.type [D]"
    label: "target.asset.attribute.cloud.project.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__project__type

  dimension: target__asset__attribute__cloud__vpc {
    hidden: yes
  }  # dimension target__asset__attribute__cloud__vpc

  dimension: target__asset__attribute__cloud__vpc__id {
    type: string
    sql: ${TABLE}.target.asset.attribute.cloud.vpc.id ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.vpc.id [D]"
    label: "target.asset.attribute.cloud.vpc.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__vpc__id

  dimension: target__asset__attribute__cloud__vpc__name {
    type: string
    sql: ${TABLE}.target.asset.attribute.cloud.vpc.name ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.vpc.name [D]"
    label: "target.asset.attribute.cloud.vpc.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__vpc__name

  dimension: target__asset__attribute__cloud__vpc__resource_type {
    type: number
    sql: ${TABLE}.target.asset.attribute.cloud.vpc.resource_type ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.vpc.resource_type [D]"
    label: "target.asset.attribute.cloud.vpc.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__vpc__resource_type

  dimension: target__asset__attribute__cloud__vpc__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.target.asset.attribute.cloud.vpc.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "target"
    group_item_label: "target.asset.attribute.cloud.vpc.resource_type_enum_name [D]"
    label: "target.asset.attribute.cloud.vpc.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__attribute__cloud__vpc__resource_type_enum_name

  dimension_group: target__asset__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.asset.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.asset.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension target__asset__attribute__creation_time

  dimension: target__asset__attribute__labels {
    hidden: yes
  }  # dimension target__asset__attribute__labels

  dimension_group: target__asset__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.asset.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.asset.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension target__asset__attribute__last_update_time

  dimension: target__asset__attribute__permissions {
    hidden: yes
  }  # dimension target__asset__attribute__permissions

  dimension: target__asset__attribute__roles {
    hidden: yes
  }  # dimension target__asset__attribute__roles

  dimension: target__asset__category {
    type: string
    sql: ${TABLE}.target.asset.category ;;
    group_label: "target"
    label: "target.asset.category"
    view_label: "UDM"
    description: "The category of the asset (e.g. \"End User Asset\", \"Workstation\", \"Server\")."
  }  # dimension target__asset__category

  dimension_group: target__asset__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.asset.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.asset.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    group_item_label: "target.asset.creation_time [D]"
    label: "target.asset.creation_time"
    view_label: "UDM"
    description: "Time the asset was created or provisioned. Deprecate: creation_time should be populated in Attribute as generic metadata. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__creation_time

  dimension: target__asset__deployment_status {
    type: number
    sql: ${TABLE}.target.asset.deployment_status ;;
    group_label: "target"
    label: "target.asset.deployment_status"
    view_label: "UDM"
    description: "The deployment status of the asset for device lifecycle purposes."
  }  # dimension target__asset__deployment_status

  dimension: target__asset__deployment_status_enum_name {
    type: string
    suggestions: ["ACTIVE", "DECOMISSIONED", "DEPLOYMENT_STATUS_UNSPECIFIED", "PENDING_DECOMISSION"]
    sql: CASE ${TABLE}.target.asset.deployment_status WHEN 0 THEN 'DEPLOYMENT_STATUS_UNSPECIFIED' WHEN 1 THEN 'ACTIVE' WHEN 2 THEN 'PENDING_DECOMISSION' WHEN 3 THEN 'DECOMISSIONED' END ;;
    group_label: "target"
    label: "target.asset.deployment_status_enum_name"
    view_label: "UDM"
    description: "The deployment status of the asset for device lifecycle purposes."
  }  # dimension target__asset__deployment_status_enum_name

  dimension_group: target__asset__first_discover_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.asset.first_discover_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.asset.first_discover_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.first_discover_time"
    view_label: "UDM"
    description: "Time the asset was first discovered (by asset management/discoverability software)."
  }  # dimension target__asset__first_discover_time

  dimension_group: target__asset__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.asset.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.asset.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.first_seen_time"
    view_label: "UDM"
    description: "The first observed time for an asset. The value is calculated on the basis of the first time the identifier was observed."
  }  # dimension target__asset__first_seen_time

  dimension: target__asset__hardware {
    hidden: yes
  }  # dimension target__asset__hardware

  dimension: target__asset__hostname {
    type: string
    sql: ${TABLE}.target.asset.hostname ;;
    group_label: "target"
    label: "target.asset.hostname"
    view_label: "UDM"
    description: "Asset hostname or domain name field."
  }  # dimension target__asset__hostname

  dimension: target__asset__ip {
    hidden: yes
  }  # dimension target__asset__ip

  dimension: target__asset__labels {
    hidden: yes
  }  # dimension target__asset__labels

  dimension_group: target__asset__last_boot_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.asset.last_boot_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.asset.last_boot_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.last_boot_time"
    view_label: "UDM"
    description: "Time the asset was last boot started."
  }  # dimension target__asset__last_boot_time

  dimension_group: target__asset__last_discover_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.asset.last_discover_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.asset.last_discover_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.last_discover_time"
    view_label: "UDM"
    description: "Time the asset was last discovered (by asset management/discoverability software)."
  }  # dimension target__asset__last_discover_time

  dimension: target__asset__location {
    hidden: yes
  }  # dimension target__asset__location

  dimension: target__asset__location__city {
    type: string
    sql: ${TABLE}.target.asset.location.city ;;
    group_label: "target"
    label: "target.asset.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension target__asset__location__city

  dimension: target__asset__location__country_or_region {
    type: string
    sql: ${TABLE}.target.asset.location.country_or_region ;;
    group_label: "target"
    label: "target.asset.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension target__asset__location__country_or_region

  dimension: target__asset__location__floor_name {
    type: string
    sql: ${TABLE}.target.asset.location.floor_name ;;
    group_label: "target"
    label: "target.asset.location.floor_name"
    view_label: "UDM"
    description: "Floor name, number or a combination of the two for a building. (e.g. \"1-A\")."
  }  # dimension target__asset__location__floor_name

  dimension: target__asset__location__name {
    type: string
    sql: ${TABLE}.target.asset.location.name ;;
    group_label: "target"
    label: "target.asset.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension target__asset__location__name

  dimension: target__asset__location__region_latitude {
    type: number
    sql: ${TABLE}.target.asset.location.region_latitude ;;
    group_label: "target"
    group_item_label: "target.asset.location.region_latitude [D]"
    label: "target.asset.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__location__region_latitude

  dimension: target__asset__location__region_longitude {
    type: number
    sql: ${TABLE}.target.asset.location.region_longitude ;;
    group_label: "target"
    group_item_label: "target.asset.location.region_longitude [D]"
    label: "target.asset.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__asset__location__region_longitude

  dimension: target__asset__location__location {
    type: location
    sql_latitude: ${TABLE}.target.asset.location.region_latitude ;;
    sql_longitude: ${TABLE}.target.asset.location.region_longitude ;;
    group_label: "target"
    group_item_label: "target.asset.location.location [D][L]"
    label: "target.asset.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension target__asset__location__location

  dimension: target__asset__location__state {
    type: string
    sql: ${TABLE}.target.asset.location.state ;;
    group_label: "target"
    label: "target.asset.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension target__asset__location__state

  dimension: target__asset__mac {
    hidden: yes
  }  # dimension target__asset__mac

  dimension: target__asset__nat_ip {
    hidden: yes
  }  # dimension target__asset__nat_ip

  dimension: target__asset__network_domain {
    type: string
    sql: ${TABLE}.target.asset.network_domain ;;
    group_label: "target"
    label: "target.asset.network_domain"
    view_label: "UDM"
    description: "The network domain of the asset (e.g. \"corp.acme.com\")"
  }  # dimension target__asset__network_domain

  dimension: target__asset__platform_software {
    hidden: yes
  }  # dimension target__asset__platform_software

  dimension: target__asset__platform_software__platform {
    type: number
    sql: ${TABLE}.target.asset.platform_software.platform ;;
    group_label: "target"
    label: "target.asset.platform_software.platform"
    view_label: "UDM"
    description: "The platform operating system."
  }  # dimension target__asset__platform_software__platform

  dimension: target__asset__platform_software__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.target.asset.platform_software.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "target"
    label: "target.asset.platform_software.platform_enum_name"
    view_label: "UDM"
    description: "The platform operating system."
  }  # dimension target__asset__platform_software__platform_enum_name

  dimension: target__asset__platform_software__platform_patch_level {
    type: string
    sql: ${TABLE}.target.asset.platform_software.platform_patch_level ;;
    group_label: "target"
    label: "target.asset.platform_software.platform_patch_level"
    view_label: "UDM"
    description: "The platform software patch level ( e.g. \"Build 17134.48\", \"SP1\")."
  }  # dimension target__asset__platform_software__platform_patch_level

  dimension: target__asset__platform_software__platform_version {
    type: string
    sql: ${TABLE}.target.asset.platform_software.platform_version ;;
    group_label: "target"
    label: "target.asset.platform_software.platform_version"
    view_label: "UDM"
    description: "The platform software version ( e.g. \"Microsoft Windows 1803\")."
  }  # dimension target__asset__platform_software__platform_version

  dimension: target__asset__product_object_id {
    type: string
    sql: ${TABLE}.target.asset.product_object_id ;;
    group_label: "target"
    label: "target.asset.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID  or similar)."
  }  # dimension target__asset__product_object_id

  dimension: target__asset__software {
    hidden: yes
  }  # dimension target__asset__software

  dimension_group: target__asset__system_last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.asset.system_last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.asset.system_last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.system_last_update_time"
    view_label: "UDM"
    description: "Time the asset system or OS was last updated. For all other operations that are not system updates (such as resizing a vm, etc.) use Attribute.last_update_time."
  }  # dimension target__asset__system_last_update_time

  dimension: target__asset__type {
    type: number
    sql: ${TABLE}.target.asset.type ;;
    group_label: "target"
    label: "target.asset.type"
    view_label: "UDM"
    description: "The type of the asset (e.g. workstation or laptop or server)."
  }  # dimension target__asset__type

  dimension: target__asset__type_enum_name {
    type: string
    suggestions: ["IOT", "LAPTOP", "MOBILE", "NETWORK_ATTACHED_STORAGE", "PRINTER", "ROLE_UNSPECIFIED", "SCANNER", "SERVER", "TAPE_LIBRARY", "WORKSTATION"]
    sql: CASE ${TABLE}.target.asset.type WHEN 0 THEN 'ROLE_UNSPECIFIED' WHEN 1 THEN 'WORKSTATION' WHEN 2 THEN 'LAPTOP' WHEN 3 THEN 'IOT' WHEN 4 THEN 'NETWORK_ATTACHED_STORAGE' WHEN 5 THEN 'PRINTER' WHEN 6 THEN 'SCANNER' WHEN 7 THEN 'SERVER' WHEN 8 THEN 'TAPE_LIBRARY' WHEN 9 THEN 'MOBILE' END ;;
    group_label: "target"
    label: "target.asset.type_enum_name"
    view_label: "UDM"
    description: "The type of the asset (e.g. workstation or laptop or server)."
  }  # dimension target__asset__type_enum_name

  dimension: target__asset__vulnerabilities {
    hidden: yes
  }  # dimension target__asset__vulnerabilities

  dimension: target__asset_id {
    type: string
    sql: ${TABLE}.target.asset_id ;;
    group_label: "target"
    label: "target.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension target__asset_id

  dimension: target__cloud {
    hidden: yes
  }  # dimension target__cloud

  dimension: target__cloud__availability_zone {
    type: string
    sql: ${TABLE}.target.cloud.availability_zone ;;
    group_label: "target"
    group_item_label: "target.cloud.availability_zone [D]"
    label: "target.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__availability_zone

  dimension: target__cloud__environment {
    type: number
    sql: ${TABLE}.target.cloud.environment ;;
    group_label: "target"
    group_item_label: "target.cloud.environment [D]"
    label: "target.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__environment

  dimension: target__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.target.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "target"
    group_item_label: "target.cloud.environment_enum_name [D]"
    label: "target.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__environment_enum_name

  dimension: target__cloud__project {
    hidden: yes
  }  # dimension target__cloud__project

  dimension: target__cloud__project__attribute {
    hidden: yes
  }  # dimension target__cloud__project__attribute

  dimension: target__cloud__project__attribute__labels {
    hidden: yes
  }  # dimension target__cloud__project__attribute__labels

  dimension: target__cloud__project__id {
    type: string
    sql: ${TABLE}.target.cloud.project.id ;;
    group_label: "target"
    group_item_label: "target.cloud.project.id [D]"
    label: "target.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__project__id

  dimension: target__cloud__project__name {
    type: string
    sql: ${TABLE}.target.cloud.project.name ;;
    group_label: "target"
    group_item_label: "target.cloud.project.name [D]"
    label: "target.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__project__name

  dimension: target__cloud__project__parent {
    type: string
    sql: ${TABLE}.target.cloud.project.parent ;;
    group_label: "target"
    group_item_label: "target.cloud.project.parent [D]"
    label: "target.cloud.project.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__project__parent

  dimension: target__cloud__project__product_object_id {
    type: string
    sql: ${TABLE}.target.cloud.project.product_object_id ;;
    group_label: "target"
    group_item_label: "target.cloud.project.product_object_id [D]"
    label: "target.cloud.project.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__project__product_object_id

  dimension: target__cloud__project__resource_subtype {
    type: string
    sql: ${TABLE}.target.cloud.project.resource_subtype ;;
    group_label: "target"
    group_item_label: "target.cloud.project.resource_subtype [D]"
    label: "target.cloud.project.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\"). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__project__resource_subtype

  dimension: target__cloud__project__type {
    type: string
    sql: ${TABLE}.target.cloud.project.type ;;
    group_label: "target"
    group_item_label: "target.cloud.project.type [D]"
    label: "target.cloud.project.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__project__type

  dimension: target__cloud__vpc {
    hidden: yes
  }  # dimension target__cloud__vpc

  dimension: target__cloud__vpc__id {
    type: string
    sql: ${TABLE}.target.cloud.vpc.id ;;
    group_label: "target"
    group_item_label: "target.cloud.vpc.id [D]"
    label: "target.cloud.vpc.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__vpc__id

  dimension: target__cloud__vpc__name {
    type: string
    sql: ${TABLE}.target.cloud.vpc.name ;;
    group_label: "target"
    group_item_label: "target.cloud.vpc.name [D]"
    label: "target.cloud.vpc.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__vpc__name

  dimension: target__cloud__vpc__product_object_id {
    type: string
    sql: ${TABLE}.target.cloud.vpc.product_object_id ;;
    group_label: "target"
    group_item_label: "target.cloud.vpc.product_object_id [D]"
    label: "target.cloud.vpc.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__vpc__product_object_id

  dimension: target__cloud__vpc__resource_subtype {
    type: string
    sql: ${TABLE}.target.cloud.vpc.resource_subtype ;;
    group_label: "target"
    group_item_label: "target.cloud.vpc.resource_subtype [D]"
    label: "target.cloud.vpc.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\"). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__vpc__resource_subtype

  dimension: target__cloud__vpc__resource_type {
    type: number
    sql: ${TABLE}.target.cloud.vpc.resource_type ;;
    group_label: "target"
    group_item_label: "target.cloud.vpc.resource_type [D]"
    label: "target.cloud.vpc.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__vpc__resource_type

  dimension: target__cloud__vpc__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.target.cloud.vpc.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "target"
    group_item_label: "target.cloud.vpc.resource_type_enum_name [D]"
    label: "target.cloud.vpc.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__cloud__vpc__resource_type_enum_name

  dimension: target__domain {
    hidden: yes
  }  # dimension target__domain

  dimension: target__domain__admin {
    hidden: yes
  }  # dimension target__domain__admin

  dimension: target__domain__admin__account_type {
    type: number
    sql: ${TABLE}.target.domain.admin.account_type ;;
    group_label: "target"
    label: "target.domain.admin.account_type"
    view_label: "UDM"
    description: "Type of user account (service, domain, cloud, etc).  Somewhat aligned to: <a href=\"https://attack.mitre.org/techniques/T1078/\">https://attack.mitre.org/techniques/T1078/</a>"
  }  # dimension target__domain__admin__account_type

  dimension: target__domain__admin__account_type_enum_name {
    type: string
    suggestions: ["ACCOUNT_TYPE_UNSPECIFIED", "CLOUD_ACCOUNT_TYPE", "DEFAULT_ACCOUNT_TYPE", "DOMAIN_ACCOUNT_TYPE", "LOCAL_ACCOUNT_TYPE", "SERVICE_ACCOUNT_TYPE"]
    sql: CASE ${TABLE}.target.domain.admin.account_type WHEN 0 THEN 'ACCOUNT_TYPE_UNSPECIFIED' WHEN 1 THEN 'DOMAIN_ACCOUNT_TYPE' WHEN 2 THEN 'LOCAL_ACCOUNT_TYPE' WHEN 3 THEN 'CLOUD_ACCOUNT_TYPE' WHEN 4 THEN 'SERVICE_ACCOUNT_TYPE' WHEN 5 THEN 'DEFAULT_ACCOUNT_TYPE' END ;;
    group_label: "target"
    label: "target.domain.admin.account_type_enum_name"
    view_label: "UDM"
    description: "Type of user account (service, domain, cloud, etc).  Somewhat aligned to: <a href=\"https://attack.mitre.org/techniques/T1078/\">https://attack.mitre.org/techniques/T1078/</a>"
  }  # dimension target__domain__admin__account_type_enum_name

  dimension: target__domain__contact_email {
    type: string
    sql: ${TABLE}.target.domain.contact_email ;;
    group_label: "target"
    label: "target.domain.contact_email"
    view_label: "UDM"
    description: "Contact email address."
  }  # dimension target__domain__contact_email

  dimension_group: target__domain__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.domain.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.domain.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.domain.creation_time"
    view_label: "UDM"
    description: "Domain creation time."
  }  # dimension target__domain__creation_time

  dimension_group: target__domain__expiration_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.domain.expiration_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.domain.expiration_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.domain.expiration_time"
    view_label: "UDM"
    description: "Expiration time."
  }  # dimension target__domain__expiration_time

  dimension_group: target__domain__last_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.domain.last_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.domain.last_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.domain.last_seen_time"
    view_label: "UDM"
    description: "Last seen timestamp of the domain in the customer's environment."
  }  # dimension target__domain__last_seen_time

  dimension: target__domain__name {
    type: string
    sql: ${TABLE}.target.domain.name ;;
    group_label: "target"
    label: "target.domain.name"
    view_label: "UDM"
    description: "The domain name."
  }  # dimension target__domain__name

  dimension: target__domain__name_server {
    hidden: yes
  }  # dimension target__domain__name_server

  dimension: target__domain__private_registration {
    type: yesno
    sql: ${TABLE}.target.domain.private_registration ;;
    group_label: "target"
    label: "target.domain.private_registration"
    view_label: "UDM"
    description: "Indicates whether the domain appears to be using a private registration service to mask the owner's contact information."
  }  # dimension target__domain__private_registration

  dimension: target__domain__registrar {
    type: string
    sql: ${TABLE}.target.domain.registrar ;;
    group_label: "target"
    label: "target.domain.registrar"
    view_label: "UDM"
    description: "Registrar name - e.g. \"Wild West Domains, Inc. (R120-LROR)\", \"GoDaddy.com, LLC\", \"PDR LTD. D/B/A PUBLICDOMAINREGISTRY.COM\", etc."
  }  # dimension target__domain__registrar

  dimension: target__domain__status {
    type: string
    sql: ${TABLE}.target.domain.status ;;
    group_label: "target"
    label: "target.domain.status"
    view_label: "UDM"
    description: "Domain status. See <a href=\"https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en\">https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en</a> for meanings of possible values"
  }  # dimension target__domain__status

  dimension: target__domain__tech {
    hidden: yes
  }  # dimension target__domain__tech

  dimension: target__domain__tech__company_name {
    type: string
    sql: ${TABLE}.target.domain.tech.company_name ;;
    group_label: "target"
    label: "target.domain.tech.company_name"
    view_label: "UDM"
    description: "User job company name."
  }  # dimension target__domain__tech__company_name

  dimension_group: target__domain__update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.domain.update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.domain.update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.domain.update_time"
    view_label: "UDM"
    description: "Last updated time."
  }  # dimension target__domain__update_time

  dimension: target__domain__whois_server {
    type: string
    sql: ${TABLE}.target.domain.whois_server ;;
    group_label: "target"
    label: "target.domain.whois_server"
    view_label: "UDM"
    description: "Whois server name."
  }  # dimension target__domain__whois_server

  dimension: target__email {
    type: string
    sql: ${TABLE}.target.email ;;
    group_label: "target"
    label: "target.email"
    view_label: "UDM"
    description: "Email address. Only filled in for security_result.about"
  }  # dimension target__email

  dimension: target__file {
    hidden: yes
  }  # dimension target__file

  dimension: target__file__authentihash {
    type: string
    sql: ${TABLE}.target.file.authentihash ;;
    group_label: "target"
    label: "target.file.authentihash"
    view_label: "UDM"
    description: "Authentihash of the file."
  }  # dimension target__file__authentihash

  dimension: target__file__capabilities_tags {
    hidden: yes
  }  # dimension target__file__capabilities_tags

  dimension: target__file__embedded_domains {
    hidden: yes
  }  # dimension target__file__embedded_domains

  dimension: target__file__embedded_ips {
    hidden: yes
  }  # dimension target__file__embedded_ips

  dimension: target__file__embedded_urls {
    hidden: yes
  }  # dimension target__file__embedded_urls

  dimension: target__file__exif_info {
    hidden: yes
  }  # dimension target__file__exif_info

  dimension: target__file__exif_info__company {
    type: string
    sql: ${TABLE}.target.file.exif_info.company ;;
    group_label: "target"
    label: "target.file.exif_info.company"
    view_label: "UDM"
    description: "company name."
  }  # dimension target__file__exif_info__company

  dimension_group: target__file__exif_info__compilation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.file.exif_info.compilation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.file.exif_info.compilation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.file.exif_info.compilation_time"
    view_label: "UDM"
    description: "Compilation time."
  }  # dimension target__file__exif_info__compilation_time

  dimension: target__file__exif_info__entry_point {
    type: number
    sql: ${TABLE}.target.file.exif_info.entry_point ;;
    group_label: "target"
    label: "target.file.exif_info.entry_point"
    view_label: "UDM"
    description: "entry point."
  }  # dimension target__file__exif_info__entry_point

  dimension: target__file__exif_info__file_description {
    type: string
    sql: ${TABLE}.target.file.exif_info.file_description ;;
    group_label: "target"
    label: "target.file.exif_info.file_description"
    view_label: "UDM"
    description: "description of a file."
  }  # dimension target__file__exif_info__file_description

  dimension: target__file__exif_info__original_file {
    type: string
    sql: ${TABLE}.target.file.exif_info.original_file ;;
    group_label: "target"
    label: "target.file.exif_info.original_file"
    view_label: "UDM"
    description: "original file name."
  }  # dimension target__file__exif_info__original_file

  dimension: target__file__exif_info__product {
    type: string
    sql: ${TABLE}.target.file.exif_info.product ;;
    group_label: "target"
    label: "target.file.exif_info.product"
    view_label: "UDM"
    description: "product name."
  }  # dimension target__file__exif_info__product

  dimension: target__file__file_metadata {
    hidden: yes
  }  # dimension target__file__file_metadata

  dimension: target__file__file_metadata__pe {
    hidden: yes
  }  # dimension target__file__file_metadata__pe

  dimension: target__file__file_metadata__pe__import_hash {
    type: string
    sql: ${TABLE}.target.file.file_metadata.pe.import_hash ;;
    group_label: "target"
    group_item_label: "target.file.file_metadata.pe.import_hash [D]"
    label: "target.file.file_metadata.pe.import_hash"
    view_label: "UDM"
    description: "Hash of PE imports. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__file__file_metadata__pe__import_hash

  dimension: target__file__file_type {
    type: number
    sql: ${TABLE}.target.file.file_type ;;
    group_label: "target"
    label: "target.file.file_type"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension target__file__file_type

  dimension: target__file__file_type_enum_name {
    type: string
    suggestions: ["FILE_TYPE_ACE", "FILE_TYPE_ANDROID", "FILE_TYPE_APPLE", "FILE_TYPE_APPLEDOUBLE", "FILE_TYPE_APPLESCRIPT", "FILE_TYPE_APPLESCRIPT_COMPILED", "FILE_TYPE_APPLESINGLE", "FILE_TYPE_APPLE_PLIST", "FILE_TYPE_ARC", "FILE_TYPE_ARJ", "FILE_TYPE_ASD", "FILE_TYPE_ASF", "FILE_TYPE_AVI", "FILE_TYPE_AWK", "FILE_TYPE_BLACKHOLE", "FILE_TYPE_BMP", "FILE_TYPE_BZIP", "FILE_TYPE_C", "FILE_TYPE_CAB", "FILE_TYPE_CAP", "FILE_TYPE_CHM", "FILE_TYPE_COFF", "FILE_TYPE_COOKIE", "FILE_TYPE_CPP", "FILE_TYPE_CRX", "FILE_TYPE_DEB", "FILE_TYPE_DIB", "FILE_TYPE_DIVX", "FILE_TYPE_DMG", "FILE_TYPE_DOC", "FILE_TYPE_DOCX", "FILE_TYPE_DOS_COM", "FILE_TYPE_DOS_EXE", "FILE_TYPE_DYALOG", "FILE_TYPE_DZIP", "FILE_TYPE_EBOOK", "FILE_TYPE_ELF", "FILE_TYPE_EMAIL_TYPE", "FILE_TYPE_EMF", "FILE_TYPE_EOT", "FILE_TYPE_EPS", "FILE_TYPE_FLA", "FILE_TYPE_FLAC", "FILE_TYPE_FLC", "FILE_TYPE_FLI", "FILE_TYPE_FLV", "FILE_TYPE_FORTRAN", "FILE_TYPE_FPX", "FILE_TYPE_GIF", "FILE_TYPE_GIMP", "FILE_TYPE_GUL", "FILE_TYPE_GZIP", "FILE_TYPE_HTML", "FILE_TYPE_HWP", "FILE_TYPE_ICO", "FILE_TYPE_IN_DESIGN", "FILE_TYPE_IPHONE", "FILE_TYPE_ISOIMAGE", "FILE_TYPE_JAR", "FILE_TYPE_JAVA", "FILE_TYPE_JAVASCRIPT", "FILE_TYPE_JAVA_BYTECODE", "FILE_TYPE_JNG", "FILE_TYPE_JPEG", "FILE_TYPE_KGB", "FILE_TYPE_LATEX", "FILE_TYPE_LINUX", "FILE_TYPE_LINUX_KERNEL", "FILE_TYPE_LNK", "FILE_TYPE_MACH_O", "FILE_TYPE_MACINTOSH", "FILE_TYPE_MACINTOSH_HFS", "FILE_TYPE_MACINTOSH_LIB", "FILE_TYPE_MIDI", "FILE_TYPE_MOV", "FILE_TYPE_MP3", "FILE_TYPE_MP4", "FILE_TYPE_MPEG", "FILE_TYPE_MSCOMPRESS", "FILE_TYPE_MSI", "FILE_TYPE_NE_DLL", "FILE_TYPE_NE_EXE", "FILE_TYPE_ODF", "FILE_TYPE_ODG", "FILE_TYPE_ODP", "FILE_TYPE_ODS", "FILE_TYPE_ODT", "FILE_TYPE_OGG", "FILE_TYPE_OUTLOOK", "FILE_TYPE_PALMOS", "FILE_TYPE_PASCAL", "FILE_TYPE_PDF", "FILE_TYPE_PERL", "FILE_TYPE_PE_DLL", "FILE_TYPE_PE_EXE", "FILE_TYPE_PHP", "FILE_TYPE_PKG", "FILE_TYPE_PNG", "FILE_TYPE_POWERSHELL", "FILE_TYPE_PPSX", "FILE_TYPE_PPT", "FILE_TYPE_PPTX", "FILE_TYPE_PS", "FILE_TYPE_PSD", "FILE_TYPE_PYTHON", "FILE_TYPE_QUICKTIME", "FILE_TYPE_RAR", "FILE_TYPE_RM", "FILE_TYPE_ROM", "FILE_TYPE_RPM", "FILE_TYPE_RTF", "FILE_TYPE_RUBY", "FILE_TYPE_RZIP", "FILE_TYPE_SCRIPT", "FILE_TYPE_SEVENZIP", "FILE_TYPE_SHELLSCRIPT", "FILE_TYPE_SVG", "FILE_TYPE_SWF", "FILE_TYPE_SYMBIAN", "FILE_TYPE_T3GP", "FILE_TYPE_TAR", "FILE_TYPE_TARGA", "FILE_TYPE_TEXT", "FILE_TYPE_TIFF", "FILE_TYPE_TORRENT", "FILE_TYPE_TTF", "FILE_TYPE_UNSPECIFIED", "FILE_TYPE_VBA", "FILE_TYPE_WAV", "FILE_TYPE_WEBP", "FILE_TYPE_WINCE", "FILE_TYPE_WMA", "FILE_TYPE_WMV", "FILE_TYPE_WOFF", "FILE_TYPE_XLS", "FILE_TYPE_XLSX", "FILE_TYPE_XML", "FILE_TYPE_XPI", "FILE_TYPE_XWD", "FILE_TYPE_ZIP", "FILE_TYPE_ZLIB"]
    sql: CASE ${TABLE}.target.file.file_type WHEN 0 THEN 'FILE_TYPE_UNSPECIFIED' WHEN 1 THEN 'FILE_TYPE_PE_EXE' WHEN 2 THEN 'FILE_TYPE_PE_DLL' WHEN 3 THEN 'FILE_TYPE_MSI' WHEN 10 THEN 'FILE_TYPE_NE_EXE' WHEN 11 THEN 'FILE_TYPE_NE_DLL' WHEN 20 THEN 'FILE_TYPE_DOS_EXE' WHEN 21 THEN 'FILE_TYPE_DOS_COM' WHEN 30 THEN 'FILE_TYPE_COFF' WHEN 31 THEN 'FILE_TYPE_ELF' WHEN 32 THEN 'FILE_TYPE_LINUX_KERNEL' WHEN 33 THEN 'FILE_TYPE_RPM' WHEN 34 THEN 'FILE_TYPE_LINUX' WHEN 35 THEN 'FILE_TYPE_MACH_O' WHEN 36 THEN 'FILE_TYPE_JAVA_BYTECODE' WHEN 37 THEN 'FILE_TYPE_DMG' WHEN 38 THEN 'FILE_TYPE_DEB' WHEN 39 THEN 'FILE_TYPE_PKG' WHEN 50 THEN 'FILE_TYPE_LNK' WHEN 100 THEN 'FILE_TYPE_JPEG' WHEN 101 THEN 'FILE_TYPE_TIFF' WHEN 102 THEN 'FILE_TYPE_GIF' WHEN 103 THEN 'FILE_TYPE_PNG' WHEN 104 THEN 'FILE_TYPE_BMP' WHEN 105 THEN 'FILE_TYPE_GIMP' WHEN 106 THEN 'FILE_TYPE_IN_DESIGN' WHEN 107 THEN 'FILE_TYPE_PSD' WHEN 108 THEN 'FILE_TYPE_TARGA' WHEN 109 THEN 'FILE_TYPE_XWD' WHEN 110 THEN 'FILE_TYPE_DIB' WHEN 111 THEN 'FILE_TYPE_JNG' WHEN 112 THEN 'FILE_TYPE_ICO' WHEN 113 THEN 'FILE_TYPE_FPX' WHEN 114 THEN 'FILE_TYPE_EPS' WHEN 115 THEN 'FILE_TYPE_SVG' WHEN 116 THEN 'FILE_TYPE_EMF' WHEN 117 THEN 'FILE_TYPE_WEBP' WHEN 150 THEN 'FILE_TYPE_OGG' WHEN 151 THEN 'FILE_TYPE_FLC' WHEN 152 THEN 'FILE_TYPE_FLI' WHEN 153 THEN 'FILE_TYPE_MP3' WHEN 154 THEN 'FILE_TYPE_FLAC' WHEN 155 THEN 'FILE_TYPE_WAV' WHEN 156 THEN 'FILE_TYPE_MIDI' WHEN 157 THEN 'FILE_TYPE_AVI' WHEN 158 THEN 'FILE_TYPE_MPEG' WHEN 159 THEN 'FILE_TYPE_QUICKTIME' WHEN 160 THEN 'FILE_TYPE_ASF' WHEN 161 THEN 'FILE_TYPE_DIVX' WHEN 162 THEN 'FILE_TYPE_FLV' WHEN 163 THEN 'FILE_TYPE_WMA' WHEN 164 THEN 'FILE_TYPE_WMV' WHEN 165 THEN 'FILE_TYPE_RM' WHEN 166 THEN 'FILE_TYPE_MOV' WHEN 167 THEN 'FILE_TYPE_MP4' WHEN 168 THEN 'FILE_TYPE_T3GP' WHEN 200 THEN 'FILE_TYPE_PDF' WHEN 201 THEN 'FILE_TYPE_PS' WHEN 202 THEN 'FILE_TYPE_DOC' WHEN 203 THEN 'FILE_TYPE_DOCX' WHEN 204 THEN 'FILE_TYPE_PPT' WHEN 205 THEN 'FILE_TYPE_PPTX' WHEN 209 THEN 'FILE_TYPE_PPSX' WHEN 206 THEN 'FILE_TYPE_XLS' WHEN 207 THEN 'FILE_TYPE_XLSX' WHEN 208 THEN 'FILE_TYPE_RTF' WHEN 250 THEN 'FILE_TYPE_ODP' WHEN 251 THEN 'FILE_TYPE_ODS' WHEN 252 THEN 'FILE_TYPE_ODT' WHEN 253 THEN 'FILE_TYPE_HWP' WHEN 254 THEN 'FILE_TYPE_GUL' WHEN 255 THEN 'FILE_TYPE_ODF' WHEN 256 THEN 'FILE_TYPE_ODG' WHEN 260 THEN 'FILE_TYPE_EBOOK' WHEN 261 THEN 'FILE_TYPE_LATEX' WHEN 262 THEN 'FILE_TYPE_TTF' WHEN 263 THEN 'FILE_TYPE_EOT' WHEN 264 THEN 'FILE_TYPE_WOFF' WHEN 265 THEN 'FILE_TYPE_CHM' WHEN 300 THEN 'FILE_TYPE_ZIP' WHEN 301 THEN 'FILE_TYPE_GZIP' WHEN 302 THEN 'FILE_TYPE_BZIP' WHEN 303 THEN 'FILE_TYPE_RZIP' WHEN 304 THEN 'FILE_TYPE_DZIP' WHEN 305 THEN 'FILE_TYPE_SEVENZIP' WHEN 306 THEN 'FILE_TYPE_CAB' WHEN 307 THEN 'FILE_TYPE_JAR' WHEN 308 THEN 'FILE_TYPE_RAR' WHEN 309 THEN 'FILE_TYPE_MSCOMPRESS' WHEN 310 THEN 'FILE_TYPE_ACE' WHEN 311 THEN 'FILE_TYPE_ARC' WHEN 312 THEN 'FILE_TYPE_ARJ' WHEN 313 THEN 'FILE_TYPE_ASD' WHEN 314 THEN 'FILE_TYPE_BLACKHOLE' WHEN 315 THEN 'FILE_TYPE_KGB' WHEN 316 THEN 'FILE_TYPE_ZLIB' WHEN 317 THEN 'FILE_TYPE_TAR' WHEN 400 THEN 'FILE_TYPE_TEXT' WHEN 401 THEN 'FILE_TYPE_SCRIPT' WHEN 402 THEN 'FILE_TYPE_PHP' WHEN 403 THEN 'FILE_TYPE_PYTHON' WHEN 404 THEN 'FILE_TYPE_PERL' WHEN 405 THEN 'FILE_TYPE_RUBY' WHEN 406 THEN 'FILE_TYPE_C' WHEN 407 THEN 'FILE_TYPE_CPP' WHEN 408 THEN 'FILE_TYPE_JAVA' WHEN 409 THEN 'FILE_TYPE_SHELLSCRIPT' WHEN 410 THEN 'FILE_TYPE_PASCAL' WHEN 411 THEN 'FILE_TYPE_AWK' WHEN 412 THEN 'FILE_TYPE_DYALOG' WHEN 413 THEN 'FILE_TYPE_FORTRAN' WHEN 414 THEN 'FILE_TYPE_JAVASCRIPT' WHEN 415 THEN 'FILE_TYPE_POWERSHELL' WHEN 416 THEN 'FILE_TYPE_VBA' WHEN 500 THEN 'FILE_TYPE_SYMBIAN' WHEN 501 THEN 'FILE_TYPE_PALMOS' WHEN 502 THEN 'FILE_TYPE_WINCE' WHEN 503 THEN 'FILE_TYPE_ANDROID' WHEN 504 THEN 'FILE_TYPE_IPHONE' WHEN 600 THEN 'FILE_TYPE_HTML' WHEN 601 THEN 'FILE_TYPE_XML' WHEN 602 THEN 'FILE_TYPE_SWF' WHEN 603 THEN 'FILE_TYPE_FLA' WHEN 604 THEN 'FILE_TYPE_COOKIE' WHEN 605 THEN 'FILE_TYPE_TORRENT' WHEN 606 THEN 'FILE_TYPE_EMAIL_TYPE' WHEN 607 THEN 'FILE_TYPE_OUTLOOK' WHEN 700 THEN 'FILE_TYPE_CAP' WHEN 800 THEN 'FILE_TYPE_ISOIMAGE' WHEN 1000 THEN 'FILE_TYPE_APPLE' WHEN 1001 THEN 'FILE_TYPE_MACINTOSH' WHEN 1002 THEN 'FILE_TYPE_APPLESINGLE' WHEN 1003 THEN 'FILE_TYPE_APPLEDOUBLE' WHEN 1004 THEN 'FILE_TYPE_MACINTOSH_HFS' WHEN 1005 THEN 'FILE_TYPE_APPLE_PLIST' WHEN 1006 THEN 'FILE_TYPE_MACINTOSH_LIB' WHEN 1007 THEN 'FILE_TYPE_APPLESCRIPT' WHEN 1008 THEN 'FILE_TYPE_APPLESCRIPT_COMPILED' WHEN 1100 THEN 'FILE_TYPE_CRX' WHEN 1101 THEN 'FILE_TYPE_XPI' WHEN 1200 THEN 'FILE_TYPE_ROM' END ;;
    group_label: "target"
    label: "target.file.file_type_enum_name"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension target__file__file_type_enum_name

  dimension_group: target__file__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.file.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.file.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.file.first_seen_time"
    view_label: "UDM"
    description: "Timestamp the file was first seen in the customer's environment."
  }  # dimension target__file__first_seen_time

  dimension: target__file__full_path {
    type: string
    sql: ${TABLE}.target.file.full_path ;;
    group_label: "target"
    label: "target.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension target__file__full_path

  dimension_group: target__file__last_analysis_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.file.last_analysis_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.file.last_analysis_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.file.last_analysis_time"
    view_label: "UDM"
    description: "Timestamp the file was last analysed."
  }  # dimension target__file__last_analysis_time

  dimension_group: target__file__last_modification_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.file.last_modification_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.file.last_modification_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.file.last_modification_time"
    view_label: "UDM"
    description: "Timestamp when the file was last updated."
  }  # dimension target__file__last_modification_time

  dimension_group: target__file__last_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.file.last_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.file.last_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.file.last_seen_time"
    view_label: "UDM"
    description: "Timestamp the file was last seen in the customer's environment."
  }  # dimension target__file__last_seen_time

  dimension: target__file__md5 {
    type: string
    sql: ${TABLE}.target.file.md5 ;;
    group_label: "target"
    label: "target.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension target__file__md5

  dimension: target__file__mime_type {
    type: string
    sql: ${TABLE}.target.file.mime_type ;;
    group_label: "target"
    label: "target.file.mime_type"
    view_label: "UDM"
    description: "The MIME (Multipurpose Internet Mail Extensions) type of the file, for example \"PE\", \"PDF\", \"powershell script\", etc."
  }  # dimension target__file__mime_type

  dimension: target__file__names {
    hidden: yes
  }  # dimension target__file__names

  dimension: target__file__pe_file {
    hidden: yes
  }  # dimension target__file__pe_file

  dimension_group: target__file__pe_file__compilation_exiftool_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.file.pe_file.compilation_exiftool_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.file.pe_file.compilation_exiftool_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.file.pe_file.compilation_exiftool_time"
    view_label: "UDM"
    description: "info.exiftool.TimeStamp."
  }  # dimension target__file__pe_file__compilation_exiftool_time

  dimension_group: target__file__pe_file__compilation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.file.pe_file.compilation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.file.pe_file.compilation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.file.pe_file.compilation_time"
    view_label: "UDM"
    description: "info.pe-timestamp."
  }  # dimension target__file__pe_file__compilation_time

  dimension: target__file__pe_file__entry_point {
    type: number
    sql: ${TABLE}.target.file.pe_file.entry_point ;;
    group_label: "target"
    label: "target.file.pe_file.entry_point"
    view_label: "UDM"
    description: "info.pe-entry-point."
  }  # dimension target__file__pe_file__entry_point

  dimension: target__file__pe_file__entry_point_exiftool {
    type: number
    sql: ${TABLE}.target.file.pe_file.entry_point_exiftool ;;
    group_label: "target"
    label: "target.file.pe_file.entry_point_exiftool"
    view_label: "UDM"
    description: "info.exiftool.EntryPoint."
  }  # dimension target__file__pe_file__entry_point_exiftool

  dimension: target__file__pe_file__imphash {
    type: string
    sql: ${TABLE}.target.file.pe_file.imphash ;;
    group_label: "target"
    label: "target.file.pe_file.imphash"
    view_label: "UDM"
    description: "Imphash of the file."
  }  # dimension target__file__pe_file__imphash

  dimension: target__file__pe_file__imports {
    hidden: yes
  }  # dimension target__file__pe_file__imports

  dimension: target__file__pe_file__resource {
    hidden: yes
  }  # dimension target__file__pe_file__resource

  dimension: target__file__pe_file__resources_language_count_str {
    hidden: yes
  }  # dimension target__file__pe_file__resources_language_count_str

  dimension: target__file__pe_file__resources_type_count_str {
    hidden: yes
  }  # dimension target__file__pe_file__resources_type_count_str

  dimension: target__file__pe_file__section {
    hidden: yes
  }  # dimension target__file__pe_file__section

  dimension: target__file__sha1 {
    type: string
    sql: ${TABLE}.target.file.sha1 ;;
    group_label: "target"
    label: "target.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension target__file__sha1

  dimension: target__file__sha256 {
    type: string
    sql: ${TABLE}.target.file.sha256 ;;
    group_label: "target"
    label: "target.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension target__file__sha256

  dimension: target__file__signature_info {
    hidden: yes
  }  # dimension target__file__signature_info

  dimension: target__file__signature_info__codesign {
    hidden: yes
  }  # dimension target__file__signature_info__codesign

  dimension_group: target__file__signature_info__codesign__compilation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.file.signature_info.codesign.compilation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.file.signature_info.codesign.compilation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.file.signature_info.codesign.compilation_time"
    view_label: "UDM"
    description: "Code sign timestamp"
  }  # dimension target__file__signature_info__codesign__compilation_time

  dimension: target__file__signature_info__codesign__format {
    type: string
    sql: ${TABLE}.target.file.signature_info.codesign.format ;;
    group_label: "target"
    label: "target.file.signature_info.codesign.format"
    view_label: "UDM"
    description: "Code sign format."
  }  # dimension target__file__signature_info__codesign__format

  dimension: target__file__signature_info__codesign__id {
    type: string
    sql: ${TABLE}.target.file.signature_info.codesign.id ;;
    group_label: "target"
    label: "target.file.signature_info.codesign.id"
    view_label: "UDM"
    description: "Code sign identifier."
  }  # dimension target__file__signature_info__codesign__id

  dimension: target__file__signature_info__sigcheck {
    hidden: yes
  }  # dimension target__file__signature_info__sigcheck

  dimension: target__file__signature_info__sigcheck__signers {
    hidden: yes
  }  # dimension target__file__signature_info__sigcheck__signers

  dimension: target__file__signature_info__sigcheck__verification_message {
    type: string
    sql: ${TABLE}.target.file.signature_info.sigcheck.verification_message ;;
    group_label: "target"
    label: "target.file.signature_info.sigcheck.verification_message"
    view_label: "UDM"
    description: "Status of the certificate. Valid values are \"Signed\", \"Unsigned\" or a description of the certificate anomaly, if found."
  }  # dimension target__file__signature_info__sigcheck__verification_message

  dimension: target__file__signature_info__sigcheck__verified {
    type: yesno
    sql: ${TABLE}.target.file.signature_info.sigcheck.verified ;;
    group_label: "target"
    label: "target.file.signature_info.sigcheck.verified"
    view_label: "UDM"
    description: "True iff verification_message == \"Signed\""
  }  # dimension target__file__signature_info__sigcheck__verified

  dimension: target__file__signature_info__sigcheck__x509 {
    hidden: yes
  }  # dimension target__file__signature_info__sigcheck__x509

  dimension: target__file__size {
    type: number
    sql: ${TABLE}.target.file.size ;;
    group_label: "target"
    label: "target.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension target__file__size

  dimension: target__file__ssdeep {
    type: string
    sql: ${TABLE}.target.file.ssdeep ;;
    group_label: "target"
    label: "target.file.ssdeep"
    view_label: "UDM"
    description: "Ssdeep of the file"
  }  # dimension target__file__ssdeep

  dimension: target__file__stat_dev {
    type: number
    sql: ${TABLE}.target.file.stat_dev ;;
    group_label: "target"
    label: "target.file.stat_dev"
    view_label: "UDM"
    description: "The file system identifier to which the object belongs."
  }  # dimension target__file__stat_dev

  dimension: target__file__stat_inode {
    type: number
    sql: ${TABLE}.target.file.stat_inode ;;
    group_label: "target"
    label: "target.file.stat_inode"
    view_label: "UDM"
    description: "The file identifier. Unique identifier of object within a file system."
  }  # dimension target__file__stat_inode

  dimension: target__file__stat_mode {
    type: number
    sql: ${TABLE}.target.file.stat_mode ;;
    group_label: "target"
    label: "target.file.stat_mode"
    view_label: "UDM"
    description: "The mode of the file. A bit string indicating the permissions and privileges of the file."
  }  # dimension target__file__stat_mode

  dimension: target__file__tags {
    hidden: yes
  }  # dimension target__file__tags

  dimension: target__file__vhash {
    type: string
    sql: ${TABLE}.target.file.vhash ;;
    group_label: "target"
    label: "target.file.vhash"
    view_label: "UDM"
    description: "Vhash of the file."
  }  # dimension target__file__vhash

  dimension: target__group {
    hidden: yes
  }  # dimension target__group

  dimension: target__group__attribute {
    hidden: yes
  }  # dimension target__group__attribute

  dimension_group: target__group__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.group.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.group.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.group.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension target__group__attribute__creation_time

  dimension: target__group__attribute__labels {
    hidden: yes
  }  # dimension target__group__attribute__labels

  dimension: target__group__attribute__permissions {
    hidden: yes
  }  # dimension target__group__attribute__permissions

  dimension: target__group__attribute__roles {
    hidden: yes
  }  # dimension target__group__attribute__roles

  dimension_group: target__group__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.group.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.group.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    group_item_label: "target.group.creation_time [D]"
    label: "target.group.creation_time"
    view_label: "UDM"
    description: "Group creation time. Deprecated: creation_time should be populated in Attribute as generic metadata. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__group__creation_time

  dimension: target__group__email_addresses {
    hidden: yes
  }  # dimension target__group__email_addresses

  dimension: target__group__group_display_name {
    type: string
    sql: ${TABLE}.target.group.group_display_name ;;
    group_label: "target"
    label: "target.group.group_display_name"
    view_label: "UDM"
    description: "Group display name. e.g. \"Finance\"."
  }  # dimension target__group__group_display_name

  dimension: target__group__product_object_id {
    type: string
    sql: ${TABLE}.target.group.product_object_id ;;
    group_label: "target"
    label: "target.group.product_object_id"
    view_label: "UDM"
    description: "Product globally unique user object identifier, such as an LDAP Object Identifier."
  }  # dimension target__group__product_object_id

  dimension: target__group__windows_sid {
    type: string
    sql: ${TABLE}.target.group.windows_sid ;;
    group_label: "target"
    label: "target.group.windows_sid"
    view_label: "UDM"
    description: "Microsoft Windows SID of the group."
  }  # dimension target__group__windows_sid

  dimension: target__hostname {
    type: string
    sql: ${TABLE}.target.hostname ;;
    group_label: "target"
    label: "target.hostname"
    view_label: "UDM"
    description: "Client hostname or domain name field. Hostname also doubles as the domain for remote entities."
  }  # dimension target__hostname

  dimension: target__investigation {
    hidden: yes
  }  # dimension target__investigation

  dimension: target__investigation__comments {
    hidden: yes
  }  # dimension target__investigation__comments

  dimension: target__investigation__risk_score {
    type: number
    sql: ${TABLE}.target.investigation.risk_score ;;
    group_label: "target"
    label: "target.investigation.risk_score"
    view_label: "UDM"
    description: "Risk score for a finding set by an analyst."
  }  # dimension target__investigation__risk_score

  dimension: target__investigation__severity_score {
    type: number
    sql: ${TABLE}.target.investigation.severity_score ;;
    group_label: "target"
    label: "target.investigation.severity_score"
    view_label: "UDM"
    description: "Severity score for a finding set by an analyst."
  }  # dimension target__investigation__severity_score

  dimension: target__investigation__status {
    type: number
    sql: ${TABLE}.target.investigation.status ;;
    group_label: "target"
    label: "target.investigation.status"
    view_label: "UDM"
    description: "Describes the workflow status of a finding."
  }  # dimension target__investigation__status

  dimension: target__investigation__status_enum_name {
    type: string
    suggestions: ["CLOSED", "NEW", "OPEN", "REVIEWED", "STATUS_UNSPECIFIED"]
    sql: CASE ${TABLE}.target.investigation.status WHEN 0 THEN 'STATUS_UNSPECIFIED' WHEN 1 THEN 'NEW' WHEN 2 THEN 'REVIEWED' WHEN 3 THEN 'CLOSED' WHEN 4 THEN 'OPEN' END ;;
    group_label: "target"
    label: "target.investigation.status_enum_name"
    view_label: "UDM"
    description: "Describes the workflow status of a finding."
  }  # dimension target__investigation__status_enum_name

  dimension: target__investigation__verdict {
    type: number
    sql: ${TABLE}.target.investigation.verdict ;;
    group_label: "target"
    label: "target.investigation.verdict"
    view_label: "UDM"
    description: "Describes reason a finding investigation was resolved."
  }  # dimension target__investigation__verdict

  dimension: target__investigation__verdict_enum_name {
    type: string
    suggestions: ["FALSE_POSITIVE", "TRUE_POSITIVE", "VERDICT_UNSPECIFIED"]
    sql: CASE ${TABLE}.target.investigation.verdict WHEN 0 THEN 'VERDICT_UNSPECIFIED' WHEN 1 THEN 'TRUE_POSITIVE' WHEN 2 THEN 'FALSE_POSITIVE' END ;;
    group_label: "target"
    label: "target.investigation.verdict_enum_name"
    view_label: "UDM"
    description: "Describes reason a finding investigation was resolved."
  }  # dimension target__investigation__verdict_enum_name

  dimension: target__ip {
    hidden: yes
  }  # dimension target__ip

  dimension: target__ip_geo_artifact {
    hidden: yes
  }  # dimension target__ip_geo_artifact

  dimension: target__ip_location {
    hidden: yes
  }  # dimension target__ip_location

  dimension: target__labels {
    hidden: yes
  }  # dimension target__labels

  dimension: target__location {
    hidden: yes
  }  # dimension target__location

  dimension: target__location__city {
    type: string
    sql: ${TABLE}.target.location.city ;;
    group_label: "target"
    label: "target.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension target__location__city

  dimension: target__location__country_or_region {
    type: string
    sql: ${TABLE}.target.location.country_or_region ;;
    group_label: "target"
    label: "target.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension target__location__country_or_region

  dimension: target__location__name {
    type: string
    sql: ${TABLE}.target.location.name ;;
    group_label: "target"
    label: "target.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension target__location__name

  dimension: target__location__region_coordinates {
    type: location
    sql_latitude: ${TABLE}.target.location.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.target.location.region_coordinates.longitude ;;
    group_label: "target"
    group_item_label: "target.location.region_coordinates [L]"
    label: "target.location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [L]: This is a location field and can be used in maps."
  }  # dimension target__location__region_coordinates

  dimension: target__location__region_latitude {
    type: number
    sql: ${TABLE}.target.location.region_latitude ;;
    group_label: "target"
    group_item_label: "target.location.region_latitude [D]"
    label: "target.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__location__region_latitude

  dimension: target__location__region_longitude {
    type: number
    sql: ${TABLE}.target.location.region_longitude ;;
    group_label: "target"
    group_item_label: "target.location.region_longitude [D]"
    label: "target.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__location__region_longitude

  dimension: target__location__location {
    type: location
    sql_latitude: ${TABLE}.target.location.region_latitude ;;
    sql_longitude: ${TABLE}.target.location.region_longitude ;;
    group_label: "target"
    group_item_label: "target.location.location [D][L]"
    label: "target.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension target__location__location

  dimension: target__location__state {
    type: string
    sql: ${TABLE}.target.location.state ;;
    group_label: "target"
    label: "target.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension target__location__state

  dimension: target__mac {
    hidden: yes
  }  # dimension target__mac

  dimension: target__namespace {
    type: string
    sql: ${TABLE}.target.namespace ;;
    group_label: "target"
    label: "target.namespace"
    view_label: "UDM"
    description: "Namespace which the device belongs to (e.g. AD forest) Uses for this field include Microsoft Windows AD forest, name of subsidiary or acquisition, etc."
  }  # dimension target__namespace

  dimension: target__nat_ip {
    hidden: yes
  }  # dimension target__nat_ip

  dimension: target__nat_port {
    type: number
    value_format: "#"
    sql: ${TABLE}.target.nat_port ;;
    group_label: "target"
    label: "target.nat_port"
    view_label: "UDM"
    description: "NAT external network port number when a specific network connection is described within an event."
  }  # dimension target__nat_port

  dimension: target__network {
    hidden: yes
  }  # dimension target__network

  dimension: target__network__asn {
    type: string
    sql: ${TABLE}.target.network.asn ;;
    group_label: "target"
    label: "target.network.asn"
    view_label: "UDM"
    description: "Autonomous system number."
  }  # dimension target__network__asn

  dimension: target__network__http {
    hidden: yes
  }  # dimension target__network__http

  dimension: target__network__http__method {
    type: string
    sql: ${TABLE}.target.network.http.method ;;
    group_label: "target"
    label: "target.network.http.method"
    view_label: "UDM"
    description: "The HTTP request method (e.g. \"GET\", \"POST\", \"PATCH\", \"DELETE\")."
  }  # dimension target__network__http__method

  dimension: target__network__http__referral_url {
    type: string
    sql: ${TABLE}.target.network.http.referral_url ;;
    group_label: "target"
    label: "target.network.http.referral_url"
    view_label: "UDM"
    description: "The URL for the HTTP referer."
  }  # dimension target__network__http__referral_url

  dimension: target__network__http__user_agent {
    type: string
    sql: ${TABLE}.target.network.http.user_agent ;;
    group_label: "target"
    label: "target.network.http.user_agent"
    view_label: "UDM"
    description: "The User-Agent request header which includes the application type, operating system, software vendor or software version of the requesting software user agent."
  }  # dimension target__network__http__user_agent

  dimension: target__network__organization_name {
    type: string
    sql: ${TABLE}.target.network.organization_name ;;
    group_label: "target"
    label: "target.network.organization_name"
    view_label: "UDM"
    description: "Organization name (e.g Google)."
  }  # dimension target__network__organization_name

  dimension: target__platform {
    type: number
    sql: ${TABLE}.target.platform ;;
    group_label: "target"
    label: "target.platform"
    view_label: "UDM"
    description: "Platform."
  }  # dimension target__platform

  dimension: target__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.target.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "target"
    label: "target.platform_enum_name"
    view_label: "UDM"
    description: "Platform."
  }  # dimension target__platform_enum_name

  dimension: target__platform_patch_level {
    type: string
    sql: ${TABLE}.target.platform_patch_level ;;
    group_label: "target"
    label: "target.platform_patch_level"
    view_label: "UDM"
    description: "Platform patch level. For example, \"Build 17134.48\""
  }  # dimension target__platform_patch_level

  dimension: target__platform_version {
    type: string
    sql: ${TABLE}.target.platform_version ;;
    group_label: "target"
    label: "target.platform_version"
    view_label: "UDM"
    description: "Platform version. For example, \"Microsoft Windows 1803\"."
  }  # dimension target__platform_version

  dimension: target__port {
    type: number
    value_format: "#"
    sql: ${TABLE}.target.port ;;
    group_label: "target"
    label: "target.port"
    view_label: "UDM"
    description: "Source or destination network port number when a specific network connection is described within an event."
  }  # dimension target__port

  dimension: target__process {
    hidden: yes
  }  # dimension target__process

  dimension: target__process__access_mask {
    type: number
    sql: ${TABLE}.target.process.access_mask ;;
    group_label: "target"
    label: "target.process.access_mask"
    view_label: "UDM"
    description: "A bit mask representing the level of access."
  }  # dimension target__process__access_mask

  dimension: target__process__command_line {
    type: string
    sql: ${TABLE}.target.process.command_line ;;
    group_label: "target"
    label: "target.process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension target__process__command_line

  dimension: target__process__command_line_history {
    hidden: yes
  }  # dimension target__process__command_line_history

  dimension: target__process__file {
    hidden: yes
  }  # dimension target__process__file

  dimension: target__process__file__authentihash {
    type: string
    sql: ${TABLE}.target.process.file.authentihash ;;
    group_label: "target"
    label: "target.process.file.authentihash"
    view_label: "UDM"
    description: "Authentihash of the file."
  }  # dimension target__process__file__authentihash

  dimension: target__process__file__capabilities_tags {
    hidden: yes
  }  # dimension target__process__file__capabilities_tags

  dimension: target__process__file__file_metadata {
    hidden: yes
  }  # dimension target__process__file__file_metadata

  dimension: target__process__file__file_metadata__pe {
    hidden: yes
  }  # dimension target__process__file__file_metadata__pe

  dimension: target__process__file__file_metadata__pe__import_hash {
    type: string
    sql: ${TABLE}.target.process.file.file_metadata.pe.import_hash ;;
    group_label: "target"
    group_item_label: "target.process.file.file_metadata.pe.import_hash [D]"
    label: "target.process.file.file_metadata.pe.import_hash"
    view_label: "UDM"
    description: "Hash of PE imports. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__process__file__file_metadata__pe__import_hash

  dimension: target__process__file__file_type {
    type: number
    sql: ${TABLE}.target.process.file.file_type ;;
    group_label: "target"
    label: "target.process.file.file_type"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension target__process__file__file_type

  dimension: target__process__file__file_type_enum_name {
    type: string
    suggestions: ["FILE_TYPE_ACE", "FILE_TYPE_ANDROID", "FILE_TYPE_APPLE", "FILE_TYPE_APPLEDOUBLE", "FILE_TYPE_APPLESCRIPT", "FILE_TYPE_APPLESCRIPT_COMPILED", "FILE_TYPE_APPLESINGLE", "FILE_TYPE_APPLE_PLIST", "FILE_TYPE_ARC", "FILE_TYPE_ARJ", "FILE_TYPE_ASD", "FILE_TYPE_ASF", "FILE_TYPE_AVI", "FILE_TYPE_AWK", "FILE_TYPE_BLACKHOLE", "FILE_TYPE_BMP", "FILE_TYPE_BZIP", "FILE_TYPE_C", "FILE_TYPE_CAB", "FILE_TYPE_CAP", "FILE_TYPE_CHM", "FILE_TYPE_COFF", "FILE_TYPE_COOKIE", "FILE_TYPE_CPP", "FILE_TYPE_CRX", "FILE_TYPE_DEB", "FILE_TYPE_DIB", "FILE_TYPE_DIVX", "FILE_TYPE_DMG", "FILE_TYPE_DOC", "FILE_TYPE_DOCX", "FILE_TYPE_DOS_COM", "FILE_TYPE_DOS_EXE", "FILE_TYPE_DYALOG", "FILE_TYPE_DZIP", "FILE_TYPE_EBOOK", "FILE_TYPE_ELF", "FILE_TYPE_EMAIL_TYPE", "FILE_TYPE_EMF", "FILE_TYPE_EOT", "FILE_TYPE_EPS", "FILE_TYPE_FLA", "FILE_TYPE_FLAC", "FILE_TYPE_FLC", "FILE_TYPE_FLI", "FILE_TYPE_FLV", "FILE_TYPE_FORTRAN", "FILE_TYPE_FPX", "FILE_TYPE_GIF", "FILE_TYPE_GIMP", "FILE_TYPE_GUL", "FILE_TYPE_GZIP", "FILE_TYPE_HTML", "FILE_TYPE_HWP", "FILE_TYPE_ICO", "FILE_TYPE_IN_DESIGN", "FILE_TYPE_IPHONE", "FILE_TYPE_ISOIMAGE", "FILE_TYPE_JAR", "FILE_TYPE_JAVA", "FILE_TYPE_JAVASCRIPT", "FILE_TYPE_JAVA_BYTECODE", "FILE_TYPE_JNG", "FILE_TYPE_JPEG", "FILE_TYPE_KGB", "FILE_TYPE_LATEX", "FILE_TYPE_LINUX", "FILE_TYPE_LINUX_KERNEL", "FILE_TYPE_LNK", "FILE_TYPE_MACH_O", "FILE_TYPE_MACINTOSH", "FILE_TYPE_MACINTOSH_HFS", "FILE_TYPE_MACINTOSH_LIB", "FILE_TYPE_MIDI", "FILE_TYPE_MOV", "FILE_TYPE_MP3", "FILE_TYPE_MP4", "FILE_TYPE_MPEG", "FILE_TYPE_MSCOMPRESS", "FILE_TYPE_MSI", "FILE_TYPE_NE_DLL", "FILE_TYPE_NE_EXE", "FILE_TYPE_ODF", "FILE_TYPE_ODG", "FILE_TYPE_ODP", "FILE_TYPE_ODS", "FILE_TYPE_ODT", "FILE_TYPE_OGG", "FILE_TYPE_OUTLOOK", "FILE_TYPE_PALMOS", "FILE_TYPE_PASCAL", "FILE_TYPE_PDF", "FILE_TYPE_PERL", "FILE_TYPE_PE_DLL", "FILE_TYPE_PE_EXE", "FILE_TYPE_PHP", "FILE_TYPE_PKG", "FILE_TYPE_PNG", "FILE_TYPE_POWERSHELL", "FILE_TYPE_PPSX", "FILE_TYPE_PPT", "FILE_TYPE_PPTX", "FILE_TYPE_PS", "FILE_TYPE_PSD", "FILE_TYPE_PYTHON", "FILE_TYPE_QUICKTIME", "FILE_TYPE_RAR", "FILE_TYPE_RM", "FILE_TYPE_ROM", "FILE_TYPE_RPM", "FILE_TYPE_RTF", "FILE_TYPE_RUBY", "FILE_TYPE_RZIP", "FILE_TYPE_SCRIPT", "FILE_TYPE_SEVENZIP", "FILE_TYPE_SHELLSCRIPT", "FILE_TYPE_SVG", "FILE_TYPE_SWF", "FILE_TYPE_SYMBIAN", "FILE_TYPE_T3GP", "FILE_TYPE_TAR", "FILE_TYPE_TARGA", "FILE_TYPE_TEXT", "FILE_TYPE_TIFF", "FILE_TYPE_TORRENT", "FILE_TYPE_TTF", "FILE_TYPE_UNSPECIFIED", "FILE_TYPE_VBA", "FILE_TYPE_WAV", "FILE_TYPE_WEBP", "FILE_TYPE_WINCE", "FILE_TYPE_WMA", "FILE_TYPE_WMV", "FILE_TYPE_WOFF", "FILE_TYPE_XLS", "FILE_TYPE_XLSX", "FILE_TYPE_XML", "FILE_TYPE_XPI", "FILE_TYPE_XWD", "FILE_TYPE_ZIP", "FILE_TYPE_ZLIB"]
    sql: CASE ${TABLE}.target.process.file.file_type WHEN 0 THEN 'FILE_TYPE_UNSPECIFIED' WHEN 1 THEN 'FILE_TYPE_PE_EXE' WHEN 2 THEN 'FILE_TYPE_PE_DLL' WHEN 3 THEN 'FILE_TYPE_MSI' WHEN 10 THEN 'FILE_TYPE_NE_EXE' WHEN 11 THEN 'FILE_TYPE_NE_DLL' WHEN 20 THEN 'FILE_TYPE_DOS_EXE' WHEN 21 THEN 'FILE_TYPE_DOS_COM' WHEN 30 THEN 'FILE_TYPE_COFF' WHEN 31 THEN 'FILE_TYPE_ELF' WHEN 32 THEN 'FILE_TYPE_LINUX_KERNEL' WHEN 33 THEN 'FILE_TYPE_RPM' WHEN 34 THEN 'FILE_TYPE_LINUX' WHEN 35 THEN 'FILE_TYPE_MACH_O' WHEN 36 THEN 'FILE_TYPE_JAVA_BYTECODE' WHEN 37 THEN 'FILE_TYPE_DMG' WHEN 38 THEN 'FILE_TYPE_DEB' WHEN 39 THEN 'FILE_TYPE_PKG' WHEN 50 THEN 'FILE_TYPE_LNK' WHEN 100 THEN 'FILE_TYPE_JPEG' WHEN 101 THEN 'FILE_TYPE_TIFF' WHEN 102 THEN 'FILE_TYPE_GIF' WHEN 103 THEN 'FILE_TYPE_PNG' WHEN 104 THEN 'FILE_TYPE_BMP' WHEN 105 THEN 'FILE_TYPE_GIMP' WHEN 106 THEN 'FILE_TYPE_IN_DESIGN' WHEN 107 THEN 'FILE_TYPE_PSD' WHEN 108 THEN 'FILE_TYPE_TARGA' WHEN 109 THEN 'FILE_TYPE_XWD' WHEN 110 THEN 'FILE_TYPE_DIB' WHEN 111 THEN 'FILE_TYPE_JNG' WHEN 112 THEN 'FILE_TYPE_ICO' WHEN 113 THEN 'FILE_TYPE_FPX' WHEN 114 THEN 'FILE_TYPE_EPS' WHEN 115 THEN 'FILE_TYPE_SVG' WHEN 116 THEN 'FILE_TYPE_EMF' WHEN 117 THEN 'FILE_TYPE_WEBP' WHEN 150 THEN 'FILE_TYPE_OGG' WHEN 151 THEN 'FILE_TYPE_FLC' WHEN 152 THEN 'FILE_TYPE_FLI' WHEN 153 THEN 'FILE_TYPE_MP3' WHEN 154 THEN 'FILE_TYPE_FLAC' WHEN 155 THEN 'FILE_TYPE_WAV' WHEN 156 THEN 'FILE_TYPE_MIDI' WHEN 157 THEN 'FILE_TYPE_AVI' WHEN 158 THEN 'FILE_TYPE_MPEG' WHEN 159 THEN 'FILE_TYPE_QUICKTIME' WHEN 160 THEN 'FILE_TYPE_ASF' WHEN 161 THEN 'FILE_TYPE_DIVX' WHEN 162 THEN 'FILE_TYPE_FLV' WHEN 163 THEN 'FILE_TYPE_WMA' WHEN 164 THEN 'FILE_TYPE_WMV' WHEN 165 THEN 'FILE_TYPE_RM' WHEN 166 THEN 'FILE_TYPE_MOV' WHEN 167 THEN 'FILE_TYPE_MP4' WHEN 168 THEN 'FILE_TYPE_T3GP' WHEN 200 THEN 'FILE_TYPE_PDF' WHEN 201 THEN 'FILE_TYPE_PS' WHEN 202 THEN 'FILE_TYPE_DOC' WHEN 203 THEN 'FILE_TYPE_DOCX' WHEN 204 THEN 'FILE_TYPE_PPT' WHEN 205 THEN 'FILE_TYPE_PPTX' WHEN 209 THEN 'FILE_TYPE_PPSX' WHEN 206 THEN 'FILE_TYPE_XLS' WHEN 207 THEN 'FILE_TYPE_XLSX' WHEN 208 THEN 'FILE_TYPE_RTF' WHEN 250 THEN 'FILE_TYPE_ODP' WHEN 251 THEN 'FILE_TYPE_ODS' WHEN 252 THEN 'FILE_TYPE_ODT' WHEN 253 THEN 'FILE_TYPE_HWP' WHEN 254 THEN 'FILE_TYPE_GUL' WHEN 255 THEN 'FILE_TYPE_ODF' WHEN 256 THEN 'FILE_TYPE_ODG' WHEN 260 THEN 'FILE_TYPE_EBOOK' WHEN 261 THEN 'FILE_TYPE_LATEX' WHEN 262 THEN 'FILE_TYPE_TTF' WHEN 263 THEN 'FILE_TYPE_EOT' WHEN 264 THEN 'FILE_TYPE_WOFF' WHEN 265 THEN 'FILE_TYPE_CHM' WHEN 300 THEN 'FILE_TYPE_ZIP' WHEN 301 THEN 'FILE_TYPE_GZIP' WHEN 302 THEN 'FILE_TYPE_BZIP' WHEN 303 THEN 'FILE_TYPE_RZIP' WHEN 304 THEN 'FILE_TYPE_DZIP' WHEN 305 THEN 'FILE_TYPE_SEVENZIP' WHEN 306 THEN 'FILE_TYPE_CAB' WHEN 307 THEN 'FILE_TYPE_JAR' WHEN 308 THEN 'FILE_TYPE_RAR' WHEN 309 THEN 'FILE_TYPE_MSCOMPRESS' WHEN 310 THEN 'FILE_TYPE_ACE' WHEN 311 THEN 'FILE_TYPE_ARC' WHEN 312 THEN 'FILE_TYPE_ARJ' WHEN 313 THEN 'FILE_TYPE_ASD' WHEN 314 THEN 'FILE_TYPE_BLACKHOLE' WHEN 315 THEN 'FILE_TYPE_KGB' WHEN 316 THEN 'FILE_TYPE_ZLIB' WHEN 317 THEN 'FILE_TYPE_TAR' WHEN 400 THEN 'FILE_TYPE_TEXT' WHEN 401 THEN 'FILE_TYPE_SCRIPT' WHEN 402 THEN 'FILE_TYPE_PHP' WHEN 403 THEN 'FILE_TYPE_PYTHON' WHEN 404 THEN 'FILE_TYPE_PERL' WHEN 405 THEN 'FILE_TYPE_RUBY' WHEN 406 THEN 'FILE_TYPE_C' WHEN 407 THEN 'FILE_TYPE_CPP' WHEN 408 THEN 'FILE_TYPE_JAVA' WHEN 409 THEN 'FILE_TYPE_SHELLSCRIPT' WHEN 410 THEN 'FILE_TYPE_PASCAL' WHEN 411 THEN 'FILE_TYPE_AWK' WHEN 412 THEN 'FILE_TYPE_DYALOG' WHEN 413 THEN 'FILE_TYPE_FORTRAN' WHEN 414 THEN 'FILE_TYPE_JAVASCRIPT' WHEN 415 THEN 'FILE_TYPE_POWERSHELL' WHEN 416 THEN 'FILE_TYPE_VBA' WHEN 500 THEN 'FILE_TYPE_SYMBIAN' WHEN 501 THEN 'FILE_TYPE_PALMOS' WHEN 502 THEN 'FILE_TYPE_WINCE' WHEN 503 THEN 'FILE_TYPE_ANDROID' WHEN 504 THEN 'FILE_TYPE_IPHONE' WHEN 600 THEN 'FILE_TYPE_HTML' WHEN 601 THEN 'FILE_TYPE_XML' WHEN 602 THEN 'FILE_TYPE_SWF' WHEN 603 THEN 'FILE_TYPE_FLA' WHEN 604 THEN 'FILE_TYPE_COOKIE' WHEN 605 THEN 'FILE_TYPE_TORRENT' WHEN 606 THEN 'FILE_TYPE_EMAIL_TYPE' WHEN 607 THEN 'FILE_TYPE_OUTLOOK' WHEN 700 THEN 'FILE_TYPE_CAP' WHEN 800 THEN 'FILE_TYPE_ISOIMAGE' WHEN 1000 THEN 'FILE_TYPE_APPLE' WHEN 1001 THEN 'FILE_TYPE_MACINTOSH' WHEN 1002 THEN 'FILE_TYPE_APPLESINGLE' WHEN 1003 THEN 'FILE_TYPE_APPLEDOUBLE' WHEN 1004 THEN 'FILE_TYPE_MACINTOSH_HFS' WHEN 1005 THEN 'FILE_TYPE_APPLE_PLIST' WHEN 1006 THEN 'FILE_TYPE_MACINTOSH_LIB' WHEN 1007 THEN 'FILE_TYPE_APPLESCRIPT' WHEN 1008 THEN 'FILE_TYPE_APPLESCRIPT_COMPILED' WHEN 1100 THEN 'FILE_TYPE_CRX' WHEN 1101 THEN 'FILE_TYPE_XPI' WHEN 1200 THEN 'FILE_TYPE_ROM' END ;;
    group_label: "target"
    label: "target.process.file.file_type_enum_name"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension target__process__file__file_type_enum_name

  dimension_group: target__process__file__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.process.file.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.process.file.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.process.file.first_seen_time"
    view_label: "UDM"
    description: "Timestamp the file was first seen in the customer's environment."
  }  # dimension target__process__file__first_seen_time

  dimension: target__process__file__full_path {
    type: string
    sql: ${TABLE}.target.process.file.full_path ;;
    group_label: "target"
    label: "target.process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension target__process__file__full_path

  dimension_group: target__process__file__last_modification_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.process.file.last_modification_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.process.file.last_modification_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.process.file.last_modification_time"
    view_label: "UDM"
    description: "Timestamp when the file was last updated."
  }  # dimension target__process__file__last_modification_time

  dimension: target__process__file__md5 {
    type: string
    sql: ${TABLE}.target.process.file.md5 ;;
    group_label: "target"
    label: "target.process.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension target__process__file__md5

  dimension: target__process__file__mime_type {
    type: string
    sql: ${TABLE}.target.process.file.mime_type ;;
    group_label: "target"
    label: "target.process.file.mime_type"
    view_label: "UDM"
    description: "The MIME (Multipurpose Internet Mail Extensions) type of the file, for example \"PE\", \"PDF\", \"powershell script\", etc."
  }  # dimension target__process__file__mime_type

  dimension: target__process__file__names {
    hidden: yes
  }  # dimension target__process__file__names

  dimension: target__process__file__pe_file {
    hidden: yes
  }  # dimension target__process__file__pe_file

  dimension: target__process__file__pe_file__signature_info {
    hidden: yes
  }  # dimension target__process__file__pe_file__signature_info

  dimension: target__process__file__pe_file__signature_info__signer {
    hidden: yes
  }  # dimension target__process__file__pe_file__signature_info__signer

  dimension: target__process__file__pe_file__signature_info__verification_message {
    type: string
    sql: ${TABLE}.target.process.file.pe_file.signature_info.verification_message ;;
    group_label: "target"
    group_item_label: "target.process.file.pe_file.signature_info.verification_message [D]"
    label: "target.process.file.pe_file.signature_info.verification_message"
    view_label: "UDM"
    description: "Status of the certificate. Valid values are \"Signed\", \"Unsigned\" or a description of the certificate anomaly, if found. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__process__file__pe_file__signature_info__verification_message

  dimension: target__process__file__sha1 {
    type: string
    sql: ${TABLE}.target.process.file.sha1 ;;
    group_label: "target"
    label: "target.process.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension target__process__file__sha1

  dimension: target__process__file__sha256 {
    type: string
    sql: ${TABLE}.target.process.file.sha256 ;;
    group_label: "target"
    label: "target.process.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension target__process__file__sha256

  dimension: target__process__file__size {
    type: number
    sql: ${TABLE}.target.process.file.size ;;
    group_label: "target"
    label: "target.process.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension target__process__file__size

  dimension: target__process__file__tags {
    hidden: yes
  }  # dimension target__process__file__tags

  dimension: target__process__parent_pid {
    type: string
    sql: ${TABLE}.target.process.parent_pid ;;
    group_label: "target"
    group_item_label: "target.process.parent_pid [D]"
    label: "target.process.parent_pid"
    view_label: "UDM"
    description: "The ID of the parent process. Deprecated: use parent_process.pid instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__process__parent_pid

  dimension: target__process__parent_process {
    hidden: yes
  }  # dimension target__process__parent_process

  dimension: target__process__parent_process__command_line {
    type: string
    sql: ${TABLE}.target.process.parent_process.command_line ;;
    group_label: "target"
    label: "target.process.parent_process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension target__process__parent_process__command_line

  dimension: target__process__parent_process__file {
    hidden: yes
  }  # dimension target__process__parent_process__file

  dimension: target__process__parent_process__file__capabilities_tags {
    hidden: yes
  }  # dimension target__process__parent_process__file__capabilities_tags

  dimension_group: target__process__parent_process__file__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.process.parent_process.file.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.process.parent_process.file.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.process.parent_process.file.first_seen_time"
    view_label: "UDM"
    description: "Timestamp the file was first seen in the customer's environment."
  }  # dimension target__process__parent_process__file__first_seen_time

  dimension: target__process__parent_process__file__full_path {
    type: string
    sql: ${TABLE}.target.process.parent_process.file.full_path ;;
    group_label: "target"
    label: "target.process.parent_process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension target__process__parent_process__file__full_path

  dimension_group: target__process__parent_process__file__last_modification_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.process.parent_process.file.last_modification_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.process.parent_process.file.last_modification_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.process.parent_process.file.last_modification_time"
    view_label: "UDM"
    description: "Timestamp when the file was last updated."
  }  # dimension target__process__parent_process__file__last_modification_time

  dimension: target__process__parent_process__file__md5 {
    type: string
    sql: ${TABLE}.target.process.parent_process.file.md5 ;;
    group_label: "target"
    label: "target.process.parent_process.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension target__process__parent_process__file__md5

  dimension: target__process__parent_process__file__names {
    hidden: yes
  }  # dimension target__process__parent_process__file__names

  dimension: target__process__parent_process__file__sha1 {
    type: string
    sql: ${TABLE}.target.process.parent_process.file.sha1 ;;
    group_label: "target"
    label: "target.process.parent_process.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension target__process__parent_process__file__sha1

  dimension: target__process__parent_process__file__sha256 {
    type: string
    sql: ${TABLE}.target.process.parent_process.file.sha256 ;;
    group_label: "target"
    label: "target.process.parent_process.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension target__process__parent_process__file__sha256

  dimension: target__process__parent_process__file__size {
    type: number
    sql: ${TABLE}.target.process.parent_process.file.size ;;
    group_label: "target"
    label: "target.process.parent_process.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension target__process__parent_process__file__size

  dimension: target__process__parent_process__parent_pid {
    type: string
    sql: ${TABLE}.target.process.parent_process.parent_pid ;;
    group_label: "target"
    group_item_label: "target.process.parent_process.parent_pid [D]"
    label: "target.process.parent_process.parent_pid"
    view_label: "UDM"
    description: "The ID of the parent process. Deprecated: use parent_process.pid instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__process__parent_process__parent_pid

  dimension: target__process__parent_process__pid {
    type: string
    sql: ${TABLE}.target.process.parent_process.pid ;;
    group_label: "target"
    label: "target.process.parent_process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension target__process__parent_process__pid

  dimension: target__process__parent_process__product_specific_process_id {
    type: string
    sql: ${TABLE}.target.process.parent_process.product_specific_process_id ;;
    group_label: "target"
    label: "target.process.parent_process.product_specific_process_id"
    view_label: "UDM"
    description: "A product specific process id."
  }  # dimension target__process__parent_process__product_specific_process_id

  dimension: target__process__pid {
    type: string
    sql: ${TABLE}.target.process.pid ;;
    group_label: "target"
    label: "target.process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension target__process__pid

  dimension: target__process__product_specific_process_id {
    type: string
    sql: ${TABLE}.target.process.product_specific_process_id ;;
    group_label: "target"
    label: "target.process.product_specific_process_id"
    view_label: "UDM"
    description: "A product specific process id."
  }  # dimension target__process__product_specific_process_id

  dimension: target__process_ancestors {
    hidden: yes
  }  # dimension target__process_ancestors

  dimension: target__registry {
    hidden: yes
  }  # dimension target__registry

  dimension: target__registry__registry_key {
    type: string
    sql: ${TABLE}.target.registry.registry_key ;;
    group_label: "target"
    label: "target.registry.registry_key"
    view_label: "UDM"
    description: "Registry key associated with an application or system component (e.g., HKEY_, HKCU\Environment...)."
  }  # dimension target__registry__registry_key

  dimension: target__registry__registry_value_data {
    type: string
    sql: ${TABLE}.target.registry.registry_value_data ;;
    group_label: "target"
    label: "target.registry.registry_value_data"
    view_label: "UDM"
    description: "Data associated with a registry value (e.g. %USERPROFILE%\Local Settings\Temp)."
  }  # dimension target__registry__registry_value_data

  dimension: target__registry__registry_value_name {
    type: string
    sql: ${TABLE}.target.registry.registry_value_name ;;
    group_label: "target"
    label: "target.registry.registry_value_name"
    view_label: "UDM"
    description: "Name of the registry value associated with an application or system component (e.g. TEMP)."
  }  # dimension target__registry__registry_value_name

  dimension: target__resource {
    hidden: yes
  }  # dimension target__resource

  dimension: target__resource__attribute {
    hidden: yes
  }  # dimension target__resource__attribute

  dimension: target__resource__attribute__cloud {
    hidden: yes
  }  # dimension target__resource__attribute__cloud

  dimension: target__resource__attribute__cloud__availability_zone {
    type: string
    sql: ${TABLE}.target.resource.attribute.cloud.availability_zone ;;
    group_label: "target"
    label: "target.resource.attribute.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name)."
  }  # dimension target__resource__attribute__cloud__availability_zone

  dimension: target__resource__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.target.resource.attribute.cloud.environment ;;
    group_label: "target"
    label: "target.resource.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension target__resource__attribute__cloud__environment

  dimension: target__resource__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.target.resource.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "target"
    label: "target.resource.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension target__resource__attribute__cloud__environment_enum_name

  dimension: target__resource__attribute__cloud__project {
    hidden: yes
  }  # dimension target__resource__attribute__cloud__project

  dimension: target__resource__attribute__cloud__project__id {
    type: string
    sql: ${TABLE}.target.resource.attribute.cloud.project.id ;;
    group_label: "target"
    group_item_label: "target.resource.attribute.cloud.project.id [D]"
    label: "target.resource.attribute.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__resource__attribute__cloud__project__id

  dimension: target__resource__attribute__cloud__project__name {
    type: string
    sql: ${TABLE}.target.resource.attribute.cloud.project.name ;;
    group_label: "target"
    group_item_label: "target.resource.attribute.cloud.project.name [D]"
    label: "target.resource.attribute.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__resource__attribute__cloud__project__name

  dimension: target__resource__attribute__cloud__project__product_object_id {
    type: string
    sql: ${TABLE}.target.resource.attribute.cloud.project.product_object_id ;;
    group_label: "target"
    group_item_label: "target.resource.attribute.cloud.project.product_object_id [D]"
    label: "target.resource.attribute.cloud.project.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__resource__attribute__cloud__project__product_object_id

  dimension_group: target__resource__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.resource.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.resource.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.resource.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension target__resource__attribute__creation_time

  dimension: target__resource__attribute__labels {
    hidden: yes
  }  # dimension target__resource__attribute__labels

  dimension_group: target__resource__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.resource.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.resource.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.resource.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension target__resource__attribute__last_update_time

  dimension: target__resource__attribute__permissions {
    hidden: yes
  }  # dimension target__resource__attribute__permissions

  dimension: target__resource__attribute__roles {
    hidden: yes
  }  # dimension target__resource__attribute__roles

  dimension: target__resource__id {
    type: string
    sql: ${TABLE}.target.resource.id ;;
    group_label: "target"
    group_item_label: "target.resource.id [D]"
    label: "target.resource.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__resource__id

  dimension: target__resource__name {
    type: string
    sql: ${TABLE}.target.resource.name ;;
    group_label: "target"
    label: "target.resource.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension target__resource__name

  dimension: target__resource__parent {
    type: string
    sql: ${TABLE}.target.resource.parent ;;
    group_label: "target"
    group_item_label: "target.resource.parent [D]"
    label: "target.resource.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__resource__parent

  dimension: target__resource__product_object_id {
    type: string
    sql: ${TABLE}.target.resource.product_object_id ;;
    group_label: "target"
    label: "target.resource.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension target__resource__product_object_id

  dimension: target__resource__resource_subtype {
    type: string
    sql: ${TABLE}.target.resource.resource_subtype ;;
    group_label: "target"
    label: "target.resource.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension target__resource__resource_subtype

  dimension: target__resource__resource_type {
    type: number
    sql: ${TABLE}.target.resource.resource_type ;;
    group_label: "target"
    label: "target.resource.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension target__resource__resource_type

  dimension: target__resource__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.target.resource.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "target"
    label: "target.resource.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension target__resource__resource_type_enum_name

  dimension: target__resource__type {
    type: string
    sql: ${TABLE}.target.resource.type ;;
    group_label: "target"
    group_item_label: "target.resource.type [D]"
    label: "target.resource.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__resource__type

  dimension: target__resource_ancestors {
    hidden: yes
  }  # dimension target__resource_ancestors

  dimension: target__url {
    type: string
    sql: ${TABLE}.target.url ;;
    group_label: "target"
    label: "target.url"
    view_label: "UDM"
    description: "The URL."
  }  # dimension target__url

  dimension: target__user {
    hidden: yes
  }  # dimension target__user

  dimension_group: target__user__account_expiration_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.account_expiration_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.account_expiration_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.account_expiration_time"
    view_label: "UDM"
    description: "User account expiration timestamp."
  }  # dimension target__user__account_expiration_time

  dimension_group: target__user__account_lockout_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.account_lockout_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.account_lockout_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.account_lockout_time"
    view_label: "UDM"
    description: "User account lockout timestamp."
  }  # dimension target__user__account_lockout_time

  dimension: target__user__account_type {
    type: number
    sql: ${TABLE}.target.user.account_type ;;
    group_label: "target"
    label: "target.user.account_type"
    view_label: "UDM"
    description: "Type of user account (service, domain, cloud, etc).  Somewhat aligned to: <a href=\"https://attack.mitre.org/techniques/T1078/\">https://attack.mitre.org/techniques/T1078/</a>"
  }  # dimension target__user__account_type

  dimension: target__user__account_type_enum_name {
    type: string
    suggestions: ["ACCOUNT_TYPE_UNSPECIFIED", "CLOUD_ACCOUNT_TYPE", "DEFAULT_ACCOUNT_TYPE", "DOMAIN_ACCOUNT_TYPE", "LOCAL_ACCOUNT_TYPE", "SERVICE_ACCOUNT_TYPE"]
    sql: CASE ${TABLE}.target.user.account_type WHEN 0 THEN 'ACCOUNT_TYPE_UNSPECIFIED' WHEN 1 THEN 'DOMAIN_ACCOUNT_TYPE' WHEN 2 THEN 'LOCAL_ACCOUNT_TYPE' WHEN 3 THEN 'CLOUD_ACCOUNT_TYPE' WHEN 4 THEN 'SERVICE_ACCOUNT_TYPE' WHEN 5 THEN 'DEFAULT_ACCOUNT_TYPE' END ;;
    group_label: "target"
    label: "target.user.account_type_enum_name"
    view_label: "UDM"
    description: "Type of user account (service, domain, cloud, etc).  Somewhat aligned to: <a href=\"https://attack.mitre.org/techniques/T1078/\">https://attack.mitre.org/techniques/T1078/</a>"
  }  # dimension target__user__account_type_enum_name

  dimension: target__user__attribute {
    hidden: yes
  }  # dimension target__user__attribute

  dimension: target__user__attribute__cloud {
    hidden: yes
  }  # dimension target__user__attribute__cloud

  dimension: target__user__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.target.user.attribute.cloud.environment ;;
    group_label: "target"
    label: "target.user.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension target__user__attribute__cloud__environment

  dimension: target__user__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.target.user.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "target"
    label: "target.user.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension target__user__attribute__cloud__environment_enum_name

  dimension: target__user__attribute__cloud__project {
    hidden: yes
  }  # dimension target__user__attribute__cloud__project

  dimension: target__user__attribute__cloud__project__id {
    type: string
    sql: ${TABLE}.target.user.attribute.cloud.project.id ;;
    group_label: "target"
    group_item_label: "target.user.attribute.cloud.project.id [D]"
    label: "target.user.attribute.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__attribute__cloud__project__id

  dimension: target__user__attribute__cloud__vpc {
    hidden: yes
  }  # dimension target__user__attribute__cloud__vpc

  dimension: target__user__attribute__cloud__vpc__product_object_id {
    type: string
    sql: ${TABLE}.target.user.attribute.cloud.vpc.product_object_id ;;
    group_label: "target"
    group_item_label: "target.user.attribute.cloud.vpc.product_object_id [D]"
    label: "target.user.attribute.cloud.vpc.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__attribute__cloud__vpc__product_object_id

  dimension_group: target__user__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension target__user__attribute__creation_time

  dimension: target__user__attribute__labels {
    hidden: yes
  }  # dimension target__user__attribute__labels

  dimension_group: target__user__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension target__user__attribute__last_update_time

  dimension: target__user__attribute__permissions {
    hidden: yes
  }  # dimension target__user__attribute__permissions

  dimension: target__user__attribute__roles {
    hidden: yes
  }  # dimension target__user__attribute__roles

  dimension: target__user__company_name {
    type: string
    sql: ${TABLE}.target.user.company_name ;;
    group_label: "target"
    label: "target.user.company_name"
    view_label: "UDM"
    description: "User job company name."
  }  # dimension target__user__company_name

  dimension: target__user__department {
    hidden: yes
  }  # dimension target__user__department

  dimension: target__user__email_addresses {
    hidden: yes
  }  # dimension target__user__email_addresses

  dimension: target__user__employee_id {
    type: string
    sql: ${TABLE}.target.user.employee_id ;;
    group_label: "target"
    label: "target.user.employee_id"
    view_label: "UDM"
    description: "Human capital management identifier."
  }  # dimension target__user__employee_id

  dimension: target__user__first_name {
    type: string
    sql: ${TABLE}.target.user.first_name ;;
    group_label: "target"
    label: "target.user.first_name"
    view_label: "UDM"
    description: "First name of the user (e.g. \"John\")."
  }  # dimension target__user__first_name

  dimension: target__user__group_identifiers {
    hidden: yes
  }  # dimension target__user__group_identifiers

  dimension: target__user__groupid {
    type: string
    sql: ${TABLE}.target.user.groupid ;;
    group_label: "target"
    group_item_label: "target.user.groupid [D]"
    label: "target.user.groupid"
    view_label: "UDM"
    description: "The ID of the group that the user belongs to. Deprecated in favor of the repeated group_identifiers field. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__groupid

  dimension_group: target__user__hire_date {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.hire_date.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.hire_date.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.hire_date"
    view_label: "UDM"
    description: "User job employment hire date."
  }  # dimension target__user__hire_date

  dimension_group: target__user__last_bad_password_attempt_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.last_bad_password_attempt_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.last_bad_password_attempt_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.last_bad_password_attempt_time"
    view_label: "UDM"
    description: "User last bad password attempt timestamp."
  }  # dimension target__user__last_bad_password_attempt_time

  dimension_group: target__user__last_login_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.last_login_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.last_login_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.last_login_time"
    view_label: "UDM"
    description: "User last login timestamp."
  }  # dimension target__user__last_login_time

  dimension: target__user__last_name {
    type: string
    sql: ${TABLE}.target.user.last_name ;;
    group_label: "target"
    label: "target.user.last_name"
    view_label: "UDM"
    description: "Last name of the user (e.g. \"Locke\")."
  }  # dimension target__user__last_name

  dimension_group: target__user__last_password_change_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.last_password_change_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.last_password_change_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.last_password_change_time"
    view_label: "UDM"
    description: "User last password change timestamp."
  }  # dimension target__user__last_password_change_time

  dimension: target__user__managers {
    hidden: yes
  }  # dimension target__user__managers

  dimension: target__user__middle_name {
    type: string
    sql: ${TABLE}.target.user.middle_name ;;
    group_label: "target"
    label: "target.user.middle_name"
    view_label: "UDM"
    description: "Middle name of the user."
  }  # dimension target__user__middle_name

  dimension: target__user__office_address {
    hidden: yes
  }  # dimension target__user__office_address

  dimension: target__user__office_address__city {
    type: string
    sql: ${TABLE}.target.user.office_address.city ;;
    group_label: "target"
    label: "target.user.office_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension target__user__office_address__city

  dimension: target__user__office_address__country_or_region {
    type: string
    sql: ${TABLE}.target.user.office_address.country_or_region ;;
    group_label: "target"
    label: "target.user.office_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension target__user__office_address__country_or_region

  dimension: target__user__office_address__floor_name {
    type: string
    sql: ${TABLE}.target.user.office_address.floor_name ;;
    group_label: "target"
    label: "target.user.office_address.floor_name"
    view_label: "UDM"
    description: "Floor name, number or a combination of the two for a building. (e.g. \"1-A\")."
  }  # dimension target__user__office_address__floor_name

  dimension: target__user__office_address__name {
    type: string
    sql: ${TABLE}.target.user.office_address.name ;;
    group_label: "target"
    label: "target.user.office_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension target__user__office_address__name

  dimension: target__user__office_address__state {
    type: string
    sql: ${TABLE}.target.user.office_address.state ;;
    group_label: "target"
    label: "target.user.office_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension target__user__office_address__state

  dimension: target__user__personal_address {
    hidden: yes
  }  # dimension target__user__personal_address

  dimension: target__user__personal_address__city {
    type: string
    sql: ${TABLE}.target.user.personal_address.city ;;
    group_label: "target"
    label: "target.user.personal_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension target__user__personal_address__city

  dimension: target__user__personal_address__country_or_region {
    type: string
    sql: ${TABLE}.target.user.personal_address.country_or_region ;;
    group_label: "target"
    label: "target.user.personal_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension target__user__personal_address__country_or_region

  dimension: target__user__personal_address__name {
    type: string
    sql: ${TABLE}.target.user.personal_address.name ;;
    group_label: "target"
    label: "target.user.personal_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension target__user__personal_address__name

  dimension: target__user__personal_address__region_latitude {
    type: number
    sql: ${TABLE}.target.user.personal_address.region_latitude ;;
    group_label: "target"
    group_item_label: "target.user.personal_address.region_latitude [D]"
    label: "target.user.personal_address.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__personal_address__region_latitude

  dimension: target__user__personal_address__region_longitude {
    type: number
    sql: ${TABLE}.target.user.personal_address.region_longitude ;;
    group_label: "target"
    group_item_label: "target.user.personal_address.region_longitude [D]"
    label: "target.user.personal_address.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__personal_address__region_longitude

  dimension: target__user__personal_address__location {
    type: location
    sql_latitude: ${TABLE}.target.user.personal_address.region_latitude ;;
    sql_longitude: ${TABLE}.target.user.personal_address.region_longitude ;;
    group_label: "target"
    group_item_label: "target.user.personal_address.location [D][L]"
    label: "target.user.personal_address.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension target__user__personal_address__location

  dimension: target__user__personal_address__state {
    type: string
    sql: ${TABLE}.target.user.personal_address.state ;;
    group_label: "target"
    label: "target.user.personal_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension target__user__personal_address__state

  dimension: target__user__phone_numbers {
    hidden: yes
  }  # dimension target__user__phone_numbers

  dimension: target__user__product_object_id {
    type: string
    sql: ${TABLE}.target.user.product_object_id ;;
    group_label: "target"
    label: "target.user.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension target__user__product_object_id

  dimension: target__user__role_description {
    type: string
    sql: ${TABLE}.target.user.role_description ;;
    group_label: "target"
    group_item_label: "target.user.role_description [D]"
    label: "target.user.role_description"
    view_label: "UDM"
    description: "System role description for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__role_description

  dimension: target__user__role_name {
    type: string
    sql: ${TABLE}.target.user.role_name ;;
    group_label: "target"
    group_item_label: "target.user.role_name [D]"
    label: "target.user.role_name"
    view_label: "UDM"
    description: "System role name for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__role_name

  dimension_group: target__user__termination_date {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.target.user.termination_date.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.target.user.termination_date.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.termination_date"
    view_label: "UDM"
    description: "User job employment termination date."
  }  # dimension target__user__termination_date

  dimension: target__user__time_off {
    hidden: yes
  }  # dimension target__user__time_off

  dimension: target__user__title {
    type: string
    sql: ${TABLE}.target.user.title ;;
    group_label: "target"
    label: "target.user.title"
    view_label: "UDM"
    description: "User job title."
  }  # dimension target__user__title

  dimension: target__user__user_authentication_status {
    type: number
    sql: ${TABLE}.target.user.user_authentication_status ;;
    group_label: "target"
    label: "target.user.user_authentication_status"
    view_label: "UDM"
    description: "System authentication status for user."
  }  # dimension target__user__user_authentication_status

  dimension: target__user__user_authentication_status_enum_name {
    type: string
    suggestions: ["ACTIVE", "DELETED", "NO_ACTIVE_CREDENTIALS", "SUSPENDED", "UNKNOWN_AUTHENTICATION_STATUS"]
    sql: CASE ${TABLE}.target.user.user_authentication_status WHEN 0 THEN 'UNKNOWN_AUTHENTICATION_STATUS' WHEN 1 THEN 'ACTIVE' WHEN 2 THEN 'SUSPENDED' WHEN 3 THEN 'NO_ACTIVE_CREDENTIALS' WHEN 4 THEN 'DELETED' END ;;
    group_label: "target"
    label: "target.user.user_authentication_status_enum_name"
    view_label: "UDM"
    description: "System authentication status for user."
  }  # dimension target__user__user_authentication_status_enum_name

  dimension: target__user__user_display_name {
    type: string
    sql: ${TABLE}.target.user.user_display_name ;;
    group_label: "target"
    label: "target.user.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension target__user__user_display_name

  dimension: target__user__user_role {
    type: number
    sql: ${TABLE}.target.user.user_role ;;
    group_label: "target"
    group_item_label: "target.user.user_role [D]"
    label: "target.user.user_role"
    view_label: "UDM"
    description: "System role for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__user_role

  dimension: target__user__user_role_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "UNKNOWN_ROLE"]
    sql: CASE ${TABLE}.target.user.user_role WHEN 0 THEN 'UNKNOWN_ROLE' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "target"
    group_item_label: "target.user.user_role_enum_name [D]"
    label: "target.user.user_role_enum_name"
    view_label: "UDM"
    description: "System role for user. Deprecated: use attribute.roles. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension target__user__user_role_enum_name

  dimension: target__user__userid {
    type: string
    sql: ${TABLE}.target.user.userid ;;
    group_label: "target"
    label: "target.user.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension target__user__userid

  dimension: target__user__windows_sid {
    type: string
    sql: ${TABLE}.target.user.windows_sid ;;
    group_label: "target"
    label: "target.user.windows_sid"
    view_label: "UDM"
    description: "The Microsoft Windows SID of the user."
  }  # dimension target__user__windows_sid

}  # view udm_events

view: udm_events__about__asset__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "about"
    label: "about.asset.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "about"
    label: "about.asset.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__about__asset__attribute__labels

view: udm_events__about__asset__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "about"
    label: "about.asset.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

}  # view udm_events__about__asset__attribute__permissions

view: udm_events__about__asset__hardware {
  dimension: manufacturer {
    type: string
    sql: ${TABLE}.manufacturer ;;
    group_label: "about"
    label: "about.asset.hardware.manufacturer"
    view_label: "UDM"
    description: "Hardware manufacturer."
  }  # dimension manufacturer

  dimension: model {
    type: string
    sql: ${TABLE}.model ;;
    group_label: "about"
    label: "about.asset.hardware.model"
    view_label: "UDM"
    description: "Hardware model."
  }  # dimension model

  dimension: serial_number {
    type: string
    sql: ${TABLE}.serial_number ;;
    group_label: "about"
    label: "about.asset.hardware.serial_number"
    view_label: "UDM"
    description: "Hardware serial number."
  }  # dimension serial_number

}  # view udm_events__about__asset__hardware

view: udm_events__about__asset__ip {
  dimension: udm_events__about__asset__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.asset.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with an asset."
  }  # dimension udm_events__about__asset__ip
}  # view udm_events__about__asset__ip

view: udm_events__about__asset__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "about"
    group_item_label: "about.asset.labels.key [D]"
    label: "about.asset.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "about"
    group_item_label: "about.asset.labels.value [D]"
    label: "about.asset.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__about__asset__labels

view: udm_events__about__asset__vulnerabilities {
  dimension: cve_id {
    type: string
    sql: ${TABLE}.cve_id ;;
    group_label: "about"
    label: "about.asset.vulnerabilities.cve_id"
    view_label: "UDM"
    description: "Common Vulnerabilities and Exposures Id.<a href=\"https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures\">https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures</a> <a href=\"https://cve.mitre.org/about/faqs.html#what_is_cve_id\">https://cve.mitre.org/about/faqs.html#what_is_cve_id</a>"
  }  # dimension cve_id

}  # view udm_events__about__asset__vulnerabilities

view: udm_events__about__file__capabilities_tags {
  dimension: udm_events__about__file__capabilities_tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.file.capabilities_tags"
    view_label: "UDM"
    description: "Capabilities tags."
  }  # dimension udm_events__about__file__capabilities_tags
}  # view udm_events__about__file__capabilities_tags

view: udm_events__about__file__names {
  dimension: udm_events__about__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__about__file__names
}  # view udm_events__about__file__names

view: udm_events__about__investigation__comments {
  dimension: udm_events__about__investigation__comments {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.investigation.comments"
    view_label: "UDM"
    description: "Comment added by the Analyst."
  }  # dimension udm_events__about__investigation__comments
}  # view udm_events__about__investigation__comments

view: udm_events__about__ip {
  dimension: udm_events__about__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with a network connection."
  }  # dimension udm_events__about__ip
}  # view udm_events__about__ip

view: udm_events__about__ip_geo_artifact {
  dimension: location {
    hidden: yes
  }  # dimension location

  dimension: location__country_or_region {
    type: string
    sql: ${TABLE}.location.country_or_region ;;
    group_label: "about"
    label: "about.ip_geo_artifact.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension location__country_or_region

}  # view udm_events__about__ip_geo_artifact

view: udm_events__about__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "about"
    group_item_label: "about.labels.key [D]"
    label: "about.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "about"
    group_item_label: "about.labels.value [D]"
    label: "about.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__about__labels

view: udm_events__about__mac {
  dimension: udm_events__about__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with a device."
  }  # dimension udm_events__about__mac
}  # view udm_events__about__mac

view: udm_events__about__nat_ip {
  dimension: udm_events__about__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.nat_ip"
    view_label: "UDM"
    description: "A list of NAT translated IP addresses associated with a network connection."
  }  # dimension udm_events__about__nat_ip
}  # view udm_events__about__nat_ip

view: udm_events__about__resource__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "about"
    label: "about.resource.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "about"
    label: "about.resource.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__about__resource__attribute__labels

view: udm_events__about__resource__attribute__permissions {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "about"
    label: "about.resource.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__about__resource__attribute__permissions

view: udm_events__about__resource_ancestors__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "about"
    label: "about.resource_ancestors.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "about"
    label: "about.resource_ancestors.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__about__resource_ancestors__attribute__labels

view: udm_events__about__resource_ancestors {
  dimension: attribute {
    hidden: yes
  }  # dimension attribute

  dimension_group: about__resource_ancestors__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "about"
    label: "about.resource_ancestors.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension about__resource_ancestors__attribute__creation_time

  dimension: attribute__labels {
    hidden: yes
  }  # dimension attribute__labels

  dimension_group: about__resource_ancestors__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "about"
    label: "about.resource_ancestors.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension about__resource_ancestors__attribute__last_update_time

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "about"
    label: "about.resource_ancestors.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension name

  dimension: product_object_id {
    type: string
    sql: ${TABLE}.product_object_id ;;
    group_label: "about"
    label: "about.resource_ancestors.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension product_object_id

}  # view udm_events__about__resource_ancestors

view: udm_events__about__user__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "about"
    label: "about.user.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "about"
    label: "about.user.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__about__user__attribute__labels

view: udm_events__about__user__attribute__permissions {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "about"
    label: "about.user.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__about__user__attribute__permissions

view: udm_events__about__user__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "about"
    label: "about.user.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "about"
    label: "about.user.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

}  # view udm_events__about__user__attribute__roles

view: udm_events__about__user__department {
  dimension: udm_events__about__user__department {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.user.department"
    view_label: "UDM"
    description: "User job department"
  }  # dimension udm_events__about__user__department
}  # view udm_events__about__user__department

view: udm_events__about__user__email_addresses {
  dimension: udm_events__about__user__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.user.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__about__user__email_addresses
}  # view udm_events__about__user__email_addresses

view: udm_events__about__user__group_identifiers {
  dimension: udm_events__about__user__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "about"
    label: "about.user.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__about__user__group_identifiers
}  # view udm_events__about__user__group_identifiers

view: udm_events__about {
  dimension: administrative_domain {
    type: string
    sql: ${TABLE}.administrative_domain ;;
    group_label: "about"
    label: "about.administrative_domain"
    view_label: "UDM"
    description: "Domain which the device belongs to (for example, the Microsoft Windows domain)."
  }  # dimension administrative_domain

  dimension: application {
    type: string
    sql: ${TABLE}.application ;;
    group_label: "about"
    label: "about.application"
    view_label: "UDM"
    description: "The name of an application or service. Some SSO solutions only capture the name of a target application such as \"Atlassian\" or \"Chronicle\"."
  }  # dimension application

  dimension: artifact {
    hidden: yes
  }  # dimension artifact

  dimension: artifact__prevalence {
    hidden: yes
  }  # dimension artifact__prevalence

  dimension: artifact__prevalence__day_count {
    type: number
    sql: ${TABLE}.artifact.prevalence.day_count ;;
    group_label: "about"
    label: "about.artifact.prevalence.day_count"
    view_label: "UDM"
    description: "The number of days over which rolling_max is calculated."
  }  # dimension artifact__prevalence__day_count

  dimension: asset {
    hidden: yes
  }  # dimension asset

  dimension: asset__asset_id {
    type: string
    sql: ${TABLE}.asset.asset_id ;;
    group_label: "about"
    label: "about.asset.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension asset__asset_id

  dimension: asset__attribute {
    hidden: yes
  }  # dimension asset__attribute

  dimension: asset__attribute__labels {
    hidden: yes
  }  # dimension asset__attribute__labels

  dimension: asset__attribute__permissions {
    hidden: yes
  }  # dimension asset__attribute__permissions

  dimension: asset__category {
    type: string
    sql: ${TABLE}.asset.category ;;
    group_label: "about"
    label: "about.asset.category"
    view_label: "UDM"
    description: "The category of the asset (e.g. \"End User Asset\", \"Workstation\", \"Server\")."
  }  # dimension asset__category

  dimension_group: about__asset__first_discover_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.asset.first_discover_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.asset.first_discover_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "about"
    label: "about.asset.first_discover_time"
    view_label: "UDM"
    description: "Time the asset was first discovered (by asset management/discoverability software)."
  }  # dimension about__asset__first_discover_time

  dimension: asset__hardware {
    hidden: yes
  }  # dimension asset__hardware

  dimension: asset__hostname {
    type: string
    sql: ${TABLE}.asset.hostname ;;
    group_label: "about"
    label: "about.asset.hostname"
    view_label: "UDM"
    description: "Asset hostname or domain name field."
  }  # dimension asset__hostname

  dimension: asset__ip {
    hidden: yes
  }  # dimension asset__ip

  dimension: asset__labels {
    hidden: yes
  }  # dimension asset__labels

  dimension_group: about__asset__last_boot_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.asset.last_boot_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.asset.last_boot_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "about"
    label: "about.asset.last_boot_time"
    view_label: "UDM"
    description: "Time the asset was last boot started."
  }  # dimension about__asset__last_boot_time

  dimension: asset__network_domain {
    type: string
    sql: ${TABLE}.asset.network_domain ;;
    group_label: "about"
    label: "about.asset.network_domain"
    view_label: "UDM"
    description: "The network domain of the asset (e.g. \"corp.acme.com\")"
  }  # dimension asset__network_domain

  dimension: asset__product_object_id {
    type: string
    sql: ${TABLE}.asset.product_object_id ;;
    group_label: "about"
    label: "about.asset.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID  or similar)."
  }  # dimension asset__product_object_id

  dimension: asset__type {
    type: number
    sql: ${TABLE}.asset.type ;;
    group_label: "about"
    label: "about.asset.type"
    view_label: "UDM"
    description: "The type of the asset (e.g. workstation or laptop or server)."
  }  # dimension asset__type

  dimension: asset__type_enum_name {
    type: string
    suggestions: ["IOT", "LAPTOP", "MOBILE", "NETWORK_ATTACHED_STORAGE", "PRINTER", "ROLE_UNSPECIFIED", "SCANNER", "SERVER", "TAPE_LIBRARY", "WORKSTATION"]
    sql: CASE ${TABLE}.asset.type WHEN 0 THEN 'ROLE_UNSPECIFIED' WHEN 1 THEN 'WORKSTATION' WHEN 2 THEN 'LAPTOP' WHEN 3 THEN 'IOT' WHEN 4 THEN 'NETWORK_ATTACHED_STORAGE' WHEN 5 THEN 'PRINTER' WHEN 6 THEN 'SCANNER' WHEN 7 THEN 'SERVER' WHEN 8 THEN 'TAPE_LIBRARY' WHEN 9 THEN 'MOBILE' END ;;
    group_label: "about"
    label: "about.asset.type_enum_name"
    view_label: "UDM"
    description: "The type of the asset (e.g. workstation or laptop or server)."
  }  # dimension asset__type_enum_name

  dimension: asset__vulnerabilities {
    hidden: yes
  }  # dimension asset__vulnerabilities

  dimension: asset_id {
    type: string
    sql: ${TABLE}.asset_id ;;
    group_label: "about"
    label: "about.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension asset_id

  dimension: cloud {
    hidden: yes
  }  # dimension cloud

  dimension: cloud__vpc {
    hidden: yes
  }  # dimension cloud__vpc

  dimension: cloud__vpc__id {
    type: string
    sql: ${TABLE}.cloud.vpc.id ;;
    group_label: "about"
    group_item_label: "about.cloud.vpc.id [D]"
    label: "about.cloud.vpc.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension cloud__vpc__id

  dimension: domain {
    hidden: yes
  }  # dimension domain

  dimension: domain__name {
    type: string
    sql: ${TABLE}.domain.name ;;
    group_label: "about"
    label: "about.domain.name"
    view_label: "UDM"
    description: "The domain name."
  }  # dimension domain__name

  dimension: email {
    type: string
    sql: ${TABLE}.email ;;
    group_label: "about"
    label: "about.email"
    view_label: "UDM"
    description: "Email address. Only filled in for security_result.about"
  }  # dimension email

  dimension: file {
    hidden: yes
  }  # dimension file

  dimension: file__capabilities_tags {
    hidden: yes
  }  # dimension file__capabilities_tags

  dimension: file__file_type {
    type: number
    sql: ${TABLE}.file.file_type ;;
    group_label: "about"
    label: "about.file.file_type"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension file__file_type

  dimension: file__file_type_enum_name {
    type: string
    suggestions: ["FILE_TYPE_ACE", "FILE_TYPE_ANDROID", "FILE_TYPE_APPLE", "FILE_TYPE_APPLEDOUBLE", "FILE_TYPE_APPLESCRIPT", "FILE_TYPE_APPLESCRIPT_COMPILED", "FILE_TYPE_APPLESINGLE", "FILE_TYPE_APPLE_PLIST", "FILE_TYPE_ARC", "FILE_TYPE_ARJ", "FILE_TYPE_ASD", "FILE_TYPE_ASF", "FILE_TYPE_AVI", "FILE_TYPE_AWK", "FILE_TYPE_BLACKHOLE", "FILE_TYPE_BMP", "FILE_TYPE_BZIP", "FILE_TYPE_C", "FILE_TYPE_CAB", "FILE_TYPE_CAP", "FILE_TYPE_CHM", "FILE_TYPE_COFF", "FILE_TYPE_COOKIE", "FILE_TYPE_CPP", "FILE_TYPE_CRX", "FILE_TYPE_DEB", "FILE_TYPE_DIB", "FILE_TYPE_DIVX", "FILE_TYPE_DMG", "FILE_TYPE_DOC", "FILE_TYPE_DOCX", "FILE_TYPE_DOS_COM", "FILE_TYPE_DOS_EXE", "FILE_TYPE_DYALOG", "FILE_TYPE_DZIP", "FILE_TYPE_EBOOK", "FILE_TYPE_ELF", "FILE_TYPE_EMAIL_TYPE", "FILE_TYPE_EMF", "FILE_TYPE_EOT", "FILE_TYPE_EPS", "FILE_TYPE_FLA", "FILE_TYPE_FLAC", "FILE_TYPE_FLC", "FILE_TYPE_FLI", "FILE_TYPE_FLV", "FILE_TYPE_FORTRAN", "FILE_TYPE_FPX", "FILE_TYPE_GIF", "FILE_TYPE_GIMP", "FILE_TYPE_GUL", "FILE_TYPE_GZIP", "FILE_TYPE_HTML", "FILE_TYPE_HWP", "FILE_TYPE_ICO", "FILE_TYPE_IN_DESIGN", "FILE_TYPE_IPHONE", "FILE_TYPE_ISOIMAGE", "FILE_TYPE_JAR", "FILE_TYPE_JAVA", "FILE_TYPE_JAVASCRIPT", "FILE_TYPE_JAVA_BYTECODE", "FILE_TYPE_JNG", "FILE_TYPE_JPEG", "FILE_TYPE_KGB", "FILE_TYPE_LATEX", "FILE_TYPE_LINUX", "FILE_TYPE_LINUX_KERNEL", "FILE_TYPE_LNK", "FILE_TYPE_MACH_O", "FILE_TYPE_MACINTOSH", "FILE_TYPE_MACINTOSH_HFS", "FILE_TYPE_MACINTOSH_LIB", "FILE_TYPE_MIDI", "FILE_TYPE_MOV", "FILE_TYPE_MP3", "FILE_TYPE_MP4", "FILE_TYPE_MPEG", "FILE_TYPE_MSCOMPRESS", "FILE_TYPE_MSI", "FILE_TYPE_NE_DLL", "FILE_TYPE_NE_EXE", "FILE_TYPE_ODF", "FILE_TYPE_ODG", "FILE_TYPE_ODP", "FILE_TYPE_ODS", "FILE_TYPE_ODT", "FILE_TYPE_OGG", "FILE_TYPE_OUTLOOK", "FILE_TYPE_PALMOS", "FILE_TYPE_PASCAL", "FILE_TYPE_PDF", "FILE_TYPE_PERL", "FILE_TYPE_PE_DLL", "FILE_TYPE_PE_EXE", "FILE_TYPE_PHP", "FILE_TYPE_PKG", "FILE_TYPE_PNG", "FILE_TYPE_POWERSHELL", "FILE_TYPE_PPSX", "FILE_TYPE_PPT", "FILE_TYPE_PPTX", "FILE_TYPE_PS", "FILE_TYPE_PSD", "FILE_TYPE_PYTHON", "FILE_TYPE_QUICKTIME", "FILE_TYPE_RAR", "FILE_TYPE_RM", "FILE_TYPE_ROM", "FILE_TYPE_RPM", "FILE_TYPE_RTF", "FILE_TYPE_RUBY", "FILE_TYPE_RZIP", "FILE_TYPE_SCRIPT", "FILE_TYPE_SEVENZIP", "FILE_TYPE_SHELLSCRIPT", "FILE_TYPE_SVG", "FILE_TYPE_SWF", "FILE_TYPE_SYMBIAN", "FILE_TYPE_T3GP", "FILE_TYPE_TAR", "FILE_TYPE_TARGA", "FILE_TYPE_TEXT", "FILE_TYPE_TIFF", "FILE_TYPE_TORRENT", "FILE_TYPE_TTF", "FILE_TYPE_UNSPECIFIED", "FILE_TYPE_VBA", "FILE_TYPE_WAV", "FILE_TYPE_WEBP", "FILE_TYPE_WINCE", "FILE_TYPE_WMA", "FILE_TYPE_WMV", "FILE_TYPE_WOFF", "FILE_TYPE_XLS", "FILE_TYPE_XLSX", "FILE_TYPE_XML", "FILE_TYPE_XPI", "FILE_TYPE_XWD", "FILE_TYPE_ZIP", "FILE_TYPE_ZLIB"]
    sql: CASE ${TABLE}.file.file_type WHEN 0 THEN 'FILE_TYPE_UNSPECIFIED' WHEN 1 THEN 'FILE_TYPE_PE_EXE' WHEN 2 THEN 'FILE_TYPE_PE_DLL' WHEN 3 THEN 'FILE_TYPE_MSI' WHEN 10 THEN 'FILE_TYPE_NE_EXE' WHEN 11 THEN 'FILE_TYPE_NE_DLL' WHEN 20 THEN 'FILE_TYPE_DOS_EXE' WHEN 21 THEN 'FILE_TYPE_DOS_COM' WHEN 30 THEN 'FILE_TYPE_COFF' WHEN 31 THEN 'FILE_TYPE_ELF' WHEN 32 THEN 'FILE_TYPE_LINUX_KERNEL' WHEN 33 THEN 'FILE_TYPE_RPM' WHEN 34 THEN 'FILE_TYPE_LINUX' WHEN 35 THEN 'FILE_TYPE_MACH_O' WHEN 36 THEN 'FILE_TYPE_JAVA_BYTECODE' WHEN 37 THEN 'FILE_TYPE_DMG' WHEN 38 THEN 'FILE_TYPE_DEB' WHEN 39 THEN 'FILE_TYPE_PKG' WHEN 50 THEN 'FILE_TYPE_LNK' WHEN 100 THEN 'FILE_TYPE_JPEG' WHEN 101 THEN 'FILE_TYPE_TIFF' WHEN 102 THEN 'FILE_TYPE_GIF' WHEN 103 THEN 'FILE_TYPE_PNG' WHEN 104 THEN 'FILE_TYPE_BMP' WHEN 105 THEN 'FILE_TYPE_GIMP' WHEN 106 THEN 'FILE_TYPE_IN_DESIGN' WHEN 107 THEN 'FILE_TYPE_PSD' WHEN 108 THEN 'FILE_TYPE_TARGA' WHEN 109 THEN 'FILE_TYPE_XWD' WHEN 110 THEN 'FILE_TYPE_DIB' WHEN 111 THEN 'FILE_TYPE_JNG' WHEN 112 THEN 'FILE_TYPE_ICO' WHEN 113 THEN 'FILE_TYPE_FPX' WHEN 114 THEN 'FILE_TYPE_EPS' WHEN 115 THEN 'FILE_TYPE_SVG' WHEN 116 THEN 'FILE_TYPE_EMF' WHEN 117 THEN 'FILE_TYPE_WEBP' WHEN 150 THEN 'FILE_TYPE_OGG' WHEN 151 THEN 'FILE_TYPE_FLC' WHEN 152 THEN 'FILE_TYPE_FLI' WHEN 153 THEN 'FILE_TYPE_MP3' WHEN 154 THEN 'FILE_TYPE_FLAC' WHEN 155 THEN 'FILE_TYPE_WAV' WHEN 156 THEN 'FILE_TYPE_MIDI' WHEN 157 THEN 'FILE_TYPE_AVI' WHEN 158 THEN 'FILE_TYPE_MPEG' WHEN 159 THEN 'FILE_TYPE_QUICKTIME' WHEN 160 THEN 'FILE_TYPE_ASF' WHEN 161 THEN 'FILE_TYPE_DIVX' WHEN 162 THEN 'FILE_TYPE_FLV' WHEN 163 THEN 'FILE_TYPE_WMA' WHEN 164 THEN 'FILE_TYPE_WMV' WHEN 165 THEN 'FILE_TYPE_RM' WHEN 166 THEN 'FILE_TYPE_MOV' WHEN 167 THEN 'FILE_TYPE_MP4' WHEN 168 THEN 'FILE_TYPE_T3GP' WHEN 200 THEN 'FILE_TYPE_PDF' WHEN 201 THEN 'FILE_TYPE_PS' WHEN 202 THEN 'FILE_TYPE_DOC' WHEN 203 THEN 'FILE_TYPE_DOCX' WHEN 204 THEN 'FILE_TYPE_PPT' WHEN 205 THEN 'FILE_TYPE_PPTX' WHEN 209 THEN 'FILE_TYPE_PPSX' WHEN 206 THEN 'FILE_TYPE_XLS' WHEN 207 THEN 'FILE_TYPE_XLSX' WHEN 208 THEN 'FILE_TYPE_RTF' WHEN 250 THEN 'FILE_TYPE_ODP' WHEN 251 THEN 'FILE_TYPE_ODS' WHEN 252 THEN 'FILE_TYPE_ODT' WHEN 253 THEN 'FILE_TYPE_HWP' WHEN 254 THEN 'FILE_TYPE_GUL' WHEN 255 THEN 'FILE_TYPE_ODF' WHEN 256 THEN 'FILE_TYPE_ODG' WHEN 260 THEN 'FILE_TYPE_EBOOK' WHEN 261 THEN 'FILE_TYPE_LATEX' WHEN 262 THEN 'FILE_TYPE_TTF' WHEN 263 THEN 'FILE_TYPE_EOT' WHEN 264 THEN 'FILE_TYPE_WOFF' WHEN 265 THEN 'FILE_TYPE_CHM' WHEN 300 THEN 'FILE_TYPE_ZIP' WHEN 301 THEN 'FILE_TYPE_GZIP' WHEN 302 THEN 'FILE_TYPE_BZIP' WHEN 303 THEN 'FILE_TYPE_RZIP' WHEN 304 THEN 'FILE_TYPE_DZIP' WHEN 305 THEN 'FILE_TYPE_SEVENZIP' WHEN 306 THEN 'FILE_TYPE_CAB' WHEN 307 THEN 'FILE_TYPE_JAR' WHEN 308 THEN 'FILE_TYPE_RAR' WHEN 309 THEN 'FILE_TYPE_MSCOMPRESS' WHEN 310 THEN 'FILE_TYPE_ACE' WHEN 311 THEN 'FILE_TYPE_ARC' WHEN 312 THEN 'FILE_TYPE_ARJ' WHEN 313 THEN 'FILE_TYPE_ASD' WHEN 314 THEN 'FILE_TYPE_BLACKHOLE' WHEN 315 THEN 'FILE_TYPE_KGB' WHEN 316 THEN 'FILE_TYPE_ZLIB' WHEN 317 THEN 'FILE_TYPE_TAR' WHEN 400 THEN 'FILE_TYPE_TEXT' WHEN 401 THEN 'FILE_TYPE_SCRIPT' WHEN 402 THEN 'FILE_TYPE_PHP' WHEN 403 THEN 'FILE_TYPE_PYTHON' WHEN 404 THEN 'FILE_TYPE_PERL' WHEN 405 THEN 'FILE_TYPE_RUBY' WHEN 406 THEN 'FILE_TYPE_C' WHEN 407 THEN 'FILE_TYPE_CPP' WHEN 408 THEN 'FILE_TYPE_JAVA' WHEN 409 THEN 'FILE_TYPE_SHELLSCRIPT' WHEN 410 THEN 'FILE_TYPE_PASCAL' WHEN 411 THEN 'FILE_TYPE_AWK' WHEN 412 THEN 'FILE_TYPE_DYALOG' WHEN 413 THEN 'FILE_TYPE_FORTRAN' WHEN 414 THEN 'FILE_TYPE_JAVASCRIPT' WHEN 415 THEN 'FILE_TYPE_POWERSHELL' WHEN 416 THEN 'FILE_TYPE_VBA' WHEN 500 THEN 'FILE_TYPE_SYMBIAN' WHEN 501 THEN 'FILE_TYPE_PALMOS' WHEN 502 THEN 'FILE_TYPE_WINCE' WHEN 503 THEN 'FILE_TYPE_ANDROID' WHEN 504 THEN 'FILE_TYPE_IPHONE' WHEN 600 THEN 'FILE_TYPE_HTML' WHEN 601 THEN 'FILE_TYPE_XML' WHEN 602 THEN 'FILE_TYPE_SWF' WHEN 603 THEN 'FILE_TYPE_FLA' WHEN 604 THEN 'FILE_TYPE_COOKIE' WHEN 605 THEN 'FILE_TYPE_TORRENT' WHEN 606 THEN 'FILE_TYPE_EMAIL_TYPE' WHEN 607 THEN 'FILE_TYPE_OUTLOOK' WHEN 700 THEN 'FILE_TYPE_CAP' WHEN 800 THEN 'FILE_TYPE_ISOIMAGE' WHEN 1000 THEN 'FILE_TYPE_APPLE' WHEN 1001 THEN 'FILE_TYPE_MACINTOSH' WHEN 1002 THEN 'FILE_TYPE_APPLESINGLE' WHEN 1003 THEN 'FILE_TYPE_APPLEDOUBLE' WHEN 1004 THEN 'FILE_TYPE_MACINTOSH_HFS' WHEN 1005 THEN 'FILE_TYPE_APPLE_PLIST' WHEN 1006 THEN 'FILE_TYPE_MACINTOSH_LIB' WHEN 1007 THEN 'FILE_TYPE_APPLESCRIPT' WHEN 1008 THEN 'FILE_TYPE_APPLESCRIPT_COMPILED' WHEN 1100 THEN 'FILE_TYPE_CRX' WHEN 1101 THEN 'FILE_TYPE_XPI' WHEN 1200 THEN 'FILE_TYPE_ROM' END ;;
    group_label: "about"
    label: "about.file.file_type_enum_name"
    view_label: "UDM"
    description: "FileType field."
  }  # dimension file__file_type_enum_name

  dimension: file__full_path {
    type: string
    sql: ${TABLE}.file.full_path ;;
    group_label: "about"
    label: "about.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension file__full_path

  dimension_group: about__file__last_modification_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.file.last_modification_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.file.last_modification_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "about"
    label: "about.file.last_modification_time"
    view_label: "UDM"
    description: "Timestamp when the file was last updated."
  }  # dimension about__file__last_modification_time

  dimension: file__md5 {
    type: string
    sql: ${TABLE}.file.md5 ;;
    group_label: "about"
    label: "about.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension file__md5

  dimension: file__mime_type {
    type: string
    sql: ${TABLE}.file.mime_type ;;
    group_label: "about"
    label: "about.file.mime_type"
    view_label: "UDM"
    description: "The MIME (Multipurpose Internet Mail Extensions) type of the file, for example \"PE\", \"PDF\", \"powershell script\", etc."
  }  # dimension file__mime_type

  dimension: file__names {
    hidden: yes
  }  # dimension file__names

  dimension: file__sha1 {
    type: string
    sql: ${TABLE}.file.sha1 ;;
    group_label: "about"
    label: "about.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension file__sha1

  dimension: file__sha256 {
    type: string
    sql: ${TABLE}.file.sha256 ;;
    group_label: "about"
    label: "about.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension file__sha256

  dimension: file__size {
    type: number
    sql: ${TABLE}.file.size ;;
    group_label: "about"
    label: "about.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension file__size

  dimension: group {
    hidden: yes
  }  # dimension group

  dimension: group__group_display_name {
    type: string
    sql: ${TABLE}.group.group_display_name ;;
    group_label: "about"
    label: "about.group.group_display_name"
    view_label: "UDM"
    description: "Group display name. e.g. \"Finance\"."
  }  # dimension group__group_display_name

  dimension: group__product_object_id {
    type: string
    sql: ${TABLE}.group.product_object_id ;;
    group_label: "about"
    label: "about.group.product_object_id"
    view_label: "UDM"
    description: "Product globally unique user object identifier, such as an LDAP Object Identifier."
  }  # dimension group__product_object_id

  dimension: hostname {
    type: string
    sql: ${TABLE}.hostname ;;
    group_label: "about"
    label: "about.hostname"
    view_label: "UDM"
    description: "Client hostname or domain name field. Hostname also doubles as the domain for remote entities."
  }  # dimension hostname

  dimension: investigation {
    hidden: yes
  }  # dimension investigation

  dimension: investigation__comments {
    hidden: yes
  }  # dimension investigation__comments

  dimension: investigation__root_cause {
    type: string
    sql: ${TABLE}.investigation.root_cause ;;
    group_label: "about"
    label: "about.investigation.root_cause"
    view_label: "UDM"
    description: "Root cause of the Alert or Finding set by analyst."
  }  # dimension investigation__root_cause

  dimension: ip {
    hidden: yes
  }  # dimension ip

  dimension: ip_geo_artifact {
    hidden: yes
  }  # dimension ip_geo_artifact

  dimension: labels {
    hidden: yes
  }  # dimension labels

  dimension: location {
    hidden: yes
  }  # dimension location

  dimension: location__city {
    type: string
    sql: ${TABLE}.location.city ;;
    group_label: "about"
    label: "about.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension location__city

  dimension: location__country_or_region {
    type: string
    sql: ${TABLE}.location.country_or_region ;;
    group_label: "about"
    label: "about.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension location__country_or_region

  dimension: location__name {
    type: string
    sql: ${TABLE}.location.name ;;
    group_label: "about"
    label: "about.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension location__name

  dimension: location__region_coordinates {
    type: location
    sql_latitude: ${TABLE}.location.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.location.region_coordinates.longitude ;;
    group_label: "about"
    group_item_label: "about.location.region_coordinates [L]"
    label: "about.location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [L]: This is a location field and can be used in maps."
  }  # dimension location__region_coordinates

  dimension: location__region_latitude {
    type: number
    sql: ${TABLE}.location.region_latitude ;;
    group_label: "about"
    group_item_label: "about.location.region_latitude [D]"
    label: "about.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_latitude

  dimension: location__region_longitude {
    type: number
    sql: ${TABLE}.location.region_longitude ;;
    group_label: "about"
    group_item_label: "about.location.region_longitude [D]"
    label: "about.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_longitude

  dimension: location__location {
    type: location
    sql_latitude: ${TABLE}.location.region_latitude ;;
    sql_longitude: ${TABLE}.location.region_longitude ;;
    group_label: "about"
    group_item_label: "about.location.location [D][L]"
    label: "about.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension location__location

  dimension: location__state {
    type: string
    sql: ${TABLE}.location.state ;;
    group_label: "about"
    label: "about.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension location__state

  dimension: mac {
    hidden: yes
  }  # dimension mac

  dimension: namespace {
    type: string
    sql: ${TABLE}.namespace ;;
    group_label: "about"
    label: "about.namespace"
    view_label: "UDM"
    description: "Namespace which the device belongs to (e.g. AD forest) Uses for this field include Microsoft Windows AD forest, name of subsidiary or acquisition, etc."
  }  # dimension namespace

  dimension: nat_ip {
    hidden: yes
  }  # dimension nat_ip

  dimension: platform {
    type: number
    sql: ${TABLE}.platform ;;
    group_label: "about"
    label: "about.platform"
    view_label: "UDM"
    description: "Platform."
  }  # dimension platform

  dimension: platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "about"
    label: "about.platform_enum_name"
    view_label: "UDM"
    description: "Platform."
  }  # dimension platform_enum_name

  dimension: platform_patch_level {
    type: string
    sql: ${TABLE}.platform_patch_level ;;
    group_label: "about"
    label: "about.platform_patch_level"
    view_label: "UDM"
    description: "Platform patch level. For example, \"Build 17134.48\""
  }  # dimension platform_patch_level

  dimension: platform_version {
    type: string
    sql: ${TABLE}.platform_version ;;
    group_label: "about"
    label: "about.platform_version"
    view_label: "UDM"
    description: "Platform version. For example, \"Microsoft Windows 1803\"."
  }  # dimension platform_version

  dimension: port {
    type: number
    value_format: "#"
    sql: ${TABLE}.port ;;
    group_label: "about"
    label: "about.port"
    view_label: "UDM"
    description: "Source or destination network port number when a specific network connection is described within an event."
  }  # dimension port

  dimension: process {
    hidden: yes
  }  # dimension process

  dimension: process__command_line {
    type: string
    sql: ${TABLE}.process.command_line ;;
    group_label: "about"
    label: "about.process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension process__command_line

  dimension: process__file {
    hidden: yes
  }  # dimension process__file

  dimension: process__file__full_path {
    type: string
    sql: ${TABLE}.process.file.full_path ;;
    group_label: "about"
    label: "about.process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension process__file__full_path

  dimension: process__file__md5 {
    type: string
    sql: ${TABLE}.process.file.md5 ;;
    group_label: "about"
    label: "about.process.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension process__file__md5

  dimension: process__parent_pid {
    type: string
    sql: ${TABLE}.process.parent_pid ;;
    group_label: "about"
    group_item_label: "about.process.parent_pid [D]"
    label: "about.process.parent_pid"
    view_label: "UDM"
    description: "The ID of the parent process. Deprecated: use parent_process.pid instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension process__parent_pid

  dimension: process__parent_process {
    hidden: yes
  }  # dimension process__parent_process

  dimension: process__parent_process__command_line {
    type: string
    sql: ${TABLE}.process.parent_process.command_line ;;
    group_label: "about"
    label: "about.process.parent_process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension process__parent_process__command_line

  dimension: process__parent_process__file {
    hidden: yes
  }  # dimension process__parent_process__file

  dimension: process__parent_process__file__md5 {
    type: string
    sql: ${TABLE}.process.parent_process.file.md5 ;;
    group_label: "about"
    label: "about.process.parent_process.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension process__parent_process__file__md5

  dimension: process__parent_process__file__sha256 {
    type: string
    sql: ${TABLE}.process.parent_process.file.sha256 ;;
    group_label: "about"
    label: "about.process.parent_process.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension process__parent_process__file__sha256

  dimension: process__parent_process__pid {
    type: string
    sql: ${TABLE}.process.parent_process.pid ;;
    group_label: "about"
    label: "about.process.parent_process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension process__parent_process__pid

  dimension: process__parent_process__product_specific_process_id {
    type: string
    sql: ${TABLE}.process.parent_process.product_specific_process_id ;;
    group_label: "about"
    label: "about.process.parent_process.product_specific_process_id"
    view_label: "UDM"
    description: "A product specific process id."
  }  # dimension process__parent_process__product_specific_process_id

  dimension: process__pid {
    type: string
    sql: ${TABLE}.process.pid ;;
    group_label: "about"
    label: "about.process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension process__pid

  dimension: registry {
    hidden: yes
  }  # dimension registry

  dimension: registry__registry_key {
    type: string
    sql: ${TABLE}.registry.registry_key ;;
    group_label: "about"
    label: "about.registry.registry_key"
    view_label: "UDM"
    description: "Registry key associated with an application or system component (e.g., HKEY_, HKCU\Environment...)."
  }  # dimension registry__registry_key

  dimension: resource {
    hidden: yes
  }  # dimension resource

  dimension: resource__attribute {
    hidden: yes
  }  # dimension resource__attribute

  dimension: resource__attribute__cloud {
    hidden: yes
  }  # dimension resource__attribute__cloud

  dimension: resource__attribute__cloud__availability_zone {
    type: string
    sql: ${TABLE}.resource.attribute.cloud.availability_zone ;;
    group_label: "about"
    label: "about.resource.attribute.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name)."
  }  # dimension resource__attribute__cloud__availability_zone

  dimension_group: about__resource__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.resource.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.resource.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "about"
    label: "about.resource.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension about__resource__attribute__creation_time

  dimension: resource__attribute__labels {
    hidden: yes
  }  # dimension resource__attribute__labels

  dimension_group: about__resource__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.resource.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.resource.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "about"
    label: "about.resource.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension about__resource__attribute__last_update_time

  dimension: resource__attribute__permissions {
    hidden: yes
  }  # dimension resource__attribute__permissions

  dimension: resource__id {
    type: string
    sql: ${TABLE}.resource.id ;;
    group_label: "about"
    group_item_label: "about.resource.id [D]"
    label: "about.resource.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension resource__id

  dimension: resource__name {
    type: string
    sql: ${TABLE}.resource.name ;;
    group_label: "about"
    label: "about.resource.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension resource__name

  dimension: resource__parent {
    type: string
    sql: ${TABLE}.resource.parent ;;
    group_label: "about"
    group_item_label: "about.resource.parent [D]"
    label: "about.resource.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension resource__parent

  dimension: resource__product_object_id {
    type: string
    sql: ${TABLE}.resource.product_object_id ;;
    group_label: "about"
    label: "about.resource.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension resource__product_object_id

  dimension: resource__resource_subtype {
    type: string
    sql: ${TABLE}.resource.resource_subtype ;;
    group_label: "about"
    label: "about.resource.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension resource__resource_subtype

  dimension: resource__resource_type {
    type: number
    sql: ${TABLE}.resource.resource_type ;;
    group_label: "about"
    label: "about.resource.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource__resource_type

  dimension: resource__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.resource.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "about"
    label: "about.resource.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource__resource_type_enum_name

  dimension: resource__type {
    type: string
    sql: ${TABLE}.resource.type ;;
    group_label: "about"
    group_item_label: "about.resource.type [D]"
    label: "about.resource.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension resource__type

  dimension: resource_ancestors {
    hidden: yes
  }  # dimension resource_ancestors

  dimension: url {
    type: string
    sql: ${TABLE}.url ;;
    group_label: "about"
    label: "about.url"
    view_label: "UDM"
    description: "The URL."
  }  # dimension url

  dimension: user {
    hidden: yes
  }  # dimension user

  dimension: user__attribute {
    hidden: yes
  }  # dimension user__attribute

  dimension: user__attribute__labels {
    hidden: yes
  }  # dimension user__attribute__labels

  dimension: user__attribute__permissions {
    hidden: yes
  }  # dimension user__attribute__permissions

  dimension: user__attribute__roles {
    hidden: yes
  }  # dimension user__attribute__roles

  dimension: user__department {
    hidden: yes
  }  # dimension user__department

  dimension: user__email_addresses {
    hidden: yes
  }  # dimension user__email_addresses

  dimension: user__group_identifiers {
    hidden: yes
  }  # dimension user__group_identifiers

  dimension: user__groupid {
    type: string
    sql: ${TABLE}.user.groupid ;;
    group_label: "about"
    group_item_label: "about.user.groupid [D]"
    label: "about.user.groupid"
    view_label: "UDM"
    description: "The ID of the group that the user belongs to. Deprecated in favor of the repeated group_identifiers field. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension user__groupid

  dimension: user__product_object_id {
    type: string
    sql: ${TABLE}.user.product_object_id ;;
    group_label: "about"
    label: "about.user.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension user__product_object_id

  dimension: user__user_display_name {
    type: string
    sql: ${TABLE}.user.user_display_name ;;
    group_label: "about"
    label: "about.user.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension user__user_display_name

  dimension: user__userid {
    type: string
    sql: ${TABLE}.user.userid ;;
    group_label: "about"
    label: "about.user.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension user__userid

  dimension: user__windows_sid {
    type: string
    sql: ${TABLE}.user.windows_sid ;;
    group_label: "about"
    label: "about.user.windows_sid"
    view_label: "UDM"
    description: "The Microsoft Windows SID of the user."
  }  # dimension user__windows_sid

}  # view udm_events__about

view: udm_events__additional__fields__value__list_value__values__struct_value__fields {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "additional"
    label: "additional.fields.value.list_value.values.struct_value.fields.key"
    view_label: "UDM"
  }  # dimension key

}  # view udm_events__additional__fields__value__list_value__values__struct_value__fields

view: udm_events__additional__fields__value__list_value__values {
  dimension: number_value {
    type: number
    sql: ${TABLE}.number_value ;;
    group_label: "additional"
    label: "additional.fields.value.list_value.values.number_value"
    view_label: "UDM"
  }  # dimension number_value

  dimension: string_value {
    type: string
    sql: ${TABLE}.string_value ;;
    group_label: "additional"
    label: "additional.fields.value.list_value.values.string_value"
    view_label: "UDM"
  }  # dimension string_value

  dimension: struct_value {
    hidden: yes
  }  # dimension struct_value

  dimension: struct_value__fields {
    hidden: yes
  }  # dimension struct_value__fields

}  # view udm_events__additional__fields__value__list_value__values

view: udm_events__additional__fields__value__struct_value__fields {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "additional"
    label: "additional.fields.value.struct_value.fields.key"
    view_label: "UDM"
  }  # dimension key

}  # view udm_events__additional__fields__value__struct_value__fields

view: udm_events__additional__fields {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "additional"
    label: "additional.fields.key"
    view_label: "UDM"
  }  # dimension key

  dimension: value {
    hidden: yes
  }  # dimension value

  dimension: value__bool_value {
    type: yesno
    sql: ${TABLE}.value.bool_value ;;
    group_label: "additional"
    label: "additional.fields.value.bool_value"
    view_label: "UDM"
  }  # dimension value__bool_value

  dimension: value__list_value {
    hidden: yes
  }  # dimension value__list_value

  dimension: value__list_value__values {
    hidden: yes
  }  # dimension value__list_value__values

  dimension: value__null_value {
    type: number
    sql: ${TABLE}.value.null_value ;;
    group_label: "additional"
    label: "additional.fields.value.null_value"
    view_label: "UDM"
  }  # dimension value__null_value

  dimension: value__null_value_enum_name {
    type: string
    suggestions: ["NULL_VALUE"]
    sql: CASE ${TABLE}.value.null_value WHEN 0 THEN 'NULL_VALUE' END ;;
    group_label: "additional"
    label: "additional.fields.value.null_value_enum_name"
    view_label: "UDM"
  }  # dimension value__null_value_enum_name

  dimension: value__number_value {
    type: number
    sql: ${TABLE}.value.number_value ;;
    group_label: "additional"
    label: "additional.fields.value.number_value"
    view_label: "UDM"
  }  # dimension value__number_value

  dimension: value__string_value {
    type: string
    sql: ${TABLE}.value.string_value ;;
    group_label: "additional"
    label: "additional.fields.value.string_value"
    view_label: "UDM"
  }  # dimension value__string_value

  dimension: value__struct_value {
    hidden: yes
  }  # dimension value__struct_value

  dimension: value__struct_value__fields {
    hidden: yes
  }  # dimension value__struct_value__fields

}  # view udm_events__additional__fields

view: udm_events__extensions__auth__mechanism {
  dimension: udm_events__extensions__auth__mechanism {
    type: number
    sql: ${TABLE} ;;
    group_label: "extensions"
    label: "extensions.auth.mechanism"
    view_label: "UDM"
    description: "The authentication mechanism."
  }  # dimension udm_events__extensions__auth__mechanism
}  # view udm_events__extensions__auth__mechanism

view: udm_events__extensions__auth__mechanism_enum_name {
  dimension: udm_events__extensions__auth__mechanism_enum_name {
    type: string
    suggestions: ["BADGE_READER", "BATCH", "CACHED_INTERACTIVE", "CACHED_REMOTE_INTERACTIVE", "CACHED_UNLOCK", "HARDWARE_KEY", "INTERACTIVE", "LOCAL", "MECHANISM_OTHER", "MECHANISM_UNSPECIFIED", "NETWORK", "NETWORK_CLEAR_TEXT", "NEW_CREDENTIALS", "OTP", "REMOTE", "REMOTE_INTERACTIVE", "SERVICE", "UNLOCK", "USERNAME_PASSWORD"]
    sql: CASE ${TABLE} WHEN 0 THEN 'MECHANISM_UNSPECIFIED' WHEN 1 THEN 'USERNAME_PASSWORD' WHEN 2 THEN 'OTP' WHEN 3 THEN 'HARDWARE_KEY' WHEN 4 THEN 'LOCAL' WHEN 5 THEN 'REMOTE' WHEN 6 THEN 'REMOTE_INTERACTIVE' WHEN 7 THEN 'MECHANISM_OTHER' WHEN 8 THEN 'BADGE_READER' WHEN 9 THEN 'NETWORK' WHEN 10 THEN 'BATCH' WHEN 11 THEN 'SERVICE' WHEN 12 THEN 'UNLOCK' WHEN 13 THEN 'NETWORK_CLEAR_TEXT' WHEN 14 THEN 'NEW_CREDENTIALS' WHEN 15 THEN 'INTERACTIVE' WHEN 16 THEN 'CACHED_INTERACTIVE' WHEN 17 THEN 'CACHED_REMOTE_INTERACTIVE' WHEN 18 THEN 'CACHED_UNLOCK' END ;;
    group_label: "extensions"
    label: "extensions.auth.mechanism_enum_name"
    view_label: "UDM"
    description: "The authentication mechanism."
  }  # dimension udm_events__extensions__auth__mechanism_enum_name
}  # view udm_events__extensions__auth__mechanism_enum_name

view: udm_events__extensions__vulns__vulnerabilities__about__asset__ip {
  dimension: udm_events__extensions__vulns__vulnerabilities__about__asset__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.asset.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with an asset."
  }  # dimension udm_events__extensions__vulns__vulnerabilities__about__asset__ip
}  # view udm_events__extensions__vulns__vulnerabilities__about__asset__ip

view: udm_events__extensions__vulns__vulnerabilities__about__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "extensions"
    group_item_label: "extensions.vulns.vulnerabilities.about.labels.key [D]"
    label: "extensions.vulns.vulnerabilities.about.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "extensions"
    group_item_label: "extensions.vulns.vulnerabilities.about.labels.value [D]"
    label: "extensions.vulns.vulnerabilities.about.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__extensions__vulns__vulnerabilities__about__labels

view: udm_events__extensions__vulns__vulnerabilities__about__resource__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.resource.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.resource.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__extensions__vulns__vulnerabilities__about__resource__attribute__labels

view: udm_events__extensions__vulns__vulnerabilities {
  dimension: about {
    hidden: yes
  }  # dimension about

  dimension: about__application {
    type: string
    sql: ${TABLE}.about.application ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.application"
    view_label: "UDM"
    description: "The name of an application or service. Some SSO solutions only capture the name of a target application such as \"Atlassian\" or \"Chronicle\"."
  }  # dimension about__application

  dimension: about__asset {
    hidden: yes
  }  # dimension about__asset

  dimension: about__asset__hostname {
    type: string
    sql: ${TABLE}.about.asset.hostname ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.asset.hostname"
    view_label: "UDM"
    description: "Asset hostname or domain name field."
  }  # dimension about__asset__hostname

  dimension: about__asset__ip {
    hidden: yes
  }  # dimension about__asset__ip

  dimension: about__asset__platform_software {
    hidden: yes
  }  # dimension about__asset__platform_software

  dimension: about__asset__platform_software__platform {
    type: number
    sql: ${TABLE}.about.asset.platform_software.platform ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.asset.platform_software.platform"
    view_label: "UDM"
    description: "The platform operating system."
  }  # dimension about__asset__platform_software__platform

  dimension: about__asset__platform_software__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.about.asset.platform_software.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.asset.platform_software.platform_enum_name"
    view_label: "UDM"
    description: "The platform operating system."
  }  # dimension about__asset__platform_software__platform_enum_name

  dimension: about__asset__product_object_id {
    type: string
    sql: ${TABLE}.about.asset.product_object_id ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.asset.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID  or similar)."
  }  # dimension about__asset__product_object_id

  dimension: about__cloud {
    hidden: yes
  }  # dimension about__cloud

  dimension: about__cloud__availability_zone {
    type: string
    sql: ${TABLE}.about.cloud.availability_zone ;;
    group_label: "extensions"
    group_item_label: "extensions.vulns.vulnerabilities.about.cloud.availability_zone [D]"
    label: "extensions.vulns.vulnerabilities.about.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__availability_zone

  dimension: about__cloud__environment {
    type: number
    sql: ${TABLE}.about.cloud.environment ;;
    group_label: "extensions"
    group_item_label: "extensions.vulns.vulnerabilities.about.cloud.environment [D]"
    label: "extensions.vulns.vulnerabilities.about.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__environment

  dimension: about__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.about.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "extensions"
    group_item_label: "extensions.vulns.vulnerabilities.about.cloud.environment_enum_name [D]"
    label: "extensions.vulns.vulnerabilities.about.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__environment_enum_name

  dimension: about__cloud__project {
    hidden: yes
  }  # dimension about__cloud__project

  dimension: about__cloud__project__name {
    type: string
    sql: ${TABLE}.about.cloud.project.name ;;
    group_label: "extensions"
    group_item_label: "extensions.vulns.vulnerabilities.about.cloud.project.name [D]"
    label: "extensions.vulns.vulnerabilities.about.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__project__name

  dimension: about__group {
    hidden: yes
  }  # dimension about__group

  dimension: about__group__attribute {
    hidden: yes
  }  # dimension about__group__attribute

  dimension: about__group__attribute__cloud {
    hidden: yes
  }  # dimension about__group__attribute__cloud

  dimension: about__group__attribute__cloud__project {
    hidden: yes
  }  # dimension about__group__attribute__cloud__project

  dimension: about__group__attribute__cloud__project__name {
    type: string
    sql: ${TABLE}.about.group.attribute.cloud.project.name ;;
    group_label: "extensions"
    group_item_label: "extensions.vulns.vulnerabilities.about.group.attribute.cloud.project.name [D]"
    label: "extensions.vulns.vulnerabilities.about.group.attribute.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__group__attribute__cloud__project__name

  dimension: about__hostname {
    type: string
    sql: ${TABLE}.about.hostname ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.hostname"
    view_label: "UDM"
    description: "Client hostname or domain name field. Hostname also doubles as the domain for remote entities."
  }  # dimension about__hostname

  dimension: about__labels {
    hidden: yes
  }  # dimension about__labels

  dimension: about__namespace {
    type: string
    sql: ${TABLE}.about.namespace ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.namespace"
    view_label: "UDM"
    description: "Namespace which the device belongs to (e.g. AD forest) Uses for this field include Microsoft Windows AD forest, name of subsidiary or acquisition, etc."
  }  # dimension about__namespace

  dimension: about__platform {
    type: number
    sql: ${TABLE}.about.platform ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.platform"
    view_label: "UDM"
    description: "Platform."
  }  # dimension about__platform

  dimension: about__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.about.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.platform_enum_name"
    view_label: "UDM"
    description: "Platform."
  }  # dimension about__platform_enum_name

  dimension: about__platform_version {
    type: string
    sql: ${TABLE}.about.platform_version ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.platform_version"
    view_label: "UDM"
    description: "Platform version. For example, \"Microsoft Windows 1803\"."
  }  # dimension about__platform_version

  dimension: about__resource {
    hidden: yes
  }  # dimension about__resource

  dimension: about__resource__attribute {
    hidden: yes
  }  # dimension about__resource__attribute

  dimension: about__resource__attribute__labels {
    hidden: yes
  }  # dimension about__resource__attribute__labels

  dimension: about__resource__product_object_id {
    type: string
    sql: ${TABLE}.about.resource.product_object_id ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.about.resource.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension about__resource__product_object_id

  dimension: cve_description {
    type: string
    sql: ${TABLE}.cve_description ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.cve_description"
    view_label: "UDM"
    description: "Common Vulnerabilities and Exposures Description. <a href=\"https://cve.mitre.org/about/faqs.html#what_is_cve_record\">https://cve.mitre.org/about/faqs.html#what_is_cve_record</a>"
  }  # dimension cve_description

  dimension: cve_id {
    type: string
    sql: ${TABLE}.cve_id ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.cve_id"
    view_label: "UDM"
    description: "Common Vulnerabilities and Exposures Id.<a href=\"https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures\">https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures</a> <a href=\"https://cve.mitre.org/about/faqs.html#what_is_cve_id\">https://cve.mitre.org/about/faqs.html#what_is_cve_id</a>"
  }  # dimension cve_id

  dimension: cvss_base_score {
    type: number
    sql: ${TABLE}.cvss_base_score ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.cvss_base_score"
    view_label: "UDM"
    description: "CVSS Base Score in the range of 0.0 to 10.0. Useful for sorting."
  }  # dimension cvss_base_score

  dimension: cvss_vector {
    type: string
    sql: ${TABLE}.cvss_vector ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.cvss_vector"
    view_label: "UDM"
    description: "Vector of CVSS properties (e.g. \"AV:L/AC:H/Au:N/C:N/I:P/A:C\") Can be linked to via:<a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=VALUE\"> https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=VALUE</a>"
  }  # dimension cvss_vector

  dimension: cvss_version {
    type: string
    sql: ${TABLE}.cvss_version ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.cvss_version"
    view_label: "UDM"
    description: "Version of CVSS Vector/Score."
  }  # dimension cvss_version

  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.description"
    view_label: "UDM"
    description: "Description of the vulnerability."
  }  # dimension description

  dimension_group: extensions__vulns__vulnerabilities__first_found {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.first_found.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.first_found.nanos, 0) / 1000) as INT64)) ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.first_found"
    view_label: "UDM"
    description: "Products that maintain a history of vuln scans should populate first_found with the time that a scan first detected the vulnerability on this asset."
  }  # dimension extensions__vulns__vulnerabilities__first_found

  dimension_group: extensions__vulns__vulnerabilities__last_found {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.last_found.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.last_found.nanos, 0) / 1000) as INT64)) ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.last_found"
    view_label: "UDM"
    description: "Products that maintain a history of vuln scans should populate last_found with the time that a scan last detected the vulnerability on this asset."
  }  # dimension extensions__vulns__vulnerabilities__last_found

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.name"
    view_label: "UDM"
    description: "Name of the vulnerability (e.g. \"Unsupported OS Version detected\")."
  }  # dimension name

  dimension_group: extensions__vulns__vulnerabilities__scan_end_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.scan_end_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.scan_end_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.scan_end_time"
    view_label: "UDM"
    description: "If the vulnerability was discovered during an asset scan, then this field should be populated with the time the scan ended. This field can be left unset if the end time is not available or not applicable."
  }  # dimension extensions__vulns__vulnerabilities__scan_end_time

  dimension_group: extensions__vulns__vulnerabilities__scan_start_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.scan_start_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.scan_start_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.scan_start_time"
    view_label: "UDM"
    description: "If the vulnerability was discovered during an asset scan, then this field should be populated with the time the scan started. This field can be left unset if the start time is not available or not applicable."
  }  # dimension extensions__vulns__vulnerabilities__scan_start_time

  dimension: severity {
    type: number
    sql: ${TABLE}.severity ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.severity"
    view_label: "UDM"
    description: "The severity of the vulnerability."
  }  # dimension severity

  dimension: severity_enum_name {
    type: string
    suggestions: ["CRITICAL", "HIGH", "LOW", "MEDIUM", "UNKNOWN_SEVERITY"]
    sql: CASE ${TABLE}.severity WHEN 0 THEN 'UNKNOWN_SEVERITY' WHEN 1 THEN 'LOW' WHEN 2 THEN 'MEDIUM' WHEN 3 THEN 'HIGH' WHEN 4 THEN 'CRITICAL' END ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.severity_enum_name"
    view_label: "UDM"
    description: "The severity of the vulnerability."
  }  # dimension severity_enum_name

  dimension: severity_details {
    type: string
    sql: ${TABLE}.severity_details ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.severity_details"
    view_label: "UDM"
    description: "Vendor-specific severity"
  }  # dimension severity_details

  dimension: vendor {
    type: string
    sql: ${TABLE}.vendor ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.vendor"
    view_label: "UDM"
    description: "Vendor of scan that discovered vulnerability."
  }  # dimension vendor

  dimension: vendor_knowledge_base_article_id {
    type: string
    sql: ${TABLE}.vendor_knowledge_base_article_id ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.vendor_knowledge_base_article_id"
    view_label: "UDM"
    description: "Vendor specific knowledge base article (e.g. \"KBXXXXXX\" from Microsoft). <a href=\"https://en.wikipedia.org/wiki/Microsoft_Knowledge_Base\">https://en.wikipedia.org/wiki/Microsoft_Knowledge_Base</a> <a href=\"https://access.redhat.com/knowledgebase\">https://access.redhat.com/knowledgebase</a>"
  }  # dimension vendor_knowledge_base_article_id

  dimension: vendor_vulnerability_id {
    type: string
    sql: ${TABLE}.vendor_vulnerability_id ;;
    group_label: "extensions"
    label: "extensions.vulns.vulnerabilities.vendor_vulnerability_id"
    view_label: "UDM"
    description: "Vendor specific vulnerability id (e.g. Microsoft security bulletin id)."
  }  # dimension vendor_vulnerability_id

}  # view udm_events__extensions__vulns__vulnerabilities

view: udm_events__intermediary__asset__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "intermediary"
    label: "intermediary.asset.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "intermediary"
    label: "intermediary.asset.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__intermediary__asset__attribute__labels

view: udm_events__intermediary__asset__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "intermediary"
    label: "intermediary.asset.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

}  # view udm_events__intermediary__asset__attribute__roles

view: udm_events__intermediary__asset__hardware {
  dimension: model {
    type: string
    sql: ${TABLE}.model ;;
    group_label: "intermediary"
    label: "intermediary.asset.hardware.model"
    view_label: "UDM"
    description: "Hardware model."
  }  # dimension model

  dimension: serial_number {
    type: string
    sql: ${TABLE}.serial_number ;;
    group_label: "intermediary"
    label: "intermediary.asset.hardware.serial_number"
    view_label: "UDM"
    description: "Hardware serial number."
  }  # dimension serial_number

}  # view udm_events__intermediary__asset__hardware

view: udm_events__intermediary__asset__ip {
  dimension: udm_events__intermediary__asset__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "intermediary"
    label: "intermediary.asset.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with an asset."
  }  # dimension udm_events__intermediary__asset__ip
}  # view udm_events__intermediary__asset__ip

view: udm_events__intermediary__asset__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "intermediary"
    group_item_label: "intermediary.asset.labels.key [D]"
    label: "intermediary.asset.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "intermediary"
    group_item_label: "intermediary.asset.labels.value [D]"
    label: "intermediary.asset.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__intermediary__asset__labels

view: udm_events__intermediary__asset__mac {
  dimension: udm_events__intermediary__asset__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "intermediary"
    label: "intermediary.asset.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with an asset."
  }  # dimension udm_events__intermediary__asset__mac
}  # view udm_events__intermediary__asset__mac

view: udm_events__intermediary__asset__software {
  dimension: version {
    type: string
    sql: ${TABLE}.version ;;
    group_label: "intermediary"
    label: "intermediary.asset.software.version"
    view_label: "UDM"
    description: "The version of the software."
  }  # dimension version

}  # view udm_events__intermediary__asset__software

view: udm_events__intermediary__ip {
  dimension: udm_events__intermediary__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "intermediary"
    label: "intermediary.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with a network connection."
  }  # dimension udm_events__intermediary__ip
}  # view udm_events__intermediary__ip

view: udm_events__intermediary__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "intermediary"
    group_item_label: "intermediary.labels.key [D]"
    label: "intermediary.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "intermediary"
    group_item_label: "intermediary.labels.value [D]"
    label: "intermediary.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__intermediary__labels

view: udm_events__intermediary__mac {
  dimension: udm_events__intermediary__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "intermediary"
    label: "intermediary.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with a device."
  }  # dimension udm_events__intermediary__mac
}  # view udm_events__intermediary__mac

view: udm_events__intermediary__nat_ip {
  dimension: udm_events__intermediary__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "intermediary"
    label: "intermediary.nat_ip"
    view_label: "UDM"
    description: "A list of NAT translated IP addresses associated with a network connection."
  }  # dimension udm_events__intermediary__nat_ip
}  # view udm_events__intermediary__nat_ip

view: udm_events__intermediary__process__file__names {
  dimension: udm_events__intermediary__process__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "intermediary"
    label: "intermediary.process.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__intermediary__process__file__names
}  # view udm_events__intermediary__process__file__names

view: udm_events__intermediary__resource__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "intermediary"
    label: "intermediary.resource.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "intermediary"
    label: "intermediary.resource.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__intermediary__resource__attribute__labels

view: udm_events__intermediary__user__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "intermediary"
    label: "intermediary.user.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "intermediary"
    label: "intermediary.user.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__intermediary__user__attribute__labels

view: udm_events__intermediary__user__email_addresses {
  dimension: udm_events__intermediary__user__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "intermediary"
    label: "intermediary.user.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__intermediary__user__email_addresses
}  # view udm_events__intermediary__user__email_addresses

view: udm_events__intermediary__user__group_identifiers {
  dimension: udm_events__intermediary__user__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "intermediary"
    label: "intermediary.user.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__intermediary__user__group_identifiers
}  # view udm_events__intermediary__user__group_identifiers

view: udm_events__intermediary {
  dimension: administrative_domain {
    type: string
    sql: ${TABLE}.administrative_domain ;;
    group_label: "intermediary"
    label: "intermediary.administrative_domain"
    view_label: "UDM"
    description: "Domain which the device belongs to (for example, the Microsoft Windows domain)."
  }  # dimension administrative_domain

  dimension: application {
    type: string
    sql: ${TABLE}.application ;;
    group_label: "intermediary"
    label: "intermediary.application"
    view_label: "UDM"
    description: "The name of an application or service. Some SSO solutions only capture the name of a target application such as \"Atlassian\" or \"Chronicle\"."
  }  # dimension application

  dimension: asset {
    hidden: yes
  }  # dimension asset

  dimension: asset__asset_id {
    type: string
    sql: ${TABLE}.asset.asset_id ;;
    group_label: "intermediary"
    label: "intermediary.asset.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension asset__asset_id

  dimension: asset__attribute {
    hidden: yes
  }  # dimension asset__attribute

  dimension: asset__attribute__labels {
    hidden: yes
  }  # dimension asset__attribute__labels

  dimension: asset__attribute__roles {
    hidden: yes
  }  # dimension asset__attribute__roles

  dimension: asset__category {
    type: string
    sql: ${TABLE}.asset.category ;;
    group_label: "intermediary"
    label: "intermediary.asset.category"
    view_label: "UDM"
    description: "The category of the asset (e.g. \"End User Asset\", \"Workstation\", \"Server\")."
  }  # dimension asset__category

  dimension_group: intermediary__asset__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.asset.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.asset.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "intermediary"
    group_item_label: "intermediary.asset.creation_time [D]"
    label: "intermediary.asset.creation_time"
    view_label: "UDM"
    description: "Time the asset was created or provisioned. Deprecate: creation_time should be populated in Attribute as generic metadata. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension intermediary__asset__creation_time

  dimension: asset__hardware {
    hidden: yes
  }  # dimension asset__hardware

  dimension: asset__hostname {
    type: string
    sql: ${TABLE}.asset.hostname ;;
    group_label: "intermediary"
    label: "intermediary.asset.hostname"
    view_label: "UDM"
    description: "Asset hostname or domain name field."
  }  # dimension asset__hostname

  dimension: asset__ip {
    hidden: yes
  }  # dimension asset__ip

  dimension: asset__labels {
    hidden: yes
  }  # dimension asset__labels

  dimension: asset__location {
    hidden: yes
  }  # dimension asset__location

  dimension: asset__location__country_or_region {
    type: string
    sql: ${TABLE}.asset.location.country_or_region ;;
    group_label: "intermediary"
    label: "intermediary.asset.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension asset__location__country_or_region

  dimension: asset__mac {
    hidden: yes
  }  # dimension asset__mac

  dimension: asset__network_domain {
    type: string
    sql: ${TABLE}.asset.network_domain ;;
    group_label: "intermediary"
    label: "intermediary.asset.network_domain"
    view_label: "UDM"
    description: "The network domain of the asset (e.g. \"corp.acme.com\")"
  }  # dimension asset__network_domain

  dimension: asset__platform_software {
    hidden: yes
  }  # dimension asset__platform_software

  dimension: asset__platform_software__platform_version {
    type: string
    sql: ${TABLE}.asset.platform_software.platform_version ;;
    group_label: "intermediary"
    label: "intermediary.asset.platform_software.platform_version"
    view_label: "UDM"
    description: "The platform software version ( e.g. \"Microsoft Windows 1803\")."
  }  # dimension asset__platform_software__platform_version

  dimension: asset__product_object_id {
    type: string
    sql: ${TABLE}.asset.product_object_id ;;
    group_label: "intermediary"
    label: "intermediary.asset.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID  or similar)."
  }  # dimension asset__product_object_id

  dimension: asset__software {
    hidden: yes
  }  # dimension asset__software

  dimension_group: intermediary__asset__system_last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.asset.system_last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.asset.system_last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "intermediary"
    label: "intermediary.asset.system_last_update_time"
    view_label: "UDM"
    description: "Time the asset system or OS was last updated. For all other operations that are not system updates (such as resizing a vm, etc.) use Attribute.last_update_time."
  }  # dimension intermediary__asset__system_last_update_time

  dimension: asset_id {
    type: string
    sql: ${TABLE}.asset_id ;;
    group_label: "intermediary"
    label: "intermediary.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension asset_id

  dimension: cloud {
    hidden: yes
  }  # dimension cloud

  dimension: cloud__environment {
    type: number
    sql: ${TABLE}.cloud.environment ;;
    group_label: "intermediary"
    group_item_label: "intermediary.cloud.environment [D]"
    label: "intermediary.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension cloud__environment

  dimension: cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "intermediary"
    group_item_label: "intermediary.cloud.environment_enum_name [D]"
    label: "intermediary.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension cloud__environment_enum_name

  dimension: domain {
    hidden: yes
  }  # dimension domain

  dimension_group: intermediary__domain__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.domain.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.domain.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "intermediary"
    label: "intermediary.domain.first_seen_time"
    view_label: "UDM"
    description: "First seen timestamp of the domain in the customer's environment."
  }  # dimension intermediary__domain__first_seen_time

  dimension_group: intermediary__domain__last_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.domain.last_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.domain.last_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "intermediary"
    label: "intermediary.domain.last_seen_time"
    view_label: "UDM"
    description: "Last seen timestamp of the domain in the customer's environment."
  }  # dimension intermediary__domain__last_seen_time

  dimension: domain__name {
    type: string
    sql: ${TABLE}.domain.name ;;
    group_label: "intermediary"
    label: "intermediary.domain.name"
    view_label: "UDM"
    description: "The domain name."
  }  # dimension domain__name

  dimension: email {
    type: string
    sql: ${TABLE}.email ;;
    group_label: "intermediary"
    label: "intermediary.email"
    view_label: "UDM"
    description: "Email address. Only filled in for security_result.about"
  }  # dimension email

  dimension: file {
    hidden: yes
  }  # dimension file

  dimension: file__full_path {
    type: string
    sql: ${TABLE}.file.full_path ;;
    group_label: "intermediary"
    label: "intermediary.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension file__full_path

  dimension: file__md5 {
    type: string
    sql: ${TABLE}.file.md5 ;;
    group_label: "intermediary"
    label: "intermediary.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension file__md5

  dimension: file__mime_type {
    type: string
    sql: ${TABLE}.file.mime_type ;;
    group_label: "intermediary"
    label: "intermediary.file.mime_type"
    view_label: "UDM"
    description: "The MIME (Multipurpose Internet Mail Extensions) type of the file, for example \"PE\", \"PDF\", \"powershell script\", etc."
  }  # dimension file__mime_type

  dimension: file__sha1 {
    type: string
    sql: ${TABLE}.file.sha1 ;;
    group_label: "intermediary"
    label: "intermediary.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension file__sha1

  dimension: file__sha256 {
    type: string
    sql: ${TABLE}.file.sha256 ;;
    group_label: "intermediary"
    label: "intermediary.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension file__sha256

  dimension: file__size {
    type: number
    sql: ${TABLE}.file.size ;;
    group_label: "intermediary"
    label: "intermediary.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension file__size

  dimension: file__stat_flags {
    type: number
    sql: ${TABLE}.file.stat_flags ;;
    group_label: "intermediary"
    label: "intermediary.file.stat_flags"
    view_label: "UDM"
    description: "User defined flags for file."
  }  # dimension file__stat_flags

  dimension: group {
    hidden: yes
  }  # dimension group

  dimension: group__group_display_name {
    type: string
    sql: ${TABLE}.group.group_display_name ;;
    group_label: "intermediary"
    label: "intermediary.group.group_display_name"
    view_label: "UDM"
    description: "Group display name. e.g. \"Finance\"."
  }  # dimension group__group_display_name

  dimension: group__product_object_id {
    type: string
    sql: ${TABLE}.group.product_object_id ;;
    group_label: "intermediary"
    label: "intermediary.group.product_object_id"
    view_label: "UDM"
    description: "Product globally unique user object identifier, such as an LDAP Object Identifier."
  }  # dimension group__product_object_id

  dimension: hostname {
    type: string
    sql: ${TABLE}.hostname ;;
    group_label: "intermediary"
    label: "intermediary.hostname"
    view_label: "UDM"
    description: "Client hostname or domain name field. Hostname also doubles as the domain for remote entities."
  }  # dimension hostname

  dimension: ip {
    hidden: yes
  }  # dimension ip

  dimension: labels {
    hidden: yes
  }  # dimension labels

  dimension: location {
    hidden: yes
  }  # dimension location

  dimension: location__city {
    type: string
    sql: ${TABLE}.location.city ;;
    group_label: "intermediary"
    label: "intermediary.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension location__city

  dimension: location__country_or_region {
    type: string
    sql: ${TABLE}.location.country_or_region ;;
    group_label: "intermediary"
    label: "intermediary.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension location__country_or_region

  dimension: location__name {
    type: string
    sql: ${TABLE}.location.name ;;
    group_label: "intermediary"
    label: "intermediary.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension location__name

  dimension: location__region_latitude {
    type: number
    sql: ${TABLE}.location.region_latitude ;;
    group_label: "intermediary"
    group_item_label: "intermediary.location.region_latitude [D]"
    label: "intermediary.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_latitude

  dimension: location__region_longitude {
    type: number
    sql: ${TABLE}.location.region_longitude ;;
    group_label: "intermediary"
    group_item_label: "intermediary.location.region_longitude [D]"
    label: "intermediary.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_longitude

  dimension: location__location {
    type: location
    sql_latitude: ${TABLE}.location.region_latitude ;;
    sql_longitude: ${TABLE}.location.region_longitude ;;
    group_label: "intermediary"
    group_item_label: "intermediary.location.location [D][L]"
    label: "intermediary.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension location__location

  dimension: location__state {
    type: string
    sql: ${TABLE}.location.state ;;
    group_label: "intermediary"
    label: "intermediary.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension location__state

  dimension: mac {
    hidden: yes
  }  # dimension mac

  dimension: namespace {
    type: string
    sql: ${TABLE}.namespace ;;
    group_label: "intermediary"
    label: "intermediary.namespace"
    view_label: "UDM"
    description: "Namespace which the device belongs to (e.g. AD forest) Uses for this field include Microsoft Windows AD forest, name of subsidiary or acquisition, etc."
  }  # dimension namespace

  dimension: nat_ip {
    hidden: yes
  }  # dimension nat_ip

  dimension: platform {
    type: number
    sql: ${TABLE}.platform ;;
    group_label: "intermediary"
    label: "intermediary.platform"
    view_label: "UDM"
    description: "Platform."
  }  # dimension platform

  dimension: platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "intermediary"
    label: "intermediary.platform_enum_name"
    view_label: "UDM"
    description: "Platform."
  }  # dimension platform_enum_name

  dimension: platform_version {
    type: string
    sql: ${TABLE}.platform_version ;;
    group_label: "intermediary"
    label: "intermediary.platform_version"
    view_label: "UDM"
    description: "Platform version. For example, \"Microsoft Windows 1803\"."
  }  # dimension platform_version

  dimension: port {
    type: number
    value_format: "#"
    sql: ${TABLE}.port ;;
    group_label: "intermediary"
    label: "intermediary.port"
    view_label: "UDM"
    description: "Source or destination network port number when a specific network connection is described within an event."
  }  # dimension port

  dimension: process {
    hidden: yes
  }  # dimension process

  dimension: process__command_line {
    type: string
    sql: ${TABLE}.process.command_line ;;
    group_label: "intermediary"
    label: "intermediary.process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension process__command_line

  dimension: process__file {
    hidden: yes
  }  # dimension process__file

  dimension: process__file__full_path {
    type: string
    sql: ${TABLE}.process.file.full_path ;;
    group_label: "intermediary"
    label: "intermediary.process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension process__file__full_path

  dimension: process__file__names {
    hidden: yes
  }  # dimension process__file__names

  dimension: process__file__sha1 {
    type: string
    sql: ${TABLE}.process.file.sha1 ;;
    group_label: "intermediary"
    label: "intermediary.process.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension process__file__sha1

  dimension: process__file__sha256 {
    type: string
    sql: ${TABLE}.process.file.sha256 ;;
    group_label: "intermediary"
    label: "intermediary.process.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension process__file__sha256

  dimension: process__file__size {
    type: number
    sql: ${TABLE}.process.file.size ;;
    group_label: "intermediary"
    label: "intermediary.process.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension process__file__size

  dimension: process__parent_process {
    hidden: yes
  }  # dimension process__parent_process

  dimension: process__parent_process__file {
    hidden: yes
  }  # dimension process__parent_process__file

  dimension: process__parent_process__file__full_path {
    type: string
    sql: ${TABLE}.process.parent_process.file.full_path ;;
    group_label: "intermediary"
    label: "intermediary.process.parent_process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension process__parent_process__file__full_path

  dimension: process__parent_process__file__size {
    type: number
    sql: ${TABLE}.process.parent_process.file.size ;;
    group_label: "intermediary"
    label: "intermediary.process.parent_process.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension process__parent_process__file__size

  dimension: process__parent_process__pid {
    type: string
    sql: ${TABLE}.process.parent_process.pid ;;
    group_label: "intermediary"
    label: "intermediary.process.parent_process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension process__parent_process__pid

  dimension: process__pid {
    type: string
    sql: ${TABLE}.process.pid ;;
    group_label: "intermediary"
    label: "intermediary.process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension process__pid

  dimension: registry {
    hidden: yes
  }  # dimension registry

  dimension: registry__registry_key {
    type: string
    sql: ${TABLE}.registry.registry_key ;;
    group_label: "intermediary"
    label: "intermediary.registry.registry_key"
    view_label: "UDM"
    description: "Registry key associated with an application or system component (e.g., HKEY_, HKCU\Environment...)."
  }  # dimension registry__registry_key

  dimension: registry__registry_value_data {
    type: string
    sql: ${TABLE}.registry.registry_value_data ;;
    group_label: "intermediary"
    label: "intermediary.registry.registry_value_data"
    view_label: "UDM"
    description: "Data associated with a registry value (e.g. %USERPROFILE%\Local Settings\Temp)."
  }  # dimension registry__registry_value_data

  dimension: registry__registry_value_name {
    type: string
    sql: ${TABLE}.registry.registry_value_name ;;
    group_label: "intermediary"
    label: "intermediary.registry.registry_value_name"
    view_label: "UDM"
    description: "Name of the registry value associated with an application or system component (e.g. TEMP)."
  }  # dimension registry__registry_value_name

  dimension: resource {
    hidden: yes
  }  # dimension resource

  dimension: resource__attribute {
    hidden: yes
  }  # dimension resource__attribute

  dimension: resource__attribute__labels {
    hidden: yes
  }  # dimension resource__attribute__labels

  dimension: resource__id {
    type: string
    sql: ${TABLE}.resource.id ;;
    group_label: "intermediary"
    group_item_label: "intermediary.resource.id [D]"
    label: "intermediary.resource.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension resource__id

  dimension: resource__name {
    type: string
    sql: ${TABLE}.resource.name ;;
    group_label: "intermediary"
    label: "intermediary.resource.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension resource__name

  dimension: resource__parent {
    type: string
    sql: ${TABLE}.resource.parent ;;
    group_label: "intermediary"
    group_item_label: "intermediary.resource.parent [D]"
    label: "intermediary.resource.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension resource__parent

  dimension: resource__product_object_id {
    type: string
    sql: ${TABLE}.resource.product_object_id ;;
    group_label: "intermediary"
    label: "intermediary.resource.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension resource__product_object_id

  dimension: resource__resource_subtype {
    type: string
    sql: ${TABLE}.resource.resource_subtype ;;
    group_label: "intermediary"
    label: "intermediary.resource.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension resource__resource_subtype

  dimension: resource__resource_type {
    type: number
    sql: ${TABLE}.resource.resource_type ;;
    group_label: "intermediary"
    label: "intermediary.resource.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource__resource_type

  dimension: resource__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.resource.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "intermediary"
    label: "intermediary.resource.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource__resource_type_enum_name

  dimension: resource__type {
    type: string
    sql: ${TABLE}.resource.type ;;
    group_label: "intermediary"
    group_item_label: "intermediary.resource.type [D]"
    label: "intermediary.resource.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension resource__type

  dimension: url {
    type: string
    sql: ${TABLE}.url ;;
    group_label: "intermediary"
    label: "intermediary.url"
    view_label: "UDM"
    description: "The URL."
  }  # dimension url

  dimension: user {
    hidden: yes
  }  # dimension user

  dimension: user__attribute {
    hidden: yes
  }  # dimension user__attribute

  dimension: user__attribute__labels {
    hidden: yes
  }  # dimension user__attribute__labels

  dimension: user__email_addresses {
    hidden: yes
  }  # dimension user__email_addresses

  dimension: user__group_identifiers {
    hidden: yes
  }  # dimension user__group_identifiers

  dimension: user__product_object_id {
    type: string
    sql: ${TABLE}.user.product_object_id ;;
    group_label: "intermediary"
    label: "intermediary.user.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension user__product_object_id

  dimension: user__user_display_name {
    type: string
    sql: ${TABLE}.user.user_display_name ;;
    group_label: "intermediary"
    label: "intermediary.user.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension user__user_display_name

  dimension: user__userid {
    type: string
    sql: ${TABLE}.user.userid ;;
    group_label: "intermediary"
    label: "intermediary.user.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension user__userid

  dimension: user__windows_sid {
    type: string
    sql: ${TABLE}.user.windows_sid ;;
    group_label: "intermediary"
    label: "intermediary.user.windows_sid"
    view_label: "UDM"
    description: "The Microsoft Windows SID of the user."
  }  # dimension user__windows_sid

}  # view udm_events__intermediary

view: udm_events__metadata__base_labels__ingestion_kv_labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "metadata"
    label: "metadata.base_labels.ingestion_kv_labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "metadata"
    label: "metadata.base_labels.ingestion_kv_labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__metadata__base_labels__ingestion_kv_labels

view: udm_events__metadata__base_labels__log_types {
  dimension: udm_events__metadata__base_labels__log_types {
    type: string
    sql: ${TABLE} ;;
    group_label: "metadata"
    label: "metadata.base_labels.log_types"
    view_label: "UDM"
    description: "All the LogType labels. (-- We use string to log types to avoid moving LogType proto, which contains customer info, to external. --)"
  }  # dimension udm_events__metadata__base_labels__log_types
}  # view udm_events__metadata__base_labels__log_types

view: udm_events__metadata__base_labels__namespaces {
  dimension: udm_events__metadata__base_labels__namespaces {
    type: string
    sql: ${TABLE} ;;
    group_label: "metadata"
    label: "metadata.base_labels.namespaces"
    view_label: "UDM"
    description: "All the namespaces."
  }  # dimension udm_events__metadata__base_labels__namespaces
}  # view udm_events__metadata__base_labels__namespaces

view: udm_events__metadata__enrichment_labels__ingestion_kv_labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "metadata"
    label: "metadata.enrichment_labels.ingestion_kv_labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "metadata"
    label: "metadata.enrichment_labels.ingestion_kv_labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__metadata__enrichment_labels__ingestion_kv_labels

view: udm_events__metadata__enrichment_labels__log_types {
  dimension: udm_events__metadata__enrichment_labels__log_types {
    type: string
    sql: ${TABLE} ;;
    group_label: "metadata"
    label: "metadata.enrichment_labels.log_types"
    view_label: "UDM"
    description: "All the LogType labels. (-- We use string to log types to avoid moving LogType proto, which contains customer info, to external. --)"
  }  # dimension udm_events__metadata__enrichment_labels__log_types
}  # view udm_events__metadata__enrichment_labels__log_types

view: udm_events__metadata__enrichment_labels__namespaces {
  dimension: udm_events__metadata__enrichment_labels__namespaces {
    type: string
    sql: ${TABLE} ;;
    group_label: "metadata"
    label: "metadata.enrichment_labels.namespaces"
    view_label: "UDM"
    description: "All the namespaces."
  }  # dimension udm_events__metadata__enrichment_labels__namespaces
}  # view udm_events__metadata__enrichment_labels__namespaces

view: udm_events__metadata__ingestion_labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "metadata"
    label: "metadata.ingestion_labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "metadata"
    label: "metadata.ingestion_labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__metadata__ingestion_labels

view: udm_events__metadata__tags__data_tap_config_name {
  dimension: udm_events__metadata__tags__data_tap_config_name {
    type: string
    sql: ${TABLE} ;;
    group_label: "metadata"
    label: "metadata.tags.data_tap_config_name"
    view_label: "UDM"
    description: "A list of sink name values defined in DataTap configurations."
  }  # dimension udm_events__metadata__tags__data_tap_config_name
}  # view udm_events__metadata__tags__data_tap_config_name

view: udm_events__metadata__tags__tenant_id {
  dimension: udm_events__metadata__tags__tenant_id {
    type: string
    sql: ${TABLE} ;;
    group_label: "metadata"
    label: "metadata.tags.tenant_id"
    view_label: "UDM"
    description: "A list of subtenant ids that this event belongs to."
  }  # dimension udm_events__metadata__tags__tenant_id
}  # view udm_events__metadata__tags__tenant_id

view: udm_events__network__dhcp__options {
  dimension: code {
    type: number
    sql: ${TABLE}.code ;;
    group_label: "network"
    label: "network.dhcp.options.code"
    view_label: "UDM"
    description: "Code. See RFC1533."
  }  # dimension code

  dimension: data {
    type: string
    sql: ${TABLE}.data ;;
    group_label: "network"
    label: "network.dhcp.options.data"
    view_label: "UDM"
    description: "Data."
  }  # dimension data

}  # view udm_events__network__dhcp__options

view: udm_events__network__dns__additional {
  dimension: class {
    type: number
    sql: ${TABLE}.class ;;
    group_label: "network"
    label: "network.dns.additional.class"
    view_label: "UDM"
    description: "The code specifying the class of the resource record."
  }  # dimension class

  dimension: data {
    type: string
    sql: ${TABLE}.data ;;
    group_label: "network"
    label: "network.dns.additional.data"
    view_label: "UDM"
    description: "The payload or response to the DNS question for all responses encoded in UTF-8 format"
  }  # dimension data

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "network"
    label: "network.dns.additional.name"
    view_label: "UDM"
    description: "The name of the owner of the resource record."
  }  # dimension name

  dimension: ttl {
    type: number
    sql: ${TABLE}.ttl ;;
    group_label: "network"
    label: "network.dns.additional.ttl"
    view_label: "UDM"
    description: "The time interval for which the resource record can be cached before the source of the information should again be queried."
  }  # dimension ttl

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "network"
    label: "network.dns.additional.type"
    view_label: "UDM"
    description: "The code specifying the type of the resource record."
  }  # dimension type

}  # view udm_events__network__dns__additional

view: udm_events__network__dns__answers {
  dimension: binary_data {
    type: string
    sql: ${TABLE}.binary_data ;;
    group_label: "network"
    label: "network.dns.answers.binary_data"
    view_label: "UDM"
    description: "The raw bytes of any non-UTF8 strings that might be included as part of a DNS response."
  }  # dimension binary_data

  dimension: class {
    type: number
    sql: ${TABLE}.class ;;
    group_label: "network"
    label: "network.dns.answers.class"
    view_label: "UDM"
    description: "The code specifying the class of the resource record."
  }  # dimension class

  dimension: data {
    type: string
    sql: ${TABLE}.data ;;
    group_label: "network"
    label: "network.dns.answers.data"
    view_label: "UDM"
    description: "The payload or response to the DNS question for all responses encoded in UTF-8 format"
  }  # dimension data

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "network"
    label: "network.dns.answers.name"
    view_label: "UDM"
    description: "The name of the owner of the resource record."
  }  # dimension name

  dimension: ttl {
    type: number
    sql: ${TABLE}.ttl ;;
    group_label: "network"
    label: "network.dns.answers.ttl"
    view_label: "UDM"
    description: "The time interval for which the resource record can be cached before the source of the information should again be queried."
  }  # dimension ttl

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "network"
    label: "network.dns.answers.type"
    view_label: "UDM"
    description: "The code specifying the type of the resource record."
  }  # dimension type

}  # view udm_events__network__dns__answers

view: udm_events__network__dns__authority {
  dimension: class {
    type: number
    sql: ${TABLE}.class ;;
    group_label: "network"
    label: "network.dns.authority.class"
    view_label: "UDM"
    description: "The code specifying the class of the resource record."
  }  # dimension class

  dimension: data {
    type: string
    sql: ${TABLE}.data ;;
    group_label: "network"
    label: "network.dns.authority.data"
    view_label: "UDM"
    description: "The payload or response to the DNS question for all responses encoded in UTF-8 format"
  }  # dimension data

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "network"
    label: "network.dns.authority.name"
    view_label: "UDM"
    description: "The name of the owner of the resource record."
  }  # dimension name

  dimension: ttl {
    type: number
    sql: ${TABLE}.ttl ;;
    group_label: "network"
    label: "network.dns.authority.ttl"
    view_label: "UDM"
    description: "The time interval for which the resource record can be cached before the source of the information should again be queried."
  }  # dimension ttl

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "network"
    label: "network.dns.authority.type"
    view_label: "UDM"
    description: "The code specifying the type of the resource record."
  }  # dimension type

}  # view udm_events__network__dns__authority

view: udm_events__network__dns__questions {
  dimension: class {
    type: number
    sql: ${TABLE}.class ;;
    group_label: "network"
    label: "network.dns.questions.class"
    view_label: "UDM"
    description: "The code specifying the class of the query."
  }  # dimension class

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "network"
    label: "network.dns.questions.name"
    view_label: "UDM"
    description: "The domain name."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "network"
    label: "network.dns.questions.type"
    view_label: "UDM"
    description: "The code specifying the type of the query."
  }  # dimension type

}  # view udm_events__network__dns__questions

view: udm_events__network__email__bcc {
  dimension: udm_events__network__email__bcc {
    type: string
    sql: ${TABLE} ;;
    group_label: "network"
    label: "network.email.bcc"
    view_label: "UDM"
    description: "A list of 'bcc' addresses."
  }  # dimension udm_events__network__email__bcc
}  # view udm_events__network__email__bcc

view: udm_events__network__email__cc {
  dimension: udm_events__network__email__cc {
    type: string
    sql: ${TABLE} ;;
    group_label: "network"
    label: "network.email.cc"
    view_label: "UDM"
    description: "A list of 'cc' addresses."
  }  # dimension udm_events__network__email__cc
}  # view udm_events__network__email__cc

view: udm_events__network__email__subject {
  dimension: udm_events__network__email__subject {
    type: string
    sql: ${TABLE} ;;
    group_label: "network"
    label: "network.email.subject"
    view_label: "UDM"
    description: "The subject line(s) of the email."
  }  # dimension udm_events__network__email__subject
}  # view udm_events__network__email__subject

view: udm_events__network__email__to {
  dimension: udm_events__network__email__to {
    type: string
    sql: ${TABLE} ;;
    group_label: "network"
    label: "network.email.to"
    view_label: "UDM"
    description: "A list of 'to' addresses."
  }  # dimension udm_events__network__email__to
}  # view udm_events__network__email__to

view: udm_events__network__http__parsed_user_agent__annotation {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.annotation.key"
    view_label: "UDM"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "network"
    label: "network.http.parsed_user_agent.annotation.value"
    view_label: "UDM"
  }  # dimension value

}  # view udm_events__network__http__parsed_user_agent__annotation

view: udm_events__network__smtp__rcpt_to {
  dimension: udm_events__network__smtp__rcpt_to {
    type: string
    sql: ${TABLE} ;;
    group_label: "network"
    label: "network.smtp.rcpt_to"
    view_label: "UDM"
    description: "The client's 'RCPT TO' string(s)."
  }  # dimension udm_events__network__smtp__rcpt_to
}  # view udm_events__network__smtp__rcpt_to

view: udm_events__network__smtp__server_response {
  dimension: udm_events__network__smtp__server_response {
    type: string
    sql: ${TABLE} ;;
    group_label: "network"
    label: "network.smtp.server_response"
    view_label: "UDM"
    description: "The server's response(s) to the client."
  }  # dimension udm_events__network__smtp__server_response
}  # view udm_events__network__smtp__server_response

view: udm_events__network__tls__client__supported_ciphers {
  dimension: udm_events__network__tls__client__supported_ciphers {
    type: string
    sql: ${TABLE} ;;
    group_label: "network"
    label: "network.tls.client.supported_ciphers"
    view_label: "UDM"
    description: "Ciphers supported by the client during client hello."
  }  # dimension udm_events__network__tls__client__supported_ciphers
}  # view udm_events__network__tls__client__supported_ciphers

view: udm_events__observer__asset__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "observer"
    label: "observer.asset.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "observer"
    label: "observer.asset.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__observer__asset__attribute__labels

view: udm_events__observer__asset__ip {
  dimension: udm_events__observer__asset__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "observer"
    label: "observer.asset.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with an asset."
  }  # dimension udm_events__observer__asset__ip
}  # view udm_events__observer__asset__ip

view: udm_events__observer__asset__software {
  dimension: version {
    type: string
    sql: ${TABLE}.version ;;
    group_label: "observer"
    label: "observer.asset.software.version"
    view_label: "UDM"
    description: "The version of the software."
  }  # dimension version

}  # view udm_events__observer__asset__software

view: udm_events__observer__group__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "observer"
    label: "observer.group.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "observer"
    label: "observer.group.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__observer__group__attribute__permissions

view: udm_events__observer__group__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "observer"
    label: "observer.group.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

}  # view udm_events__observer__group__attribute__roles

view: udm_events__observer__ip {
  dimension: udm_events__observer__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "observer"
    label: "observer.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with a network connection."
  }  # dimension udm_events__observer__ip
}  # view udm_events__observer__ip

view: udm_events__observer__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "observer"
    group_item_label: "observer.labels.key [D]"
    label: "observer.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "observer"
    group_item_label: "observer.labels.value [D]"
    label: "observer.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__observer__labels

view: udm_events__observer__mac {
  dimension: udm_events__observer__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "observer"
    label: "observer.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with a device."
  }  # dimension udm_events__observer__mac
}  # view udm_events__observer__mac

view: udm_events__observer__nat_ip {
  dimension: udm_events__observer__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "observer"
    label: "observer.nat_ip"
    view_label: "UDM"
    description: "A list of NAT translated IP addresses associated with a network connection."
  }  # dimension udm_events__observer__nat_ip
}  # view udm_events__observer__nat_ip

view: udm_events__observer__resource__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "observer"
    label: "observer.resource.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "observer"
    label: "observer.resource.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__observer__resource__attribute__labels

view: udm_events__observer__user__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "observer"
    label: "observer.user.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "observer"
    label: "observer.user.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__observer__user__attribute__labels

view: udm_events__observer__user__email_addresses {
  dimension: udm_events__observer__user__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "observer"
    label: "observer.user.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__observer__user__email_addresses
}  # view udm_events__observer__user__email_addresses

view: udm_events__observer__user__group_identifiers {
  dimension: udm_events__observer__user__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "observer"
    label: "observer.user.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__observer__user__group_identifiers
}  # view udm_events__observer__user__group_identifiers

view: udm_events__principal__asset__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    label: "principal.asset.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    label: "principal.asset.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__principal__asset__attribute__labels

view: udm_events__principal__asset__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.asset.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.asset.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

}  # view udm_events__principal__asset__attribute__roles

view: udm_events__principal__asset__hardware {
  dimension: cpu_clock_speed {
    type: number
    sql: ${TABLE}.cpu_clock_speed ;;
    group_label: "principal"
    label: "principal.asset.hardware.cpu_clock_speed"
    view_label: "UDM"
    description: "Clock speed of the hardware CPU in MHz."
  }  # dimension cpu_clock_speed

  dimension: cpu_max_clock_speed {
    type: number
    sql: ${TABLE}.cpu_max_clock_speed ;;
    group_label: "principal"
    label: "principal.asset.hardware.cpu_max_clock_speed"
    view_label: "UDM"
    description: "Maximum possible clock speed of the hardware CPU in MHz."
  }  # dimension cpu_max_clock_speed

  dimension: cpu_model {
    type: string
    sql: ${TABLE}.cpu_model ;;
    group_label: "principal"
    label: "principal.asset.hardware.cpu_model"
    view_label: "UDM"
    description: "Model description of the hardware CPU (e.g. \"2.8 GHz Quad-Core Intel Core i5\")."
  }  # dimension cpu_model

  dimension: cpu_number_cores {
    type: number
    sql: ${TABLE}.cpu_number_cores ;;
    group_label: "principal"
    label: "principal.asset.hardware.cpu_number_cores"
    view_label: "UDM"
    description: "Number of CPU cores."
  }  # dimension cpu_number_cores

  dimension: cpu_platform {
    type: string
    sql: ${TABLE}.cpu_platform ;;
    group_label: "principal"
    label: "principal.asset.hardware.cpu_platform"
    view_label: "UDM"
    description: "Platform of the hardware CPU (e.g. \"Intel Broadwell\")."
  }  # dimension cpu_platform

  dimension: manufacturer {
    type: string
    sql: ${TABLE}.manufacturer ;;
    group_label: "principal"
    label: "principal.asset.hardware.manufacturer"
    view_label: "UDM"
    description: "Hardware manufacturer."
  }  # dimension manufacturer

  dimension: model {
    type: string
    sql: ${TABLE}.model ;;
    group_label: "principal"
    label: "principal.asset.hardware.model"
    view_label: "UDM"
    description: "Hardware model."
  }  # dimension model

  dimension: ram {
    type: number
    sql: ${TABLE}.ram ;;
    group_label: "principal"
    label: "principal.asset.hardware.ram"
    view_label: "UDM"
    description: "Amount of the hardware ramdom access memory (RAM) in Mb."
  }  # dimension ram

  dimension: serial_number {
    type: string
    sql: ${TABLE}.serial_number ;;
    group_label: "principal"
    label: "principal.asset.hardware.serial_number"
    view_label: "UDM"
    description: "Hardware serial number."
  }  # dimension serial_number

}  # view udm_events__principal__asset__hardware

view: udm_events__principal__asset__ip {
  dimension: udm_events__principal__asset__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.asset.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with an asset."
  }  # dimension udm_events__principal__asset__ip
}  # view udm_events__principal__asset__ip

view: udm_events__principal__asset__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    group_item_label: "principal.asset.labels.key [D]"
    label: "principal.asset.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    group_item_label: "principal.asset.labels.value [D]"
    label: "principal.asset.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__principal__asset__labels

view: udm_events__principal__asset__mac {
  dimension: udm_events__principal__asset__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.asset.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with an asset."
  }  # dimension udm_events__principal__asset__mac
}  # view udm_events__principal__asset__mac

view: udm_events__principal__asset__nat_ip {
  dimension: udm_events__principal__asset__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.asset.nat_ip"
    view_label: "UDM"
    description: "List of NAT IP addresses associated with an asset."
  }  # dimension udm_events__principal__asset__nat_ip
}  # view udm_events__principal__asset__nat_ip

view: udm_events__principal__asset__software__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.asset.software.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.asset.software.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__principal__asset__software__permissions

view: udm_events__principal__asset__software {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.asset.software.description"
    view_label: "UDM"
    description: "The description of the software."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.asset.software.name"
    view_label: "UDM"
    description: "The name of the software."
  }  # dimension name

  dimension: permissions {
    hidden: yes
  }  # dimension permissions

  dimension: vendor_name {
    type: string
    sql: ${TABLE}.vendor_name ;;
    group_label: "principal"
    label: "principal.asset.software.vendor_name"
    view_label: "UDM"
    description: "The name of the software vendor."
  }  # dimension vendor_name

  dimension: version {
    type: string
    sql: ${TABLE}.version ;;
    group_label: "principal"
    label: "principal.asset.software.version"
    view_label: "UDM"
    description: "The version of the software."
  }  # dimension version

}  # view udm_events__principal__asset__software

view: udm_events__principal__asset__vulnerabilities__about__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    group_item_label: "principal.asset.vulnerabilities.about.labels.key [D]"
    label: "principal.asset.vulnerabilities.about.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    group_item_label: "principal.asset.vulnerabilities.about.labels.value [D]"
    label: "principal.asset.vulnerabilities.about.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__principal__asset__vulnerabilities__about__labels

view: udm_events__principal__asset__vulnerabilities {
  dimension: about {
    hidden: yes
  }  # dimension about

  dimension: about__labels {
    hidden: yes
  }  # dimension about__labels

  dimension: cve_description {
    type: string
    sql: ${TABLE}.cve_description ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.cve_description"
    view_label: "UDM"
    description: "Common Vulnerabilities and Exposures Description. <a href=\"https://cve.mitre.org/about/faqs.html#what_is_cve_record\">https://cve.mitre.org/about/faqs.html#what_is_cve_record</a>"
  }  # dimension cve_description

  dimension: cve_id {
    type: string
    sql: ${TABLE}.cve_id ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.cve_id"
    view_label: "UDM"
    description: "Common Vulnerabilities and Exposures Id.<a href=\"https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures\">https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures</a> <a href=\"https://cve.mitre.org/about/faqs.html#what_is_cve_id\">https://cve.mitre.org/about/faqs.html#what_is_cve_id</a>"
  }  # dimension cve_id

  dimension: cvss_base_score {
    type: number
    sql: ${TABLE}.cvss_base_score ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.cvss_base_score"
    view_label: "UDM"
    description: "CVSS Base Score in the range of 0.0 to 10.0. Useful for sorting."
  }  # dimension cvss_base_score

  dimension: cvss_vector {
    type: string
    sql: ${TABLE}.cvss_vector ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.cvss_vector"
    view_label: "UDM"
    description: "Vector of CVSS properties (e.g. \"AV:L/AC:H/Au:N/C:N/I:P/A:C\") Can be linked to via:<a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=VALUE\"> https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=VALUE</a>"
  }  # dimension cvss_vector

  dimension: cvss_version {
    type: string
    sql: ${TABLE}.cvss_version ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.cvss_version"
    view_label: "UDM"
    description: "Version of CVSS Vector/Score."
  }  # dimension cvss_version

  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.description"
    view_label: "UDM"
    description: "Description of the vulnerability."
  }  # dimension description

  dimension_group: principal__asset__vulnerabilities__first_found {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.first_found.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.first_found.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.first_found"
    view_label: "UDM"
    description: "Products that maintain a history of vuln scans should populate first_found with the time that a scan first detected the vulnerability on this asset."
  }  # dimension principal__asset__vulnerabilities__first_found

  dimension_group: principal__asset__vulnerabilities__last_found {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.last_found.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.last_found.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.last_found"
    view_label: "UDM"
    description: "Products that maintain a history of vuln scans should populate last_found with the time that a scan last detected the vulnerability on this asset."
  }  # dimension principal__asset__vulnerabilities__last_found

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.name"
    view_label: "UDM"
    description: "Name of the vulnerability (e.g. \"Unsupported OS Version detected\")."
  }  # dimension name

  dimension_group: principal__asset__vulnerabilities__scan_end_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.scan_end_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.scan_end_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.scan_end_time"
    view_label: "UDM"
    description: "If the vulnerability was discovered during an asset scan, then this field should be populated with the time the scan ended. This field can be left unset if the end time is not available or not applicable."
  }  # dimension principal__asset__vulnerabilities__scan_end_time

  dimension_group: principal__asset__vulnerabilities__scan_start_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.scan_start_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.scan_start_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.scan_start_time"
    view_label: "UDM"
    description: "If the vulnerability was discovered during an asset scan, then this field should be populated with the time the scan started. This field can be left unset if the start time is not available or not applicable."
  }  # dimension principal__asset__vulnerabilities__scan_start_time

  dimension: severity {
    type: number
    sql: ${TABLE}.severity ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.severity"
    view_label: "UDM"
    description: "The severity of the vulnerability."
  }  # dimension severity

  dimension: severity_enum_name {
    type: string
    suggestions: ["CRITICAL", "HIGH", "LOW", "MEDIUM", "UNKNOWN_SEVERITY"]
    sql: CASE ${TABLE}.severity WHEN 0 THEN 'UNKNOWN_SEVERITY' WHEN 1 THEN 'LOW' WHEN 2 THEN 'MEDIUM' WHEN 3 THEN 'HIGH' WHEN 4 THEN 'CRITICAL' END ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.severity_enum_name"
    view_label: "UDM"
    description: "The severity of the vulnerability."
  }  # dimension severity_enum_name

  dimension: severity_details {
    type: string
    sql: ${TABLE}.severity_details ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.severity_details"
    view_label: "UDM"
    description: "Vendor-specific severity"
  }  # dimension severity_details

  dimension: vendor {
    type: string
    sql: ${TABLE}.vendor ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.vendor"
    view_label: "UDM"
    description: "Vendor of scan that discovered vulnerability."
  }  # dimension vendor

  dimension: vendor_knowledge_base_article_id {
    type: string
    sql: ${TABLE}.vendor_knowledge_base_article_id ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.vendor_knowledge_base_article_id"
    view_label: "UDM"
    description: "Vendor specific knowledge base article (e.g. \"KBXXXXXX\" from Microsoft). <a href=\"https://en.wikipedia.org/wiki/Microsoft_Knowledge_Base\">https://en.wikipedia.org/wiki/Microsoft_Knowledge_Base</a> <a href=\"https://access.redhat.com/knowledgebase\">https://access.redhat.com/knowledgebase</a>"
  }  # dimension vendor_knowledge_base_article_id

  dimension: vendor_vulnerability_id {
    type: string
    sql: ${TABLE}.vendor_vulnerability_id ;;
    group_label: "principal"
    label: "principal.asset.vulnerabilities.vendor_vulnerability_id"
    view_label: "UDM"
    description: "Vendor specific vulnerability id (e.g. Microsoft security bulletin id)."
  }  # dimension vendor_vulnerability_id

}  # view udm_events__principal__asset__vulnerabilities

view: udm_events__principal__domain__name_server {
  dimension: udm_events__principal__domain__name_server {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.domain.name_server"
    view_label: "UDM"
    description: "Repeated list of name servers."
  }  # dimension udm_events__principal__domain__name_server
}  # view udm_events__principal__domain__name_server

view: udm_events__principal__domain__tech__group_identifiers {
  dimension: udm_events__principal__domain__tech__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.domain.tech.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__principal__domain__tech__group_identifiers
}  # view udm_events__principal__domain__tech__group_identifiers

view: udm_events__principal__group__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    label: "principal.group.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    label: "principal.group.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__principal__group__attribute__labels

view: udm_events__principal__group__attribute__roles {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.group.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

}  # view udm_events__principal__group__attribute__roles

view: udm_events__principal__group__email_addresses {
  dimension: udm_events__principal__group__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.group.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the group."
  }  # dimension udm_events__principal__group__email_addresses
}  # view udm_events__principal__group__email_addresses

view: udm_events__principal__investigation__comments {
  dimension: udm_events__principal__investigation__comments {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.investigation.comments"
    view_label: "UDM"
    description: "Comment added by the Analyst."
  }  # dimension udm_events__principal__investigation__comments
}  # view udm_events__principal__investigation__comments

view: udm_events__principal__ip {
  dimension: udm_events__principal__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with a network connection."
  }  # dimension udm_events__principal__ip
}  # view udm_events__principal__ip

view: udm_events__principal__ip_geo_artifact {
  dimension: ip {
    type: string
    sql: ${TABLE}.ip ;;
    group_label: "principal"
    label: "principal.ip_geo_artifact.ip"
    view_label: "UDM"
    description: "IP address of the artifact."
  }  # dimension ip

  dimension: location {
    hidden: yes
  }  # dimension location

  dimension: location__country_or_region {
    type: string
    sql: ${TABLE}.location.country_or_region ;;
    group_label: "principal"
    label: "principal.ip_geo_artifact.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension location__country_or_region

  dimension: location__region_coordinates {
    type: location
    sql_latitude: ${TABLE}.location.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.location.region_coordinates.longitude ;;
    group_label: "principal"
    group_item_label: "principal.ip_geo_artifact.location.region_coordinates [L]"
    label: "principal.ip_geo_artifact.location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [L]: This is a location field and can be used in maps."
  }  # dimension location__region_coordinates

  dimension: location__region_latitude {
    type: number
    sql: ${TABLE}.location.region_latitude ;;
    group_label: "principal"
    group_item_label: "principal.ip_geo_artifact.location.region_latitude [D]"
    label: "principal.ip_geo_artifact.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_latitude

  dimension: location__region_longitude {
    type: number
    sql: ${TABLE}.location.region_longitude ;;
    group_label: "principal"
    group_item_label: "principal.ip_geo_artifact.location.region_longitude [D]"
    label: "principal.ip_geo_artifact.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_longitude

  dimension: location__location {
    type: location
    sql_latitude: ${TABLE}.location.region_latitude ;;
    sql_longitude: ${TABLE}.location.region_longitude ;;
    group_label: "principal"
    group_item_label: "principal.ip_geo_artifact.location.location [D][L]"
    label: "principal.ip_geo_artifact.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension location__location

  dimension: location__state {
    type: string
    sql: ${TABLE}.location.state ;;
    group_label: "principal"
    label: "principal.ip_geo_artifact.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension location__state

  dimension: network {
    hidden: yes
  }  # dimension network

  dimension: network__asn {
    type: string
    sql: ${TABLE}.network.asn ;;
    group_label: "principal"
    label: "principal.ip_geo_artifact.network.asn"
    view_label: "UDM"
    description: "Autonomous system number."
  }  # dimension network__asn

  dimension: network__carrier_name {
    type: string
    sql: ${TABLE}.network.carrier_name ;;
    group_label: "principal"
    label: "principal.ip_geo_artifact.network.carrier_name"
    view_label: "UDM"
    description: "Carrier identification."
  }  # dimension network__carrier_name

  dimension: network__dns_domain {
    type: string
    sql: ${TABLE}.network.dns_domain ;;
    group_label: "principal"
    label: "principal.ip_geo_artifact.network.dns_domain"
    view_label: "UDM"
    description: "DNS domain name."
  }  # dimension network__dns_domain

  dimension: network__organization_name {
    type: string
    sql: ${TABLE}.network.organization_name ;;
    group_label: "principal"
    label: "principal.ip_geo_artifact.network.organization_name"
    view_label: "UDM"
    description: "Organization name (e.g Google)."
  }  # dimension network__organization_name

}  # view udm_events__principal__ip_geo_artifact

view: udm_events__principal__ip_location {
  dimension: city {
    type: string
    sql: ${TABLE}.city ;;
    group_label: "principal"
    group_item_label: "principal.ip_location.city [D]"
    label: "principal.ip_location.city"
    view_label: "UDM"
    description: "The city. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension city

  dimension: country_or_region {
    type: string
    sql: ${TABLE}.country_or_region ;;
    group_label: "principal"
    group_item_label: "principal.ip_location.country_or_region [D]"
    label: "principal.ip_location.country_or_region"
    view_label: "UDM"
    description: "The country or region. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension country_or_region

  dimension: region_coordinates {
    type: location
    sql_latitude: ${TABLE}.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.region_coordinates.longitude ;;
    group_label: "principal"
    group_item_label: "principal.ip_location.region_coordinates [D][L]"
    label: "principal.ip_location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension region_coordinates

  dimension: region_latitude {
    type: number
    sql: ${TABLE}.region_latitude ;;
    group_label: "principal"
    group_item_label: "principal.ip_location.region_latitude [D]"
    label: "principal.ip_location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension region_latitude

  dimension: region_longitude {
    type: number
    sql: ${TABLE}.region_longitude ;;
    group_label: "principal"
    group_item_label: "principal.ip_location.region_longitude [D]"
    label: "principal.ip_location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension region_longitude

  dimension: location {
    type: location
    sql_latitude: ${TABLE}.region_latitude ;;
    sql_longitude: ${TABLE}.region_longitude ;;
    group_label: "principal"
    group_item_label: "principal.ip_location.location [D][L]"
    label: "principal.ip_location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension location

  dimension: state {
    type: string
    sql: ${TABLE}.state ;;
    group_label: "principal"
    group_item_label: "principal.ip_location.state [D]"
    label: "principal.ip_location.state"
    view_label: "UDM"
    description: "The state. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension state

}  # view udm_events__principal__ip_location

view: udm_events__principal__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    group_item_label: "principal.labels.key [D]"
    label: "principal.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    group_item_label: "principal.labels.value [D]"
    label: "principal.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__principal__labels

view: udm_events__principal__mac {
  dimension: udm_events__principal__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with a device."
  }  # dimension udm_events__principal__mac
}  # view udm_events__principal__mac

view: udm_events__principal__nat_ip {
  dimension: udm_events__principal__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.nat_ip"
    view_label: "UDM"
    description: "A list of NAT translated IP addresses associated with a network connection."
  }  # dimension udm_events__principal__nat_ip
}  # view udm_events__principal__nat_ip

view: udm_events__principal__network__dns__additional {
  dimension: data {
    type: string
    sql: ${TABLE}.data ;;
    group_label: "principal"
    label: "principal.network.dns.additional.data"
    view_label: "UDM"
    description: "The payload or response to the DNS question for all responses encoded in UTF-8 format"
  }  # dimension data

}  # view udm_events__principal__network__dns__additional

view: udm_events__principal__network__dns__questions {
  dimension: class {
    type: number
    sql: ${TABLE}.class ;;
    group_label: "principal"
    label: "principal.network.dns.questions.class"
    view_label: "UDM"
    description: "The code specifying the class of the query."
  }  # dimension class

}  # view udm_events__principal__network__dns__questions

view: udm_events__principal__process__command_line_history {
  dimension: udm_events__principal__process__command_line_history {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.process.command_line_history"
    view_label: "UDM"
    description: "The command line history of the process."
  }  # dimension udm_events__principal__process__command_line_history
}  # view udm_events__principal__process__command_line_history

view: udm_events__principal__process__file__capabilities_tags {
  dimension: udm_events__principal__process__file__capabilities_tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.process.file.capabilities_tags"
    view_label: "UDM"
    description: "Capabilities tags."
  }  # dimension udm_events__principal__process__file__capabilities_tags
}  # view udm_events__principal__process__file__capabilities_tags

view: udm_events__principal__process__file__names {
  dimension: udm_events__principal__process__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.process.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__principal__process__file__names
}  # view udm_events__principal__process__file__names

view: udm_events__principal__process__parent_process__file__names {
  dimension: udm_events__principal__process__parent_process__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.process.parent_process.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__principal__process__parent_process__file__names
}  # view udm_events__principal__process__parent_process__file__names

view: udm_events__principal__process_ancestors {
  dimension: file {
    hidden: yes
  }  # dimension file

  dimension: file__full_path {
    type: string
    sql: ${TABLE}.file.full_path ;;
    group_label: "principal"
    label: "principal.process_ancestors.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension file__full_path

  dimension: pid {
    type: string
    sql: ${TABLE}.pid ;;
    group_label: "principal"
    label: "principal.process_ancestors.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension pid

}  # view udm_events__principal__process_ancestors

view: udm_events__principal__resource__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    label: "principal.resource.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    label: "principal.resource.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__principal__resource__attribute__labels

view: udm_events__principal__resource__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.resource.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.resource.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "principal"
    label: "principal.resource.attribute.permissions.type"
    view_label: "UDM"
    description: "Type of the permission."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMIN_READ", "ADMIN_WRITE", "DATA_READ", "DATA_WRITE", "UNKNOWN_PERMISSION_TYPE"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'UNKNOWN_PERMISSION_TYPE' WHEN 1 THEN 'ADMIN_WRITE' WHEN 2 THEN 'ADMIN_READ' WHEN 3 THEN 'DATA_WRITE' WHEN 4 THEN 'DATA_READ' END ;;
    group_label: "principal"
    label: "principal.resource.attribute.permissions.type_enum_name"
    view_label: "UDM"
    description: "Type of the permission."
  }  # dimension type_enum_name

}  # view udm_events__principal__resource__attribute__permissions

view: udm_events__principal__resource__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.resource.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.resource.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "principal"
    label: "principal.resource.attribute.roles.type"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "TYPE_UNSPECIFIED"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'TYPE_UNSPECIFIED' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "principal"
    label: "principal.resource.attribute.roles.type_enum_name"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type_enum_name

}  # view udm_events__principal__resource__attribute__roles

view: udm_events__principal__resource_ancestors__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    label: "principal.resource_ancestors.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    label: "principal.resource_ancestors.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__principal__resource_ancestors__attribute__labels

view: udm_events__principal__resource_ancestors {
  dimension: attribute {
    hidden: yes
  }  # dimension attribute

  dimension: attribute__labels {
    hidden: yes
  }  # dimension attribute__labels

  dimension: id {
    type: string
    sql: ${TABLE}.id ;;
    group_label: "principal"
    group_item_label: "principal.resource_ancestors.id [D]"
    label: "principal.resource_ancestors.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension id

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.resource_ancestors.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension name

  dimension: parent {
    type: string
    sql: ${TABLE}.parent ;;
    group_label: "principal"
    group_item_label: "principal.resource_ancestors.parent [D]"
    label: "principal.resource_ancestors.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension parent

  dimension: product_object_id {
    type: string
    sql: ${TABLE}.product_object_id ;;
    group_label: "principal"
    label: "principal.resource_ancestors.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension product_object_id

  dimension: resource_subtype {
    type: string
    sql: ${TABLE}.resource_subtype ;;
    group_label: "principal"
    label: "principal.resource_ancestors.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension resource_subtype

  dimension: resource_type {
    type: number
    sql: ${TABLE}.resource_type ;;
    group_label: "principal"
    label: "principal.resource_ancestors.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource_type

  dimension: resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "principal"
    label: "principal.resource_ancestors.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource_type_enum_name

}  # view udm_events__principal__resource_ancestors

view: udm_events__principal__user__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    label: "principal.user.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    label: "principal.user.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__principal__user__attribute__labels

view: udm_events__principal__user__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.user.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.user.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "principal"
    label: "principal.user.attribute.permissions.type"
    view_label: "UDM"
    description: "Type of the permission."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMIN_READ", "ADMIN_WRITE", "DATA_READ", "DATA_WRITE", "UNKNOWN_PERMISSION_TYPE"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'UNKNOWN_PERMISSION_TYPE' WHEN 1 THEN 'ADMIN_WRITE' WHEN 2 THEN 'ADMIN_READ' WHEN 3 THEN 'DATA_WRITE' WHEN 4 THEN 'DATA_READ' END ;;
    group_label: "principal"
    label: "principal.user.attribute.permissions.type_enum_name"
    view_label: "UDM"
    description: "Type of the permission."
  }  # dimension type_enum_name

}  # view udm_events__principal__user__attribute__permissions

view: udm_events__principal__user__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.user.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.user.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "principal"
    label: "principal.user.attribute.roles.type"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "TYPE_UNSPECIFIED"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'TYPE_UNSPECIFIED' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "principal"
    label: "principal.user.attribute.roles.type_enum_name"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type_enum_name

}  # view udm_events__principal__user__attribute__roles

view: udm_events__principal__user__department {
  dimension: udm_events__principal__user__department {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.user.department"
    view_label: "UDM"
    description: "User job department"
  }  # dimension udm_events__principal__user__department
}  # view udm_events__principal__user__department

view: udm_events__principal__user__email_addresses {
  dimension: udm_events__principal__user__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.user.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__principal__user__email_addresses
}  # view udm_events__principal__user__email_addresses

view: udm_events__principal__user__group_identifiers {
  dimension: udm_events__principal__user__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.user.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__principal__user__group_identifiers
}  # view udm_events__principal__user__group_identifiers

view: udm_events__principal__user__managers__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "principal"
    label: "principal.user.managers.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "principal"
    label: "principal.user.managers.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__principal__user__managers__attribute__labels

view: udm_events__principal__user__managers__attribute__roles {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "principal"
    label: "principal.user.managers.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "principal"
    label: "principal.user.managers.attribute.roles.type"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "TYPE_UNSPECIFIED"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'TYPE_UNSPECIFIED' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "principal"
    label: "principal.user.managers.attribute.roles.type_enum_name"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type_enum_name

}  # view udm_events__principal__user__managers__attribute__roles

view: udm_events__principal__user__managers__department {
  dimension: udm_events__principal__user__managers__department {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.user.managers.department"
    view_label: "UDM"
    description: "User job department"
  }  # dimension udm_events__principal__user__managers__department
}  # view udm_events__principal__user__managers__department

view: udm_events__principal__user__managers__email_addresses {
  dimension: udm_events__principal__user__managers__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.user.managers.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__principal__user__managers__email_addresses
}  # view udm_events__principal__user__managers__email_addresses

view: udm_events__principal__user__managers__group_identifiers {
  dimension: udm_events__principal__user__managers__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.user.managers.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__principal__user__managers__group_identifiers
}  # view udm_events__principal__user__managers__group_identifiers

view: udm_events__principal__user__managers__phone_numbers {
  dimension: udm_events__principal__user__managers__phone_numbers {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.user.managers.phone_numbers"
    view_label: "UDM"
    description: "Phone numbers for the user."
  }  # dimension udm_events__principal__user__managers__phone_numbers
}  # view udm_events__principal__user__managers__phone_numbers

view: udm_events__principal__user__managers {
  dimension: attribute {
    hidden: yes
  }  # dimension attribute

  dimension: attribute__labels {
    hidden: yes
  }  # dimension attribute__labels

  dimension: attribute__roles {
    hidden: yes
  }  # dimension attribute__roles

  dimension: company_name {
    type: string
    sql: ${TABLE}.company_name ;;
    group_label: "principal"
    label: "principal.user.managers.company_name"
    view_label: "UDM"
    description: "User job company name."
  }  # dimension company_name

  dimension: department {
    hidden: yes
  }  # dimension department

  dimension: email_addresses {
    hidden: yes
  }  # dimension email_addresses

  dimension: employee_id {
    type: string
    sql: ${TABLE}.employee_id ;;
    group_label: "principal"
    label: "principal.user.managers.employee_id"
    view_label: "UDM"
    description: "Human capital management identifier."
  }  # dimension employee_id

  dimension: first_name {
    type: string
    sql: ${TABLE}.first_name ;;
    group_label: "principal"
    label: "principal.user.managers.first_name"
    view_label: "UDM"
    description: "First name of the user (e.g. \"John\")."
  }  # dimension first_name

  dimension: group_identifiers {
    hidden: yes
  }  # dimension group_identifiers

  dimension: last_name {
    type: string
    sql: ${TABLE}.last_name ;;
    group_label: "principal"
    label: "principal.user.managers.last_name"
    view_label: "UDM"
    description: "Last name of the user (e.g. \"Locke\")."
  }  # dimension last_name

  dimension: personal_address {
    hidden: yes
  }  # dimension personal_address

  dimension: personal_address__city {
    type: string
    sql: ${TABLE}.personal_address.city ;;
    group_label: "principal"
    label: "principal.user.managers.personal_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension personal_address__city

  dimension: personal_address__country_or_region {
    type: string
    sql: ${TABLE}.personal_address.country_or_region ;;
    group_label: "principal"
    label: "principal.user.managers.personal_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension personal_address__country_or_region

  dimension: personal_address__name {
    type: string
    sql: ${TABLE}.personal_address.name ;;
    group_label: "principal"
    label: "principal.user.managers.personal_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension personal_address__name

  dimension: personal_address__state {
    type: string
    sql: ${TABLE}.personal_address.state ;;
    group_label: "principal"
    label: "principal.user.managers.personal_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension personal_address__state

  dimension: phone_numbers {
    hidden: yes
  }  # dimension phone_numbers

  dimension: product_object_id {
    type: string
    sql: ${TABLE}.product_object_id ;;
    group_label: "principal"
    label: "principal.user.managers.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension product_object_id

  dimension: title {
    type: string
    sql: ${TABLE}.title ;;
    group_label: "principal"
    label: "principal.user.managers.title"
    view_label: "UDM"
    description: "User job title."
  }  # dimension title

  dimension: user_display_name {
    type: string
    sql: ${TABLE}.user_display_name ;;
    group_label: "principal"
    label: "principal.user.managers.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension user_display_name

  dimension: userid {
    type: string
    sql: ${TABLE}.userid ;;
    group_label: "principal"
    label: "principal.user.managers.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension userid

  dimension: windows_sid {
    type: string
    sql: ${TABLE}.windows_sid ;;
    group_label: "principal"
    label: "principal.user.managers.windows_sid"
    view_label: "UDM"
    description: "The Microsoft Windows SID of the user."
  }  # dimension windows_sid

}  # view udm_events__principal__user__managers

view: udm_events__principal__user__phone_numbers {
  dimension: udm_events__principal__user__phone_numbers {
    type: string
    sql: ${TABLE} ;;
    group_label: "principal"
    label: "principal.user.phone_numbers"
    view_label: "UDM"
    description: "Phone numbers for the user."
  }  # dimension udm_events__principal__user__phone_numbers
}  # view udm_events__principal__user__phone_numbers

view: udm_events__principal__user__time_off {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "principal"
    label: "principal.user.time_off.description"
    view_label: "UDM"
    description: "Description of the leave if available (e.g. 'Vacation')."
  }  # dimension description

  dimension_group: principal__user__time_off__interval {
    type: duration
    intervals: [ second, minute, hour ]
    sql_start: TIMESTAMP_MICROS(IFNULL(${TABLE}.interval.start_time.seconds,0) * 1000000 + CAST((IFNULL(${TABLE}.interval.start_time.nanos,0) / 1000) as INT64)) ;;
    sql_end: TIMESTAMP_MICROS(IFNULL(${TABLE}.interval.end_time.seconds,0) * 1000000 + CAST((IFNULL(${TABLE}.interval.end_time.nanos,0) / 1000) as INT64)) ;;
    group_label: "principal"
    label: "principal.user.time_off.interval"
    view_label: "UDM"
    description: "Interval duration of the leave."
  }  # dimension principal__user__time_off__interval

}  # view udm_events__principal__user__time_off

view: udm_events__security_result__about__asset__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    label: "security_result.about.asset.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    label: "security_result.about.asset.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__security_result__about__asset__attribute__labels

view: udm_events__security_result__about__asset__attribute__permissions {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.about.asset.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__security_result__about__asset__attribute__permissions

view: udm_events__security_result__about__asset__ip {
  dimension: udm_events__security_result__about__asset__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.asset.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with an asset."
  }  # dimension udm_events__security_result__about__asset__ip
}  # view udm_events__security_result__about__asset__ip

view: udm_events__security_result__about__asset__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    group_item_label: "security_result.about.asset.labels.key [D]"
    label: "security_result.about.asset.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    group_item_label: "security_result.about.asset.labels.value [D]"
    label: "security_result.about.asset.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__security_result__about__asset__labels

view: udm_events__security_result__about__asset__mac {
  dimension: udm_events__security_result__about__asset__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.asset.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with an asset."
  }  # dimension udm_events__security_result__about__asset__mac
}  # view udm_events__security_result__about__asset__mac

view: udm_events__security_result__about__asset__software__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "security_result"
    label: "security_result.about.asset.software.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.about.asset.software.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__security_result__about__asset__software__permissions

view: udm_events__security_result__about__asset__software {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.about.asset.software.name"
    view_label: "UDM"
    description: "The name of the software."
  }  # dimension name

  dimension: permissions {
    hidden: yes
  }  # dimension permissions

  dimension: version {
    type: string
    sql: ${TABLE}.version ;;
    group_label: "security_result"
    label: "security_result.about.asset.software.version"
    view_label: "UDM"
    description: "The version of the software."
  }  # dimension version

}  # view udm_events__security_result__about__asset__software

view: udm_events__security_result__about__asset__vulnerabilities {
  dimension: cvss_base_score {
    type: number
    sql: ${TABLE}.cvss_base_score ;;
    group_label: "security_result"
    label: "security_result.about.asset.vulnerabilities.cvss_base_score"
    view_label: "UDM"
    description: "CVSS Base Score in the range of 0.0 to 10.0. Useful for sorting."
  }  # dimension cvss_base_score

  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "security_result"
    label: "security_result.about.asset.vulnerabilities.description"
    view_label: "UDM"
    description: "Description of the vulnerability."
  }  # dimension description

}  # view udm_events__security_result__about__asset__vulnerabilities

view: udm_events__security_result__about__domain__tech__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "security_result"
    label: "security_result.about.domain.tech.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

}  # view udm_events__security_result__about__domain__tech__attribute__permissions

view: udm_events__security_result__about__file__capabilities_tags {
  dimension: udm_events__security_result__about__file__capabilities_tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.file.capabilities_tags"
    view_label: "UDM"
    description: "Capabilities tags."
  }  # dimension udm_events__security_result__about__file__capabilities_tags
}  # view udm_events__security_result__about__file__capabilities_tags

view: udm_events__security_result__about__file__names {
  dimension: udm_events__security_result__about__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__security_result__about__file__names
}  # view udm_events__security_result__about__file__names

view: udm_events__security_result__about__group__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    label: "security_result.about.group.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    label: "security_result.about.group.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__security_result__about__group__attribute__labels

view: udm_events__security_result__about__investigation__comments {
  dimension: udm_events__security_result__about__investigation__comments {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.investigation.comments"
    view_label: "UDM"
    description: "Comment added by the Analyst."
  }  # dimension udm_events__security_result__about__investigation__comments
}  # view udm_events__security_result__about__investigation__comments

view: udm_events__security_result__about__ip {
  dimension: udm_events__security_result__about__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with a network connection."
  }  # dimension udm_events__security_result__about__ip
}  # view udm_events__security_result__about__ip

view: udm_events__security_result__about__ip_location {
  dimension: country_or_region {
    type: string
    sql: ${TABLE}.country_or_region ;;
    group_label: "security_result"
    group_item_label: "security_result.about.ip_location.country_or_region [D]"
    label: "security_result.about.ip_location.country_or_region"
    view_label: "UDM"
    description: "The country or region. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension country_or_region

}  # view udm_events__security_result__about__ip_location

view: udm_events__security_result__about__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    group_item_label: "security_result.about.labels.key [D]"
    label: "security_result.about.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    group_item_label: "security_result.about.labels.value [D]"
    label: "security_result.about.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__security_result__about__labels

view: udm_events__security_result__about__mac {
  dimension: udm_events__security_result__about__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with a device."
  }  # dimension udm_events__security_result__about__mac
}  # view udm_events__security_result__about__mac

view: udm_events__security_result__about__nat_ip {
  dimension: udm_events__security_result__about__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.nat_ip"
    view_label: "UDM"
    description: "A list of NAT translated IP addresses associated with a network connection."
  }  # dimension udm_events__security_result__about__nat_ip
}  # view udm_events__security_result__about__nat_ip

view: udm_events__security_result__about__process__command_line_history {
  dimension: udm_events__security_result__about__process__command_line_history {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.process.command_line_history"
    view_label: "UDM"
    description: "The command line history of the process."
  }  # dimension udm_events__security_result__about__process__command_line_history
}  # view udm_events__security_result__about__process__command_line_history

view: udm_events__security_result__about__process__file__names {
  dimension: udm_events__security_result__about__process__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.process.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__security_result__about__process__file__names
}  # view udm_events__security_result__about__process__file__names

view: udm_events__security_result__about__resource__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    label: "security_result.about.resource.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    label: "security_result.about.resource.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__security_result__about__resource__attribute__labels

view: udm_events__security_result__about__resource_ancestors {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.about.resource_ancestors.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension name

  dimension: product_object_id {
    type: string
    sql: ${TABLE}.product_object_id ;;
    group_label: "security_result"
    label: "security_result.about.resource_ancestors.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension product_object_id

  dimension: resource_type {
    type: number
    sql: ${TABLE}.resource_type ;;
    group_label: "security_result"
    label: "security_result.about.resource_ancestors.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource_type

  dimension: resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "security_result"
    label: "security_result.about.resource_ancestors.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource_type_enum_name

}  # view udm_events__security_result__about__resource_ancestors

view: udm_events__security_result__about__user__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__security_result__about__user__attribute__labels

view: udm_events__security_result__about__user__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__security_result__about__user__attribute__permissions

view: udm_events__security_result__about__user__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

}  # view udm_events__security_result__about__user__attribute__roles

view: udm_events__security_result__about__user__email_addresses {
  dimension: udm_events__security_result__about__user__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.user.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__security_result__about__user__email_addresses
}  # view udm_events__security_result__about__user__email_addresses

view: udm_events__security_result__about__user__group_identifiers {
  dimension: udm_events__security_result__about__user__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.about.user.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__security_result__about__user__group_identifiers
}  # view udm_events__security_result__about__user__group_identifiers

view: udm_events__security_result__about__user_management_chain {
  dimension: userid {
    type: string
    sql: ${TABLE}.userid ;;
    group_label: "security_result"
    label: "security_result.about.user_management_chain.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension userid

}  # view udm_events__security_result__about__user_management_chain

view: udm_events__security_result__action {
  dimension: udm_events__security_result__action {
    type: number
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.action"
    view_label: "UDM"
    description: "Actions taken for this event."
  }  # dimension udm_events__security_result__action
}  # view udm_events__security_result__action

view: udm_events__security_result__action_enum_name {
  dimension: udm_events__security_result__action_enum_name {
    type: string
    suggestions: ["ALLOW", "ALLOW_WITH_MODIFICATION", "BLOCK", "CHALLENGE", "FAIL", "QUARANTINE", "UNKNOWN_ACTION"]
    sql: CASE ${TABLE} WHEN 0 THEN 'UNKNOWN_ACTION' WHEN 1 THEN 'ALLOW' WHEN 2 THEN 'BLOCK' WHEN 3 THEN 'ALLOW_WITH_MODIFICATION' WHEN 4 THEN 'QUARANTINE' WHEN 5 THEN 'FAIL' WHEN 6 THEN 'CHALLENGE' END ;;
    group_label: "security_result"
    label: "security_result.action_enum_name"
    view_label: "UDM"
    description: "Actions taken for this event."
  }  # dimension udm_events__security_result__action_enum_name
}  # view udm_events__security_result__action_enum_name

view: udm_events__security_result__associations {
  dimension: id {
    type: string
    sql: ${TABLE}.id ;;
    group_label: "security_result"
    label: "security_result.associations.id"
    view_label: "UDM"
    description: "Unique association id generated by mandiant."
  }  # dimension id

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.associations.name"
    view_label: "UDM"
    description: "Name of the threat actor/malware."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "security_result"
    label: "security_result.associations.type"
    view_label: "UDM"
    description: "Signifies the type of association."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ASSOCIATION_TYPE_UNSPECIFIED", "MALWARE", "THREAT_ACTOR"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'ASSOCIATION_TYPE_UNSPECIFIED' WHEN 1 THEN 'THREAT_ACTOR' WHEN 2 THEN 'MALWARE' END ;;
    group_label: "security_result"
    label: "security_result.associations.type_enum_name"
    view_label: "UDM"
    description: "Signifies the type of association."
  }  # dimension type_enum_name

}  # view udm_events__security_result__associations

view: udm_events__security_result__attack_details__tactics {
  dimension: id {
    type: string
    sql: ${TABLE}.id ;;
    group_label: "security_result"
    label: "security_result.attack_details.tactics.id"
    view_label: "UDM"
    description: "Tactic ID (e.g. \"TA0043\")."
  }  # dimension id

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.attack_details.tactics.name"
    view_label: "UDM"
    description: "Tactic Name (e.g. \"Reconnaissance\")"
  }  # dimension name

}  # view udm_events__security_result__attack_details__tactics

view: udm_events__security_result__attack_details__techniques {
  dimension: id {
    type: string
    sql: ${TABLE}.id ;;
    group_label: "security_result"
    label: "security_result.attack_details.techniques.id"
    view_label: "UDM"
    description: "Technique ID (e.g. \"T1595\")."
  }  # dimension id

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "security_result"
    label: "security_result.attack_details.techniques.name"
    view_label: "UDM"
    description: "Technique Name (e.g. \"Active Scanning\")."
  }  # dimension name

  dimension: subtechnique_id {
    type: string
    sql: ${TABLE}.subtechnique_id ;;
    group_label: "security_result"
    label: "security_result.attack_details.techniques.subtechnique_id"
    view_label: "UDM"
    description: "Subtechnique ID (e.g. \"T1595.001\")."
  }  # dimension subtechnique_id

  dimension: subtechnique_name {
    type: string
    sql: ${TABLE}.subtechnique_name ;;
    group_label: "security_result"
    label: "security_result.attack_details.techniques.subtechnique_name"
    view_label: "UDM"
    description: "Subtechnique Name (e.g. \"Scanning IP Blocks\")."
  }  # dimension subtechnique_name

}  # view udm_events__security_result__attack_details__techniques

view: udm_events__security_result__category {
  dimension: udm_events__security_result__category {
    type: number
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.category"
    view_label: "UDM"
    description: "The security category."
  }  # dimension udm_events__security_result__category
}  # view udm_events__security_result__category

view: udm_events__security_result__category_enum_name {
  dimension: udm_events__security_result__category_enum_name {
    type: string
    suggestions: ["ACL_VIOLATION", "AUTH_VIOLATION", "DATA_AT_REST", "DATA_DESTRUCTION", "DATA_EXFILTRATION", "EXPLOIT", "MAIL_PHISHING", "MAIL_SPAM", "MAIL_SPOOFING", "NETWORK_CATEGORIZED_CONTENT", "NETWORK_COMMAND_AND_CONTROL", "NETWORK_DENIAL_OF_SERVICE", "NETWORK_MALICIOUS", "NETWORK_RECON", "NETWORK_SUSPICIOUS", "PHISHING", "POLICY_VIOLATION", "SOCIAL_ENGINEERING", "SOFTWARE_MALICIOUS", "SOFTWARE_PUA", "SOFTWARE_SUSPICIOUS", "TOR_EXIT_NODE", "UNKNOWN_CATEGORY"]
    sql: CASE ${TABLE} WHEN 0 THEN 'UNKNOWN_CATEGORY' WHEN 10000 THEN 'SOFTWARE_MALICIOUS' WHEN 10100 THEN 'SOFTWARE_SUSPICIOUS' WHEN 10200 THEN 'SOFTWARE_PUA' WHEN 20000 THEN 'NETWORK_MALICIOUS' WHEN 20100 THEN 'NETWORK_SUSPICIOUS' WHEN 20200 THEN 'NETWORK_CATEGORIZED_CONTENT' WHEN 20300 THEN 'NETWORK_DENIAL_OF_SERVICE' WHEN 20400 THEN 'NETWORK_RECON' WHEN 20500 THEN 'NETWORK_COMMAND_AND_CONTROL' WHEN 30000 THEN 'ACL_VIOLATION' WHEN 40000 THEN 'AUTH_VIOLATION' WHEN 50000 THEN 'EXPLOIT' WHEN 60000 THEN 'DATA_EXFILTRATION' WHEN 60100 THEN 'DATA_AT_REST' WHEN 60200 THEN 'DATA_DESTRUCTION' WHEN 60300 THEN 'TOR_EXIT_NODE' WHEN 70000 THEN 'MAIL_SPAM' WHEN 70100 THEN 'MAIL_PHISHING' WHEN 70200 THEN 'MAIL_SPOOFING' WHEN 80000 THEN 'POLICY_VIOLATION' WHEN 90001 THEN 'SOCIAL_ENGINEERING' WHEN 90002 THEN 'PHISHING' END ;;
    group_label: "security_result"
    label: "security_result.category_enum_name"
    view_label: "UDM"
    description: "The security category."
  }  # dimension udm_events__security_result__category_enum_name
}  # view udm_events__security_result__category_enum_name

view: udm_events__security_result__category_details {
  dimension: udm_events__security_result__category_details {
    type: string
    sql: ${TABLE} ;;
    group_label: "security_result"
    label: "security_result.category_details"
    view_label: "UDM"
    description: "For vendor-specific categories. For web categorization, put type in here such as \"gambling\", \"porn\", etc."
  }  # dimension udm_events__security_result__category_details
}  # view udm_events__security_result__category_details

view: udm_events__security_result__detection_fields {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    label: "security_result.detection_fields.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: source {
    type: string
    sql: ${TABLE}.source ;;
    group_label: "security_result"
    label: "security_result.detection_fields.source"
    view_label: "UDM"
    description: "@hide_from_doc"
  }  # dimension source

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    label: "security_result.detection_fields.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__security_result__detection_fields

view: udm_events__security_result__outcomes {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    label: "security_result.outcomes.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    label: "security_result.outcomes.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__security_result__outcomes

view: udm_events__security_result__rule_labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "security_result"
    label: "security_result.rule_labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "security_result"
    label: "security_result.rule_labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__security_result__rule_labels

view: udm_events__security_result {
  dimension: about {
    hidden: yes
  }  # dimension about

  dimension: about__administrative_domain {
    type: string
    sql: ${TABLE}.about.administrative_domain ;;
    group_label: "security_result"
    label: "security_result.about.administrative_domain"
    view_label: "UDM"
    description: "Domain which the device belongs to (for example, the Microsoft Windows domain)."
  }  # dimension about__administrative_domain

  dimension: about__application {
    type: string
    sql: ${TABLE}.about.application ;;
    group_label: "security_result"
    label: "security_result.about.application"
    view_label: "UDM"
    description: "The name of an application or service. Some SSO solutions only capture the name of a target application such as \"Atlassian\" or \"Chronicle\"."
  }  # dimension about__application

  dimension: about__artifact {
    hidden: yes
  }  # dimension about__artifact

  dimension_group: security_result__about__artifact__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.artifact.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.artifact.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.artifact.first_seen_time"
    view_label: "UDM"
    description: "First seen timestamp of the IP in the customer's environment."
  }  # dimension security_result__about__artifact__first_seen_time

  dimension_group: security_result__about__artifact__last_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.artifact.last_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.artifact.last_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.artifact.last_seen_time"
    view_label: "UDM"
    description: "Last seen timestamp of the IP address in the customer's environment."
  }  # dimension security_result__about__artifact__last_seen_time

  dimension: about__asset {
    hidden: yes
  }  # dimension about__asset

  dimension: about__asset__asset_id {
    type: string
    sql: ${TABLE}.about.asset.asset_id ;;
    group_label: "security_result"
    label: "security_result.about.asset.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension about__asset__asset_id

  dimension: about__asset__attribute {
    hidden: yes
  }  # dimension about__asset__attribute

  dimension: about__asset__attribute__cloud {
    hidden: yes
  }  # dimension about__asset__attribute__cloud

  dimension: about__asset__attribute__cloud__availability_zone {
    type: string
    sql: ${TABLE}.about.asset.attribute.cloud.availability_zone ;;
    group_label: "security_result"
    label: "security_result.about.asset.attribute.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name)."
  }  # dimension about__asset__attribute__cloud__availability_zone

  dimension: about__asset__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.about.asset.attribute.cloud.environment ;;
    group_label: "security_result"
    label: "security_result.about.asset.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension about__asset__attribute__cloud__environment

  dimension: about__asset__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.about.asset.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "security_result"
    label: "security_result.about.asset.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension about__asset__attribute__cloud__environment_enum_name

  dimension: about__asset__attribute__cloud__project {
    hidden: yes
  }  # dimension about__asset__attribute__cloud__project

  dimension: about__asset__attribute__cloud__project__id {
    type: string
    sql: ${TABLE}.about.asset.attribute.cloud.project.id ;;
    group_label: "security_result"
    group_item_label: "security_result.about.asset.attribute.cloud.project.id [D]"
    label: "security_result.about.asset.attribute.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__asset__attribute__cloud__project__id

  dimension: about__asset__attribute__cloud__project__name {
    type: string
    sql: ${TABLE}.about.asset.attribute.cloud.project.name ;;
    group_label: "security_result"
    group_item_label: "security_result.about.asset.attribute.cloud.project.name [D]"
    label: "security_result.about.asset.attribute.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__asset__attribute__cloud__project__name

  dimension: about__asset__attribute__cloud__project__product_object_id {
    type: string
    sql: ${TABLE}.about.asset.attribute.cloud.project.product_object_id ;;
    group_label: "security_result"
    group_item_label: "security_result.about.asset.attribute.cloud.project.product_object_id [D]"
    label: "security_result.about.asset.attribute.cloud.project.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__asset__attribute__cloud__project__product_object_id

  dimension: about__asset__attribute__cloud__project__resource_type {
    type: number
    sql: ${TABLE}.about.asset.attribute.cloud.project.resource_type ;;
    group_label: "security_result"
    group_item_label: "security_result.about.asset.attribute.cloud.project.resource_type [D]"
    label: "security_result.about.asset.attribute.cloud.project.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__asset__attribute__cloud__project__resource_type

  dimension: about__asset__attribute__cloud__project__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.about.asset.attribute.cloud.project.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "security_result"
    group_item_label: "security_result.about.asset.attribute.cloud.project.resource_type_enum_name [D]"
    label: "security_result.about.asset.attribute.cloud.project.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__asset__attribute__cloud__project__resource_type_enum_name

  dimension_group: security_result__about__asset__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.asset.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.asset.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.asset.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension security_result__about__asset__attribute__creation_time

  dimension: about__asset__attribute__labels {
    hidden: yes
  }  # dimension about__asset__attribute__labels

  dimension_group: security_result__about__asset__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.asset.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.asset.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.asset.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension security_result__about__asset__attribute__last_update_time

  dimension: about__asset__attribute__permissions {
    hidden: yes
  }  # dimension about__asset__attribute__permissions

  dimension: about__asset__category {
    type: string
    sql: ${TABLE}.about.asset.category ;;
    group_label: "security_result"
    label: "security_result.about.asset.category"
    view_label: "UDM"
    description: "The category of the asset (e.g. \"End User Asset\", \"Workstation\", \"Server\")."
  }  # dimension about__asset__category

  dimension: about__asset__hostname {
    type: string
    sql: ${TABLE}.about.asset.hostname ;;
    group_label: "security_result"
    label: "security_result.about.asset.hostname"
    view_label: "UDM"
    description: "Asset hostname or domain name field."
  }  # dimension about__asset__hostname

  dimension: about__asset__ip {
    hidden: yes
  }  # dimension about__asset__ip

  dimension: about__asset__labels {
    hidden: yes
  }  # dimension about__asset__labels

  dimension: about__asset__location {
    hidden: yes
  }  # dimension about__asset__location

  dimension: about__asset__location__city {
    type: string
    sql: ${TABLE}.about.asset.location.city ;;
    group_label: "security_result"
    label: "security_result.about.asset.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension about__asset__location__city

  dimension: about__asset__location__country_or_region {
    type: string
    sql: ${TABLE}.about.asset.location.country_or_region ;;
    group_label: "security_result"
    label: "security_result.about.asset.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension about__asset__location__country_or_region

  dimension: about__asset__location__state {
    type: string
    sql: ${TABLE}.about.asset.location.state ;;
    group_label: "security_result"
    label: "security_result.about.asset.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension about__asset__location__state

  dimension: about__asset__mac {
    hidden: yes
  }  # dimension about__asset__mac

  dimension: about__asset__product_object_id {
    type: string
    sql: ${TABLE}.about.asset.product_object_id ;;
    group_label: "security_result"
    label: "security_result.about.asset.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID  or similar)."
  }  # dimension about__asset__product_object_id

  dimension: about__asset__software {
    hidden: yes
  }  # dimension about__asset__software

  dimension: about__asset__vulnerabilities {
    hidden: yes
  }  # dimension about__asset__vulnerabilities

  dimension: about__asset_id {
    type: string
    sql: ${TABLE}.about.asset_id ;;
    group_label: "security_result"
    label: "security_result.about.asset_id"
    view_label: "UDM"
    description: "The asset ID."
  }  # dimension about__asset_id

  dimension: about__cloud {
    hidden: yes
  }  # dimension about__cloud

  dimension: about__cloud__availability_zone {
    type: string
    sql: ${TABLE}.about.cloud.availability_zone ;;
    group_label: "security_result"
    group_item_label: "security_result.about.cloud.availability_zone [D]"
    label: "security_result.about.cloud.availability_zone"
    view_label: "UDM"
    description: "The cloud environment availability zone (different from region which is location.name). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__availability_zone

  dimension: about__cloud__project {
    hidden: yes
  }  # dimension about__cloud__project

  dimension: about__cloud__project__id {
    type: string
    sql: ${TABLE}.about.cloud.project.id ;;
    group_label: "security_result"
    group_item_label: "security_result.about.cloud.project.id [D]"
    label: "security_result.about.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__project__id

  dimension: about__cloud__project__name {
    type: string
    sql: ${TABLE}.about.cloud.project.name ;;
    group_label: "security_result"
    group_item_label: "security_result.about.cloud.project.name [D]"
    label: "security_result.about.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__project__name

  dimension: about__cloud__project__parent {
    type: string
    sql: ${TABLE}.about.cloud.project.parent ;;
    group_label: "security_result"
    group_item_label: "security_result.about.cloud.project.parent [D]"
    label: "security_result.about.cloud.project.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__project__parent

  dimension: about__cloud__project__product_object_id {
    type: string
    sql: ${TABLE}.about.cloud.project.product_object_id ;;
    group_label: "security_result"
    group_item_label: "security_result.about.cloud.project.product_object_id [D]"
    label: "security_result.about.cloud.project.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar) [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__cloud__project__product_object_id

  dimension: about__domain {
    hidden: yes
  }  # dimension about__domain

  dimension: about__domain__admin {
    hidden: yes
  }  # dimension about__domain__admin

  dimension: about__domain__admin__userid {
    type: string
    sql: ${TABLE}.about.domain.admin.userid ;;
    group_label: "security_result"
    label: "security_result.about.domain.admin.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension about__domain__admin__userid

  dimension: about__domain__name {
    type: string
    sql: ${TABLE}.about.domain.name ;;
    group_label: "security_result"
    label: "security_result.about.domain.name"
    view_label: "UDM"
    description: "The domain name."
  }  # dimension about__domain__name

  dimension: about__domain__tech {
    hidden: yes
  }  # dimension about__domain__tech

  dimension: about__domain__tech__attribute {
    hidden: yes
  }  # dimension about__domain__tech__attribute

  dimension: about__domain__tech__attribute__permissions {
    hidden: yes
  }  # dimension about__domain__tech__attribute__permissions

  dimension: about__email {
    type: string
    sql: ${TABLE}.about.email ;;
    group_label: "security_result"
    label: "security_result.about.email"
    view_label: "UDM"
    description: "Email address. Only filled in for security_result.about"
  }  # dimension about__email

  dimension: about__file {
    hidden: yes
  }  # dimension about__file

  dimension: about__file__ahash {
    type: string
    sql: ${TABLE}.about.file.ahash ;;
    group_label: "security_result"
    group_item_label: "security_result.about.file.ahash [D]"
    label: "security_result.about.file.ahash"
    view_label: "UDM"
    description: "Deprecated. Use authentihash instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__file__ahash

  dimension: about__file__capabilities_tags {
    hidden: yes
  }  # dimension about__file__capabilities_tags

  dimension_group: security_result__about__file__first_seen_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.file.first_seen_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.file.first_seen_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.file.first_seen_time"
    view_label: "UDM"
    description: "Timestamp the file was first seen in the customer's environment."
  }  # dimension security_result__about__file__first_seen_time

  dimension: about__file__full_path {
    type: string
    sql: ${TABLE}.about.file.full_path ;;
    group_label: "security_result"
    label: "security_result.about.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension about__file__full_path

  dimension_group: security_result__about__file__last_modification_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.file.last_modification_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.file.last_modification_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.file.last_modification_time"
    view_label: "UDM"
    description: "Timestamp when the file was last updated."
  }  # dimension security_result__about__file__last_modification_time

  dimension: about__file__md5 {
    type: string
    sql: ${TABLE}.about.file.md5 ;;
    group_label: "security_result"
    label: "security_result.about.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension about__file__md5

  dimension: about__file__mime_type {
    type: string
    sql: ${TABLE}.about.file.mime_type ;;
    group_label: "security_result"
    label: "security_result.about.file.mime_type"
    view_label: "UDM"
    description: "The MIME (Multipurpose Internet Mail Extensions) type of the file, for example \"PE\", \"PDF\", \"powershell script\", etc."
  }  # dimension about__file__mime_type

  dimension: about__file__names {
    hidden: yes
  }  # dimension about__file__names

  dimension: about__file__sha1 {
    type: string
    sql: ${TABLE}.about.file.sha1 ;;
    group_label: "security_result"
    label: "security_result.about.file.sha1"
    view_label: "UDM"
    description: "The SHA1 hash of the file."
  }  # dimension about__file__sha1

  dimension: about__file__sha256 {
    type: string
    sql: ${TABLE}.about.file.sha256 ;;
    group_label: "security_result"
    label: "security_result.about.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension about__file__sha256

  dimension: about__file__size {
    type: number
    sql: ${TABLE}.about.file.size ;;
    group_label: "security_result"
    label: "security_result.about.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension about__file__size

  dimension: about__file__ssdeep {
    type: string
    sql: ${TABLE}.about.file.ssdeep ;;
    group_label: "security_result"
    label: "security_result.about.file.ssdeep"
    view_label: "UDM"
    description: "Ssdeep of the file"
  }  # dimension about__file__ssdeep

  dimension: about__file__stat_inode {
    type: number
    sql: ${TABLE}.about.file.stat_inode ;;
    group_label: "security_result"
    label: "security_result.about.file.stat_inode"
    view_label: "UDM"
    description: "The file identifier. Unique identifier of object within a file system."
  }  # dimension about__file__stat_inode

  dimension: about__file__stat_mode {
    type: number
    sql: ${TABLE}.about.file.stat_mode ;;
    group_label: "security_result"
    label: "security_result.about.file.stat_mode"
    view_label: "UDM"
    description: "The mode of the file. A bit string indicating the permissions and privileges of the file."
  }  # dimension about__file__stat_mode

  dimension: about__group {
    hidden: yes
  }  # dimension about__group

  dimension: about__group__attribute {
    hidden: yes
  }  # dimension about__group__attribute

  dimension: about__group__attribute__labels {
    hidden: yes
  }  # dimension about__group__attribute__labels

  dimension: about__group__group_display_name {
    type: string
    sql: ${TABLE}.about.group.group_display_name ;;
    group_label: "security_result"
    label: "security_result.about.group.group_display_name"
    view_label: "UDM"
    description: "Group display name. e.g. \"Finance\"."
  }  # dimension about__group__group_display_name

  dimension: about__group__product_object_id {
    type: string
    sql: ${TABLE}.about.group.product_object_id ;;
    group_label: "security_result"
    label: "security_result.about.group.product_object_id"
    view_label: "UDM"
    description: "Product globally unique user object identifier, such as an LDAP Object Identifier."
  }  # dimension about__group__product_object_id

  dimension: about__hostname {
    type: string
    sql: ${TABLE}.about.hostname ;;
    group_label: "security_result"
    label: "security_result.about.hostname"
    view_label: "UDM"
    description: "Client hostname or domain name field. Hostname also doubles as the domain for remote entities."
  }  # dimension about__hostname

  dimension: about__investigation {
    hidden: yes
  }  # dimension about__investigation

  dimension: about__investigation__comments {
    hidden: yes
  }  # dimension about__investigation__comments

  dimension: about__investigation__risk_score {
    type: number
    sql: ${TABLE}.about.investigation.risk_score ;;
    group_label: "security_result"
    label: "security_result.about.investigation.risk_score"
    view_label: "UDM"
    description: "Risk score for a finding set by an analyst."
  }  # dimension about__investigation__risk_score

  dimension: about__investigation__root_cause {
    type: string
    sql: ${TABLE}.about.investigation.root_cause ;;
    group_label: "security_result"
    label: "security_result.about.investigation.root_cause"
    view_label: "UDM"
    description: "Root cause of the Alert or Finding set by analyst."
  }  # dimension about__investigation__root_cause

  dimension: about__investigation__severity_score {
    type: number
    sql: ${TABLE}.about.investigation.severity_score ;;
    group_label: "security_result"
    label: "security_result.about.investigation.severity_score"
    view_label: "UDM"
    description: "Severity score for a finding set by an analyst."
  }  # dimension about__investigation__severity_score

  dimension: about__investigation__status {
    type: number
    sql: ${TABLE}.about.investigation.status ;;
    group_label: "security_result"
    label: "security_result.about.investigation.status"
    view_label: "UDM"
    description: "Describes the workflow status of a finding."
  }  # dimension about__investigation__status

  dimension: about__investigation__status_enum_name {
    type: string
    suggestions: ["CLOSED", "NEW", "OPEN", "REVIEWED", "STATUS_UNSPECIFIED"]
    sql: CASE ${TABLE}.about.investigation.status WHEN 0 THEN 'STATUS_UNSPECIFIED' WHEN 1 THEN 'NEW' WHEN 2 THEN 'REVIEWED' WHEN 3 THEN 'CLOSED' WHEN 4 THEN 'OPEN' END ;;
    group_label: "security_result"
    label: "security_result.about.investigation.status_enum_name"
    view_label: "UDM"
    description: "Describes the workflow status of a finding."
  }  # dimension about__investigation__status_enum_name

  dimension: about__investigation__verdict {
    type: number
    sql: ${TABLE}.about.investigation.verdict ;;
    group_label: "security_result"
    label: "security_result.about.investigation.verdict"
    view_label: "UDM"
    description: "Describes reason a finding investigation was resolved."
  }  # dimension about__investigation__verdict

  dimension: about__investigation__verdict_enum_name {
    type: string
    suggestions: ["FALSE_POSITIVE", "TRUE_POSITIVE", "VERDICT_UNSPECIFIED"]
    sql: CASE ${TABLE}.about.investigation.verdict WHEN 0 THEN 'VERDICT_UNSPECIFIED' WHEN 1 THEN 'TRUE_POSITIVE' WHEN 2 THEN 'FALSE_POSITIVE' END ;;
    group_label: "security_result"
    label: "security_result.about.investigation.verdict_enum_name"
    view_label: "UDM"
    description: "Describes reason a finding investigation was resolved."
  }  # dimension about__investigation__verdict_enum_name

  dimension: about__ip {
    hidden: yes
  }  # dimension about__ip

  dimension: about__ip_location {
    hidden: yes
  }  # dimension about__ip_location

  dimension: about__labels {
    hidden: yes
  }  # dimension about__labels

  dimension: about__location {
    hidden: yes
  }  # dimension about__location

  dimension: about__location__city {
    type: string
    sql: ${TABLE}.about.location.city ;;
    group_label: "security_result"
    label: "security_result.about.location.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension about__location__city

  dimension: about__location__country_or_region {
    type: string
    sql: ${TABLE}.about.location.country_or_region ;;
    group_label: "security_result"
    label: "security_result.about.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension about__location__country_or_region

  dimension: about__location__name {
    type: string
    sql: ${TABLE}.about.location.name ;;
    group_label: "security_result"
    label: "security_result.about.location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension about__location__name

  dimension: about__location__state {
    type: string
    sql: ${TABLE}.about.location.state ;;
    group_label: "security_result"
    label: "security_result.about.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension about__location__state

  dimension: about__mac {
    hidden: yes
  }  # dimension about__mac

  dimension: about__namespace {
    type: string
    sql: ${TABLE}.about.namespace ;;
    group_label: "security_result"
    label: "security_result.about.namespace"
    view_label: "UDM"
    description: "Namespace which the device belongs to (e.g. AD forest) Uses for this field include Microsoft Windows AD forest, name of subsidiary or acquisition, etc."
  }  # dimension about__namespace

  dimension: about__nat_ip {
    hidden: yes
  }  # dimension about__nat_ip

  dimension: about__object_reference {
    hidden: yes
  }  # dimension about__object_reference

  dimension: about__object_reference__id {
    type: string
    sql: ${TABLE}.about.object_reference.id ;;
    group_label: "security_result"
    label: "security_result.about.object_reference.id"
    view_label: "UDM"
    description: "Full raw ID."
  }  # dimension about__object_reference__id

  dimension: about__platform {
    type: number
    sql: ${TABLE}.about.platform ;;
    group_label: "security_result"
    label: "security_result.about.platform"
    view_label: "UDM"
    description: "Platform."
  }  # dimension about__platform

  dimension: about__platform_enum_name {
    type: string
    suggestions: ["ANDROID", "AWS", "AZURE", "CHROME_OS", "GCP", "IOS", "LINUX", "MAC", "UNKNOWN_PLATFORM", "WINDOWS"]
    sql: CASE ${TABLE}.about.platform WHEN 0 THEN 'UNKNOWN_PLATFORM' WHEN 1 THEN 'WINDOWS' WHEN 2 THEN 'MAC' WHEN 3 THEN 'LINUX' WHEN 4 THEN 'GCP' WHEN 5 THEN 'AWS' WHEN 6 THEN 'AZURE' WHEN 7 THEN 'IOS' WHEN 8 THEN 'ANDROID' WHEN 9 THEN 'CHROME_OS' END ;;
    group_label: "security_result"
    label: "security_result.about.platform_enum_name"
    view_label: "UDM"
    description: "Platform."
  }  # dimension about__platform_enum_name

  dimension: about__platform_version {
    type: string
    sql: ${TABLE}.about.platform_version ;;
    group_label: "security_result"
    label: "security_result.about.platform_version"
    view_label: "UDM"
    description: "Platform version. For example, \"Microsoft Windows 1803\"."
  }  # dimension about__platform_version

  dimension: about__port {
    type: number
    value_format: "#"
    sql: ${TABLE}.about.port ;;
    group_label: "security_result"
    label: "security_result.about.port"
    view_label: "UDM"
    description: "Source or destination network port number when a specific network connection is described within an event."
  }  # dimension about__port

  dimension: about__process {
    hidden: yes
  }  # dimension about__process

  dimension: about__process__command_line {
    type: string
    sql: ${TABLE}.about.process.command_line ;;
    group_label: "security_result"
    label: "security_result.about.process.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension about__process__command_line

  dimension: about__process__command_line_history {
    hidden: yes
  }  # dimension about__process__command_line_history

  dimension: about__process__file {
    hidden: yes
  }  # dimension about__process__file

  dimension: about__process__file__full_path {
    type: string
    sql: ${TABLE}.about.process.file.full_path ;;
    group_label: "security_result"
    label: "security_result.about.process.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension about__process__file__full_path

  dimension: about__process__file__md5 {
    type: string
    sql: ${TABLE}.about.process.file.md5 ;;
    group_label: "security_result"
    label: "security_result.about.process.file.md5"
    view_label: "UDM"
    description: "The MD5 hash of the file."
  }  # dimension about__process__file__md5

  dimension: about__process__file__names {
    hidden: yes
  }  # dimension about__process__file__names

  dimension: about__process__file__sha256 {
    type: string
    sql: ${TABLE}.about.process.file.sha256 ;;
    group_label: "security_result"
    label: "security_result.about.process.file.sha256"
    view_label: "UDM"
    description: "The SHA256 hash of the file."
  }  # dimension about__process__file__sha256

  dimension: about__process__file__size {
    type: number
    sql: ${TABLE}.about.process.file.size ;;
    group_label: "security_result"
    label: "security_result.about.process.file.size"
    view_label: "UDM"
    description: "The size of the file in bytes."
  }  # dimension about__process__file__size

  dimension: about__process__parent_pid {
    type: string
    sql: ${TABLE}.about.process.parent_pid ;;
    group_label: "security_result"
    group_item_label: "security_result.about.process.parent_pid [D]"
    label: "security_result.about.process.parent_pid"
    view_label: "UDM"
    description: "The ID of the parent process. Deprecated: use parent_process.pid instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__process__parent_pid

  dimension: about__process__parent_process {
    hidden: yes
  }  # dimension about__process__parent_process

  dimension: about__process__parent_process__pid {
    type: string
    sql: ${TABLE}.about.process.parent_process.pid ;;
    group_label: "security_result"
    label: "security_result.about.process.parent_process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension about__process__parent_process__pid

  dimension: about__process__pid {
    type: string
    sql: ${TABLE}.about.process.pid ;;
    group_label: "security_result"
    label: "security_result.about.process.pid"
    view_label: "UDM"
    description: "The process ID."
  }  # dimension about__process__pid

  dimension: about__process__product_specific_process_id {
    type: string
    sql: ${TABLE}.about.process.product_specific_process_id ;;
    group_label: "security_result"
    label: "security_result.about.process.product_specific_process_id"
    view_label: "UDM"
    description: "A product specific process id."
  }  # dimension about__process__product_specific_process_id

  dimension: about__registry {
    hidden: yes
  }  # dimension about__registry

  dimension: about__registry__registry_key {
    type: string
    sql: ${TABLE}.about.registry.registry_key ;;
    group_label: "security_result"
    label: "security_result.about.registry.registry_key"
    view_label: "UDM"
    description: "Registry key associated with an application or system component (e.g., HKEY_, HKCU\Environment...)."
  }  # dimension about__registry__registry_key

  dimension: about__registry__registry_value_data {
    type: string
    sql: ${TABLE}.about.registry.registry_value_data ;;
    group_label: "security_result"
    label: "security_result.about.registry.registry_value_data"
    view_label: "UDM"
    description: "Data associated with a registry value (e.g. %USERPROFILE%\Local Settings\Temp)."
  }  # dimension about__registry__registry_value_data

  dimension: about__resource {
    hidden: yes
  }  # dimension about__resource

  dimension: about__resource__attribute {
    hidden: yes
  }  # dimension about__resource__attribute

  dimension_group: security_result__about__resource__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.resource.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.resource.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.resource.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension security_result__about__resource__attribute__creation_time

  dimension: about__resource__attribute__labels {
    hidden: yes
  }  # dimension about__resource__attribute__labels

  dimension_group: security_result__about__resource__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.resource.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.resource.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.resource.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension security_result__about__resource__attribute__last_update_time

  dimension: about__resource__id {
    type: string
    sql: ${TABLE}.about.resource.id ;;
    group_label: "security_result"
    group_item_label: "security_result.about.resource.id [D]"
    label: "security_result.about.resource.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__resource__id

  dimension: about__resource__name {
    type: string
    sql: ${TABLE}.about.resource.name ;;
    group_label: "security_result"
    label: "security_result.about.resource.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension about__resource__name

  dimension: about__resource__parent {
    type: string
    sql: ${TABLE}.about.resource.parent ;;
    group_label: "security_result"
    group_item_label: "security_result.about.resource.parent [D]"
    label: "security_result.about.resource.parent"
    view_label: "UDM"
    description: "The parent of the resource. For a database table, the parent is the database and for a storage object, the bucket name, etc.  Deprecated: use resource_ancestors.name. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__resource__parent

  dimension: about__resource__product_object_id {
    type: string
    sql: ${TABLE}.about.resource.product_object_id ;;
    group_label: "security_result"
    label: "security_result.about.resource.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension about__resource__product_object_id

  dimension: about__resource__resource_subtype {
    type: string
    sql: ${TABLE}.about.resource.resource_subtype ;;
    group_label: "security_result"
    label: "security_result.about.resource.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension about__resource__resource_subtype

  dimension: about__resource__resource_type {
    type: number
    sql: ${TABLE}.about.resource.resource_type ;;
    group_label: "security_result"
    label: "security_result.about.resource.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension about__resource__resource_type

  dimension: about__resource__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.about.resource.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "security_result"
    label: "security_result.about.resource.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension about__resource__resource_type_enum_name

  dimension: about__resource__type {
    type: string
    sql: ${TABLE}.about.resource.type ;;
    group_label: "security_result"
    group_item_label: "security_result.about.resource.type [D]"
    label: "security_result.about.resource.type"
    view_label: "UDM"
    description: "Deprecated: use resource_type instead. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__resource__type

  dimension: about__resource_ancestors {
    hidden: yes
  }  # dimension about__resource_ancestors

  dimension: about__url {
    type: string
    sql: ${TABLE}.about.url ;;
    group_label: "security_result"
    label: "security_result.about.url"
    view_label: "UDM"
    description: "The URL."
  }  # dimension about__url

  dimension: about__user {
    hidden: yes
  }  # dimension about__user

  dimension: about__user__attribute {
    hidden: yes
  }  # dimension about__user__attribute

  dimension: about__user__attribute__cloud {
    hidden: yes
  }  # dimension about__user__attribute__cloud

  dimension: about__user__attribute__cloud__environment {
    type: number
    sql: ${TABLE}.about.user.attribute.cloud.environment ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.cloud.environment"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension about__user__attribute__cloud__environment

  dimension: about__user__attribute__cloud__environment_enum_name {
    type: string
    suggestions: ["AMAZON_WEB_SERVICES", "GOOGLE_CLOUD_PLATFORM", "MICROSOFT_AZURE", "UNSPECIFIED_CLOUD_ENVIRONMENT"]
    sql: CASE ${TABLE}.about.user.attribute.cloud.environment WHEN 0 THEN 'UNSPECIFIED_CLOUD_ENVIRONMENT' WHEN 1 THEN 'GOOGLE_CLOUD_PLATFORM' WHEN 2 THEN 'AMAZON_WEB_SERVICES' WHEN 3 THEN 'MICROSOFT_AZURE' END ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.cloud.environment_enum_name"
    view_label: "UDM"
    description: "The Cloud environment."
  }  # dimension about__user__attribute__cloud__environment_enum_name

  dimension: about__user__attribute__cloud__project {
    hidden: yes
  }  # dimension about__user__attribute__cloud__project

  dimension: about__user__attribute__cloud__project__id {
    type: string
    sql: ${TABLE}.about.user.attribute.cloud.project.id ;;
    group_label: "security_result"
    group_item_label: "security_result.about.user.attribute.cloud.project.id [D]"
    label: "security_result.about.user.attribute.cloud.project.id"
    view_label: "UDM"
    description: "Deprecated: Use resource.name or resource.product_object_id. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__user__attribute__cloud__project__id

  dimension: about__user__attribute__cloud__project__name {
    type: string
    sql: ${TABLE}.about.user.attribute.cloud.project.name ;;
    group_label: "security_result"
    group_item_label: "security_result.about.user.attribute.cloud.project.name [D]"
    label: "security_result.about.user.attribute.cloud.project.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__user__attribute__cloud__project__name

  dimension: about__user__attribute__cloud__project__resource_type {
    type: number
    sql: ${TABLE}.about.user.attribute.cloud.project.resource_type ;;
    group_label: "security_result"
    group_item_label: "security_result.about.user.attribute.cloud.project.resource_type [D]"
    label: "security_result.about.user.attribute.cloud.project.resource_type"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__user__attribute__cloud__project__resource_type

  dimension: about__user__attribute__cloud__project__resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.about.user.attribute.cloud.project.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "security_result"
    group_item_label: "security_result.about.user.attribute.cloud.project.resource_type_enum_name [D]"
    label: "security_result.about.user.attribute.cloud.project.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension about__user__attribute__cloud__project__resource_type_enum_name

  dimension_group: security_result__about__user__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.user.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.user.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension security_result__about__user__attribute__creation_time

  dimension: about__user__attribute__labels {
    hidden: yes
  }  # dimension about__user__attribute__labels

  dimension_group: security_result__about__user__attribute__last_update_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.about.user.attribute.last_update_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.about.user.attribute.last_update_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.about.user.attribute.last_update_time"
    view_label: "UDM"
    description: "Time the resource or entity was last updated."
  }  # dimension security_result__about__user__attribute__last_update_time

  dimension: about__user__attribute__permissions {
    hidden: yes
  }  # dimension about__user__attribute__permissions

  dimension: about__user__attribute__roles {
    hidden: yes
  }  # dimension about__user__attribute__roles

  dimension: about__user__email_addresses {
    hidden: yes
  }  # dimension about__user__email_addresses

  dimension: about__user__group_identifiers {
    hidden: yes
  }  # dimension about__user__group_identifiers

  dimension: about__user__product_object_id {
    type: string
    sql: ${TABLE}.about.user.product_object_id ;;
    group_label: "security_result"
    label: "security_result.about.user.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension about__user__product_object_id

  dimension: about__user__user_authentication_status {
    type: number
    sql: ${TABLE}.about.user.user_authentication_status ;;
    group_label: "security_result"
    label: "security_result.about.user.user_authentication_status"
    view_label: "UDM"
    description: "System authentication status for user."
  }  # dimension about__user__user_authentication_status

  dimension: about__user__user_authentication_status_enum_name {
    type: string
    suggestions: ["ACTIVE", "DELETED", "NO_ACTIVE_CREDENTIALS", "SUSPENDED", "UNKNOWN_AUTHENTICATION_STATUS"]
    sql: CASE ${TABLE}.about.user.user_authentication_status WHEN 0 THEN 'UNKNOWN_AUTHENTICATION_STATUS' WHEN 1 THEN 'ACTIVE' WHEN 2 THEN 'SUSPENDED' WHEN 3 THEN 'NO_ACTIVE_CREDENTIALS' WHEN 4 THEN 'DELETED' END ;;
    group_label: "security_result"
    label: "security_result.about.user.user_authentication_status_enum_name"
    view_label: "UDM"
    description: "System authentication status for user."
  }  # dimension about__user__user_authentication_status_enum_name

  dimension: about__user__user_display_name {
    type: string
    sql: ${TABLE}.about.user.user_display_name ;;
    group_label: "security_result"
    label: "security_result.about.user.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension about__user__user_display_name

  dimension: about__user__userid {
    type: string
    sql: ${TABLE}.about.user.userid ;;
    group_label: "security_result"
    label: "security_result.about.user.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension about__user__userid

  dimension: about__user_management_chain {
    hidden: yes
  }  # dimension about__user_management_chain

  dimension: action {
    hidden: yes
  }  # dimension action

  dimension: action_enum_name {
    hidden: yes
  }  # dimension action_enum_name

  dimension: action_details {
    type: string
    sql: ${TABLE}.action_details ;;
    group_label: "security_result"
    label: "security_result.action_details"
    view_label: "UDM"
    description: "The detail of the action taken as provided by the vendor."
  }  # dimension action_details

  dimension: alert_state {
    type: number
    sql: ${TABLE}.alert_state ;;
    group_label: "security_result"
    label: "security_result.alert_state"
    view_label: "UDM"
    description: "The alerting types of this security result."
  }  # dimension alert_state

  dimension: alert_state_enum_name {
    type: string
    suggestions: ["ALERTING", "NOT_ALERTING", "UNSPECIFIED"]
    sql: CASE ${TABLE}.alert_state WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'NOT_ALERTING' WHEN 2 THEN 'ALERTING' END ;;
    group_label: "security_result"
    label: "security_result.alert_state_enum_name"
    view_label: "UDM"
    description: "The alerting types of this security result."
  }  # dimension alert_state_enum_name

  dimension: associations {
    hidden: yes
  }  # dimension associations

  dimension: attack_details {
    hidden: yes
  }  # dimension attack_details

  dimension: attack_details__tactics {
    hidden: yes
  }  # dimension attack_details__tactics

  dimension: attack_details__techniques {
    hidden: yes
  }  # dimension attack_details__techniques

  dimension: attack_details__version {
    type: string
    sql: ${TABLE}.attack_details.version ;;
    group_label: "security_result"
    label: "security_result.attack_details.version"
    view_label: "UDM"
    description: "ATT&CK version (e.g. 12.1)."
  }  # dimension attack_details__version

  dimension: category {
    hidden: yes
  }  # dimension category

  dimension: category_enum_name {
    hidden: yes
  }  # dimension category_enum_name

  dimension: category_details {
    hidden: yes
  }  # dimension category_details

  dimension: confidence {
    type: number
    sql: ${TABLE}.confidence ;;
    group_label: "security_result"
    label: "security_result.confidence"
    view_label: "UDM"
    description: "The confidence level of the result as estimated by the product."
  }  # dimension confidence

  dimension: confidence_enum_name {
    type: string
    suggestions: ["HIGH_CONFIDENCE", "LOW_CONFIDENCE", "MEDIUM_CONFIDENCE", "UNKNOWN_CONFIDENCE"]
    sql: CASE ${TABLE}.confidence WHEN 0 THEN 'UNKNOWN_CONFIDENCE' WHEN 200 THEN 'LOW_CONFIDENCE' WHEN 300 THEN 'MEDIUM_CONFIDENCE' WHEN 400 THEN 'HIGH_CONFIDENCE' END ;;
    group_label: "security_result"
    label: "security_result.confidence_enum_name"
    view_label: "UDM"
    description: "The confidence level of the result as estimated by the product."
  }  # dimension confidence_enum_name

  dimension: confidence_details {
    type: string
    sql: ${TABLE}.confidence_details ;;
    group_label: "security_result"
    label: "security_result.confidence_details"
    view_label: "UDM"
    description: "Additional detail with regards to the confidence of a security event as estimated by the product vendor."
  }  # dimension confidence_details

  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "security_result"
    label: "security_result.description"
    view_label: "UDM"
    description: "A human readable description (e.g. \"user password was wrong\")"
  }  # dimension description

  dimension: detection_fields {
    hidden: yes
  }  # dimension detection_fields

  dimension_group: security_result__first_discovered_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.first_discovered_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.first_discovered_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "security_result"
    label: "security_result.first_discovered_time"
    view_label: "UDM"
    description: "First time the ioc threat was discovered in the provider."
  }  # dimension security_result__first_discovered_time

  dimension: outcomes {
    hidden: yes
  }  # dimension outcomes

  dimension: priority {
    type: number
    sql: ${TABLE}.priority ;;
    group_label: "security_result"
    label: "security_result.priority"
    view_label: "UDM"
    description: "The priority of the result."
  }  # dimension priority

  dimension: priority_enum_name {
    type: string
    suggestions: ["HIGH_PRIORITY", "LOW_PRIORITY", "MEDIUM_PRIORITY", "UNKNOWN_PRIORITY"]
    sql: CASE ${TABLE}.priority WHEN 0 THEN 'UNKNOWN_PRIORITY' WHEN 200 THEN 'LOW_PRIORITY' WHEN 300 THEN 'MEDIUM_PRIORITY' WHEN 400 THEN 'HIGH_PRIORITY' END ;;
    group_label: "security_result"
    label: "security_result.priority_enum_name"
    view_label: "UDM"
    description: "The priority of the result."
  }  # dimension priority_enum_name

  dimension: priority_details {
    type: string
    sql: ${TABLE}.priority_details ;;
    group_label: "security_result"
    label: "security_result.priority_details"
    view_label: "UDM"
    description: "Vendor-specific information about the security result priority."
  }  # dimension priority_details

  dimension: risk_score {
    type: number
    sql: ${TABLE}.risk_score ;;
    group_label: "security_result"
    label: "security_result.risk_score"
    view_label: "UDM"
    description: "The risk score of the security result."
  }  # dimension risk_score

  dimension: rule_author {
    type: string
    sql: ${TABLE}.rule_author ;;
    group_label: "security_result"
    label: "security_result.rule_author"
    view_label: "UDM"
    description: "Author of the security rule."
  }  # dimension rule_author

  dimension: rule_id {
    type: string
    sql: ${TABLE}.rule_id ;;
    group_label: "security_result"
    label: "security_result.rule_id"
    view_label: "UDM"
    description: "A vendor-specific ID and name for a rule, varying by observerer type (e.g. \"08123\", \"5d2b44d0-5ef6-40f5-a704-47d61d3babbe\")."
  }  # dimension rule_id

  dimension: rule_labels {
    hidden: yes
  }  # dimension rule_labels

  dimension: rule_name {
    type: string
    sql: ${TABLE}.rule_name ;;
    group_label: "security_result"
    label: "security_result.rule_name"
    view_label: "UDM"
    description: "Name of the security rule (e.g. \"BlockInboundToOracle\")."
  }  # dimension rule_name

  dimension: rule_set {
    type: string
    sql: ${TABLE}.rule_set ;;
    group_label: "security_result"
    label: "security_result.rule_set"
    view_label: "UDM"
    description: "The result's rule set identifier. (e.g. \"windows-threats\")"
  }  # dimension rule_set

  dimension: rule_set_display_name {
    type: string
    sql: ${TABLE}.rule_set_display_name ;;
    group_label: "security_result"
    label: "security_result.rule_set_display_name"
    view_label: "UDM"
    description: "The result's rule set display name. (e.g. \"Windows Threats\")"
  }  # dimension rule_set_display_name

  dimension: rule_type {
    type: string
    sql: ${TABLE}.rule_type ;;
    group_label: "security_result"
    label: "security_result.rule_type"
    view_label: "UDM"
    description: "The type of security rule."
  }  # dimension rule_type

  dimension: rule_version {
    type: string
    sql: ${TABLE}.rule_version ;;
    group_label: "security_result"
    label: "security_result.rule_version"
    view_label: "UDM"
    description: "Version of the security rule. (e.g. \"v1.1\", \"00001\", \"1604709794\", \"2020-11-16T23:04:19+00:00\"). Note that rule versions are source-dependant and lexical ordering should not be assumed."
  }  # dimension rule_version

  dimension: severity {
    type: number
    sql: ${TABLE}.severity ;;
    group_label: "security_result"
    label: "security_result.severity"
    view_label: "UDM"
    description: "The severity of the result."
  }  # dimension severity

  dimension: severity_enum_name {
    type: string
    suggestions: ["CRITICAL", "ERROR", "HIGH", "INFORMATIONAL", "LOW", "MEDIUM", "UNKNOWN_SEVERITY"]
    sql: CASE ${TABLE}.severity WHEN 0 THEN 'UNKNOWN_SEVERITY' WHEN 100 THEN 'INFORMATIONAL' WHEN 150 THEN 'ERROR' WHEN 200 THEN 'LOW' WHEN 300 THEN 'MEDIUM' WHEN 400 THEN 'HIGH' WHEN 500 THEN 'CRITICAL' END ;;
    group_label: "security_result"
    label: "security_result.severity_enum_name"
    view_label: "UDM"
    description: "The severity of the result."
  }  # dimension severity_enum_name

  dimension: severity_details {
    type: string
    sql: ${TABLE}.severity_details ;;
    group_label: "security_result"
    label: "security_result.severity_details"
    view_label: "UDM"
    description: "Vendor-specific severity."
  }  # dimension severity_details

  dimension: summary {
    type: string
    sql: ${TABLE}.summary ;;
    group_label: "security_result"
    label: "security_result.summary"
    view_label: "UDM"
    description: "A human readable summary (e.g. \"failed login occurred\")"
  }  # dimension summary

  dimension: threat_feed_name {
    type: string
    sql: ${TABLE}.threat_feed_name ;;
    group_label: "security_result"
    label: "security_result.threat_feed_name"
    view_label: "UDM"
    description: "Vendor feed name for a threat indicator feed."
  }  # dimension threat_feed_name

  dimension: threat_id {
    type: string
    sql: ${TABLE}.threat_id ;;
    group_label: "security_result"
    label: "security_result.threat_id"
    view_label: "UDM"
    description: "Vendor-specific ID for a threat."
  }  # dimension threat_id

  dimension: threat_id_namespace {
    type: number
    sql: ${TABLE}.threat_id_namespace ;;
    group_label: "security_result"
    label: "security_result.threat_id_namespace"
    view_label: "UDM"
    description: "The attribute threat_id_namespace qualifies threat_id with an id namespace to get an unique id. The attribute threat_id by itself is not unique across Chronicle as it is a vendor specific id."
  }  # dimension threat_id_namespace

  dimension: threat_id_namespace_enum_name {
    type: string
    suggestions: ["MACHINE_INTELLIGENCE", "NORMALIZED_TELEMETRY", "RAW_TELEMETRY", "RULE_DETECTIONS", "SECURITY_COMMAND_CENTER", "SOAR_ALERT", "UNSPECIFIED", "UPPERCASE"]
    sql: CASE ${TABLE}.threat_id_namespace WHEN 0 THEN 'NORMALIZED_TELEMETRY' WHEN 1 THEN 'RAW_TELEMETRY' WHEN 2 THEN 'RULE_DETECTIONS' WHEN 3 THEN 'UPPERCASE' WHEN 4 THEN 'MACHINE_INTELLIGENCE' WHEN 5 THEN 'SECURITY_COMMAND_CENTER' WHEN 6 THEN 'UNSPECIFIED' WHEN 7 THEN 'SOAR_ALERT' END ;;
    group_label: "security_result"
    label: "security_result.threat_id_namespace_enum_name"
    view_label: "UDM"
    description: "The attribute threat_id_namespace qualifies threat_id with an id namespace to get an unique id. The attribute threat_id by itself is not unique across Chronicle as it is a vendor specific id."
  }  # dimension threat_id_namespace_enum_name

  dimension: threat_name {
    type: string
    sql: ${TABLE}.threat_name ;;
    group_label: "security_result"
    label: "security_result.threat_name"
    view_label: "UDM"
    description: "A vendor-assigned classification common across multiple customers (e.g. \"W32/File-A\", \"Slammer\")."
  }  # dimension threat_name

  dimension: threat_status {
    type: number
    sql: ${TABLE}.threat_status ;;
    group_label: "security_result"
    label: "security_result.threat_status"
    view_label: "UDM"
    description: "Current status of the threat"
  }  # dimension threat_status

  dimension: threat_status_enum_name {
    type: string
    suggestions: ["ACTIVE", "CLEARED", "FALSE_POSITIVE", "THREAT_STATUS_UNSPECIFIED"]
    sql: CASE ${TABLE}.threat_status WHEN 0 THEN 'THREAT_STATUS_UNSPECIFIED' WHEN 1 THEN 'ACTIVE' WHEN 2 THEN 'CLEARED' WHEN 3 THEN 'FALSE_POSITIVE' END ;;
    group_label: "security_result"
    label: "security_result.threat_status_enum_name"
    view_label: "UDM"
    description: "Current status of the threat"
  }  # dimension threat_status_enum_name

  dimension: url_back_to_product {
    type: string
    sql: ${TABLE}.url_back_to_product ;;
    group_label: "security_result"
    label: "security_result.url_back_to_product"
    view_label: "UDM"
    description: "URL that takes the user to the source product console for this event."
  }  # dimension url_back_to_product

}  # view udm_events__security_result

view: udm_events__src__asset__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    label: "src.asset.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    label: "src.asset.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__src__asset__attribute__labels

view: udm_events__src__asset__hardware {
  dimension: cpu_model {
    type: string
    sql: ${TABLE}.cpu_model ;;
    group_label: "src"
    label: "src.asset.hardware.cpu_model"
    view_label: "UDM"
    description: "Model description of the hardware CPU (e.g. \"2.8 GHz Quad-Core Intel Core i5\")."
  }  # dimension cpu_model

  dimension: cpu_platform {
    type: string
    sql: ${TABLE}.cpu_platform ;;
    group_label: "src"
    label: "src.asset.hardware.cpu_platform"
    view_label: "UDM"
    description: "Platform of the hardware CPU (e.g. \"Intel Broadwell\")."
  }  # dimension cpu_platform

  dimension: manufacturer {
    type: string
    sql: ${TABLE}.manufacturer ;;
    group_label: "src"
    label: "src.asset.hardware.manufacturer"
    view_label: "UDM"
    description: "Hardware manufacturer."
  }  # dimension manufacturer

  dimension: model {
    type: string
    sql: ${TABLE}.model ;;
    group_label: "src"
    label: "src.asset.hardware.model"
    view_label: "UDM"
    description: "Hardware model."
  }  # dimension model

  dimension: ram {
    type: number
    sql: ${TABLE}.ram ;;
    group_label: "src"
    label: "src.asset.hardware.ram"
    view_label: "UDM"
    description: "Amount of the hardware ramdom access memory (RAM) in Mb."
  }  # dimension ram

  dimension: serial_number {
    type: string
    sql: ${TABLE}.serial_number ;;
    group_label: "src"
    label: "src.asset.hardware.serial_number"
    view_label: "UDM"
    description: "Hardware serial number."
  }  # dimension serial_number

}  # view udm_events__src__asset__hardware

view: udm_events__src__asset__ip {
  dimension: udm_events__src__asset__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.asset.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with an asset."
  }  # dimension udm_events__src__asset__ip
}  # view udm_events__src__asset__ip

view: udm_events__src__asset__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    group_item_label: "src.asset.labels.key [D]"
    label: "src.asset.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    group_item_label: "src.asset.labels.value [D]"
    label: "src.asset.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__src__asset__labels

view: udm_events__src__asset__mac {
  dimension: udm_events__src__asset__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.asset.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with an asset."
  }  # dimension udm_events__src__asset__mac
}  # view udm_events__src__asset__mac

view: udm_events__src__asset__nat_ip {
  dimension: udm_events__src__asset__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.asset.nat_ip"
    view_label: "UDM"
    description: "List of NAT IP addresses associated with an asset."
  }  # dimension udm_events__src__asset__nat_ip
}  # view udm_events__src__asset__nat_ip

view: udm_events__src__asset__software__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "src"
    label: "src.asset.software.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.asset.software.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__src__asset__software__permissions

view: udm_events__src__asset__software {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.asset.software.name"
    view_label: "UDM"
    description: "The name of the software."
  }  # dimension name

  dimension: permissions {
    hidden: yes
  }  # dimension permissions

  dimension: version {
    type: string
    sql: ${TABLE}.version ;;
    group_label: "src"
    label: "src.asset.software.version"
    view_label: "UDM"
    description: "The version of the software."
  }  # dimension version

}  # view udm_events__src__asset__software

view: udm_events__src__asset__vulnerabilities {
  dimension: cve_id {
    type: string
    sql: ${TABLE}.cve_id ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.cve_id"
    view_label: "UDM"
    description: "Common Vulnerabilities and Exposures Id.<a href=\"https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures\">https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures</a> <a href=\"https://cve.mitre.org/about/faqs.html#what_is_cve_id\">https://cve.mitre.org/about/faqs.html#what_is_cve_id</a>"
  }  # dimension cve_id

  dimension: cvss_base_score {
    type: number
    sql: ${TABLE}.cvss_base_score ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.cvss_base_score"
    view_label: "UDM"
    description: "CVSS Base Score in the range of 0.0 to 10.0. Useful for sorting."
  }  # dimension cvss_base_score

  dimension: cvss_vector {
    type: string
    sql: ${TABLE}.cvss_vector ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.cvss_vector"
    view_label: "UDM"
    description: "Vector of CVSS properties (e.g. \"AV:L/AC:H/Au:N/C:N/I:P/A:C\") Can be linked to via:<a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=VALUE\"> https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=VALUE</a>"
  }  # dimension cvss_vector

  dimension: cvss_version {
    type: string
    sql: ${TABLE}.cvss_version ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.cvss_version"
    view_label: "UDM"
    description: "Version of CVSS Vector/Score."
  }  # dimension cvss_version

  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.description"
    view_label: "UDM"
    description: "Description of the vulnerability."
  }  # dimension description

  dimension_group: src__asset__vulnerabilities__first_found {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.first_found.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.first_found.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.first_found"
    view_label: "UDM"
    description: "Products that maintain a history of vuln scans should populate first_found with the time that a scan first detected the vulnerability on this asset."
  }  # dimension src__asset__vulnerabilities__first_found

  dimension_group: src__asset__vulnerabilities__last_found {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.last_found.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.last_found.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.last_found"
    view_label: "UDM"
    description: "Products that maintain a history of vuln scans should populate last_found with the time that a scan last detected the vulnerability on this asset."
  }  # dimension src__asset__vulnerabilities__last_found

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.name"
    view_label: "UDM"
    description: "Name of the vulnerability (e.g. \"Unsupported OS Version detected\")."
  }  # dimension name

  dimension_group: src__asset__vulnerabilities__scan_end_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.scan_end_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.scan_end_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.scan_end_time"
    view_label: "UDM"
    description: "If the vulnerability was discovered during an asset scan, then this field should be populated with the time the scan ended. This field can be left unset if the end time is not available or not applicable."
  }  # dimension src__asset__vulnerabilities__scan_end_time

  dimension_group: src__asset__vulnerabilities__scan_start_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.scan_start_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.scan_start_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.scan_start_time"
    view_label: "UDM"
    description: "If the vulnerability was discovered during an asset scan, then this field should be populated with the time the scan started. This field can be left unset if the start time is not available or not applicable."
  }  # dimension src__asset__vulnerabilities__scan_start_time

  dimension: severity {
    type: number
    sql: ${TABLE}.severity ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.severity"
    view_label: "UDM"
    description: "The severity of the vulnerability."
  }  # dimension severity

  dimension: severity_enum_name {
    type: string
    suggestions: ["CRITICAL", "HIGH", "LOW", "MEDIUM", "UNKNOWN_SEVERITY"]
    sql: CASE ${TABLE}.severity WHEN 0 THEN 'UNKNOWN_SEVERITY' WHEN 1 THEN 'LOW' WHEN 2 THEN 'MEDIUM' WHEN 3 THEN 'HIGH' WHEN 4 THEN 'CRITICAL' END ;;
    group_label: "src"
    label: "src.asset.vulnerabilities.severity_enum_name"
    view_label: "UDM"
    description: "The severity of the vulnerability."
  }  # dimension severity_enum_name

}  # view udm_events__src__asset__vulnerabilities

view: udm_events__src__file__capabilities_tags {
  dimension: udm_events__src__file__capabilities_tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.file.capabilities_tags"
    view_label: "UDM"
    description: "Capabilities tags."
  }  # dimension udm_events__src__file__capabilities_tags
}  # view udm_events__src__file__capabilities_tags

view: udm_events__src__file__embedded_domains {
  dimension: udm_events__src__file__embedded_domains {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.file.embedded_domains"
    view_label: "UDM"
    description: "Embedded domains found in the file."
  }  # dimension udm_events__src__file__embedded_domains
}  # view udm_events__src__file__embedded_domains

view: udm_events__src__file__embedded_ips {
  dimension: udm_events__src__file__embedded_ips {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.file.embedded_ips"
    view_label: "UDM"
    description: "Embedded IP addresses found in the file."
  }  # dimension udm_events__src__file__embedded_ips
}  # view udm_events__src__file__embedded_ips

view: udm_events__src__file__embedded_urls {
  dimension: udm_events__src__file__embedded_urls {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.file.embedded_urls"
    view_label: "UDM"
    description: "Embedded urls found in the file."
  }  # dimension udm_events__src__file__embedded_urls
}  # view udm_events__src__file__embedded_urls

view: udm_events__src__file__names {
  dimension: udm_events__src__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__src__file__names
}  # view udm_events__src__file__names

view: udm_events__src__file__pe_file__imports__functions {
  dimension: udm_events__src__file__pe_file__imports__functions {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.file.pe_file.imports.functions"
    view_label: "UDM"
    description: "Function field."
  }  # dimension udm_events__src__file__pe_file__imports__functions
}  # view udm_events__src__file__pe_file__imports__functions

view: udm_events__src__file__pe_file__imports {
  dimension: functions {
    hidden: yes
  }  # dimension functions

  dimension: library {
    type: string
    sql: ${TABLE}.library ;;
    group_label: "src"
    label: "src.file.pe_file.imports.library"
    view_label: "UDM"
    description: "Library field."
  }  # dimension library

}  # view udm_events__src__file__pe_file__imports

view: udm_events__src__file__pe_file__resource {
  dimension: entropy {
    type: number
    sql: ${TABLE}.entropy ;;
    group_label: "src"
    label: "src.file.pe_file.resource.entropy"
    view_label: "UDM"
    description: "Entropy of the resource."
  }  # dimension entropy

  dimension: file_type {
    type: string
    sql: ${TABLE}.file_type ;;
    group_label: "src"
    label: "src.file.pe_file.resource.file_type"
    view_label: "UDM"
    description: "File type. Note that this value may not match any of the well-known type identifiers defined in the ResourceType enum."
  }  # dimension file_type

  dimension: filetype_magic {
    type: string
    sql: ${TABLE}.filetype_magic ;;
    group_label: "src"
    label: "src.file.pe_file.resource.filetype_magic"
    view_label: "UDM"
    description: "Type of resource content, as identified by the magic Python module. BEGIN GOOGLE-INTERNAL See http://cs/virustotal/virustotal-core-analysis/sav/common/tools/toolpefile/magic.py END GOOGLE-INTERNAL"
  }  # dimension filetype_magic

  dimension: language_code {
    type: string
    sql: ${TABLE}.language_code ;;
    group_label: "src"
    label: "src.file.pe_file.resource.language_code"
    view_label: "UDM"
    description: "Human-readable version of the language and sublanguage identifiers, as defined in the Microsoft Windows PE specification. BEGIN GOOGLE-INTERNAL See http://cs/virustotal/virustotal-core-analysis/sav/common/tools/toolpefile/toolpefile.py?l=419&rcl=df1fcff7c5e82a39875359608b47669d5aff82c7 END GOOGLE-INTERNAL Examples: | Language     | Sublanguage        | Field value | | LANG_NEUTRAL | SUBLANG_NEUTRAL    | NEUTRAL     | | LANG_FRENCH  | -                  | FRENCH      | | LANG_ENGLISH | SUBLANG_ENGLISH US | ENGLISH US  |"
  }  # dimension language_code

  dimension: sha256_hex {
    type: string
    sql: ${TABLE}.sha256_hex ;;
    group_label: "src"
    label: "src.file.pe_file.resource.sha256_hex"
    view_label: "UDM"
    description: "SHA256_hex field.."
  }  # dimension sha256_hex

}  # view udm_events__src__file__pe_file__resource

view: udm_events__src__file__pe_file__resources_language_count_str {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    label: "src.file.pe_file.resources_language_count_str.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    label: "src.file.pe_file.resources_language_count_str.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__src__file__pe_file__resources_language_count_str

view: udm_events__src__file__pe_file__resources_type_count_str {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    label: "src.file.pe_file.resources_type_count_str.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    label: "src.file.pe_file.resources_type_count_str.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__src__file__pe_file__resources_type_count_str

view: udm_events__src__file__pe_file__section {
  dimension: entropy {
    type: number
    sql: ${TABLE}.entropy ;;
    group_label: "src"
    label: "src.file.pe_file.section.entropy"
    view_label: "UDM"
    description: "Entropy of the section."
  }  # dimension entropy

  dimension: md5_hex {
    type: string
    sql: ${TABLE}.md5_hex ;;
    group_label: "src"
    label: "src.file.pe_file.section.md5_hex"
    view_label: "UDM"
    description: "MD5 hex of the file."
  }  # dimension md5_hex

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.file.pe_file.section.name"
    view_label: "UDM"
    description: "Name of the section."
  }  # dimension name

  dimension: raw_size_bytes {
    type: number
    sql: ${TABLE}.raw_size_bytes ;;
    group_label: "src"
    label: "src.file.pe_file.section.raw_size_bytes"
    view_label: "UDM"
    description: "Raw file size in bytes."
  }  # dimension raw_size_bytes

  dimension: virtual_size_bytes {
    type: number
    sql: ${TABLE}.virtual_size_bytes ;;
    group_label: "src"
    label: "src.file.pe_file.section.virtual_size_bytes"
    view_label: "UDM"
    description: "Virtual file size in bytes."
  }  # dimension virtual_size_bytes

}  # view udm_events__src__file__pe_file__section

view: udm_events__src__file__signature_info__sigcheck__signers {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.file.signature_info.sigcheck.signers.name"
    view_label: "UDM"
    description: "Common name of the signers/certificate. The order of the signers matters. Each element is a higher level authority, the last being the root authority."
  }  # dimension name

}  # view udm_events__src__file__signature_info__sigcheck__signers

view: udm_events__src__file__signature_info__sigcheck__x509 {
  dimension: algorithm {
    type: string
    sql: ${TABLE}.algorithm ;;
    group_label: "src"
    label: "src.file.signature_info.sigcheck.x509.algorithm"
    view_label: "UDM"
    description: "Certificate algorithm."
  }  # dimension algorithm

  dimension: cert_issuer {
    type: string
    sql: ${TABLE}.cert_issuer ;;
    group_label: "src"
    label: "src.file.signature_info.sigcheck.x509.cert_issuer"
    view_label: "UDM"
    description: "Issuer of the certificate."
  }  # dimension cert_issuer

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.file.signature_info.sigcheck.x509.name"
    view_label: "UDM"
    description: "Certificate name."
  }  # dimension name

  dimension: serial_number {
    type: string
    sql: ${TABLE}.serial_number ;;
    group_label: "src"
    label: "src.file.signature_info.sigcheck.x509.serial_number"
    view_label: "UDM"
    description: "Certificate serial number."
  }  # dimension serial_number

  dimension: thumbprint {
    type: string
    sql: ${TABLE}.thumbprint ;;
    group_label: "src"
    label: "src.file.signature_info.sigcheck.x509.thumbprint"
    view_label: "UDM"
    description: "Certificate thumbprint."
  }  # dimension thumbprint

}  # view udm_events__src__file__signature_info__sigcheck__x509

view: udm_events__src__file__tags {
  dimension: udm_events__src__file__tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.file.tags"
    view_label: "UDM"
    description: "Tags for the file."
  }  # dimension udm_events__src__file__tags
}  # view udm_events__src__file__tags

view: udm_events__src__ip {
  dimension: udm_events__src__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with a network connection."
  }  # dimension udm_events__src__ip
}  # view udm_events__src__ip

view: udm_events__src__ip_geo_artifact {
  dimension: ip {
    type: string
    sql: ${TABLE}.ip ;;
    group_label: "src"
    label: "src.ip_geo_artifact.ip"
    view_label: "UDM"
    description: "IP address of the artifact."
  }  # dimension ip

  dimension: location {
    hidden: yes
  }  # dimension location

  dimension: location__country_or_region {
    type: string
    sql: ${TABLE}.location.country_or_region ;;
    group_label: "src"
    label: "src.ip_geo_artifact.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension location__country_or_region

  dimension: location__region_coordinates {
    type: location
    sql_latitude: ${TABLE}.location.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.location.region_coordinates.longitude ;;
    group_label: "src"
    group_item_label: "src.ip_geo_artifact.location.region_coordinates [L]"
    label: "src.ip_geo_artifact.location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [L]: This is a location field and can be used in maps."
  }  # dimension location__region_coordinates

  dimension: location__region_latitude {
    type: number
    sql: ${TABLE}.location.region_latitude ;;
    group_label: "src"
    group_item_label: "src.ip_geo_artifact.location.region_latitude [D]"
    label: "src.ip_geo_artifact.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_latitude

  dimension: location__region_longitude {
    type: number
    sql: ${TABLE}.location.region_longitude ;;
    group_label: "src"
    group_item_label: "src.ip_geo_artifact.location.region_longitude [D]"
    label: "src.ip_geo_artifact.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_longitude

  dimension: location__location {
    type: location
    sql_latitude: ${TABLE}.location.region_latitude ;;
    sql_longitude: ${TABLE}.location.region_longitude ;;
    group_label: "src"
    group_item_label: "src.ip_geo_artifact.location.location [D][L]"
    label: "src.ip_geo_artifact.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension location__location

  dimension: location__state {
    type: string
    sql: ${TABLE}.location.state ;;
    group_label: "src"
    label: "src.ip_geo_artifact.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension location__state

  dimension: network {
    hidden: yes
  }  # dimension network

  dimension: network__asn {
    type: string
    sql: ${TABLE}.network.asn ;;
    group_label: "src"
    label: "src.ip_geo_artifact.network.asn"
    view_label: "UDM"
    description: "Autonomous system number."
  }  # dimension network__asn

  dimension: network__carrier_name {
    type: string
    sql: ${TABLE}.network.carrier_name ;;
    group_label: "src"
    label: "src.ip_geo_artifact.network.carrier_name"
    view_label: "UDM"
    description: "Carrier identification."
  }  # dimension network__carrier_name

  dimension: network__dns_domain {
    type: string
    sql: ${TABLE}.network.dns_domain ;;
    group_label: "src"
    label: "src.ip_geo_artifact.network.dns_domain"
    view_label: "UDM"
    description: "DNS domain name."
  }  # dimension network__dns_domain

  dimension: network__organization_name {
    type: string
    sql: ${TABLE}.network.organization_name ;;
    group_label: "src"
    label: "src.ip_geo_artifact.network.organization_name"
    view_label: "UDM"
    description: "Organization name (e.g Google)."
  }  # dimension network__organization_name

}  # view udm_events__src__ip_geo_artifact

view: udm_events__src__ip_location {
  dimension: country_or_region {
    type: string
    sql: ${TABLE}.country_or_region ;;
    group_label: "src"
    group_item_label: "src.ip_location.country_or_region [D]"
    label: "src.ip_location.country_or_region"
    view_label: "UDM"
    description: "The country or region. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension country_or_region

  dimension: region_coordinates {
    type: location
    sql_latitude: ${TABLE}.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.region_coordinates.longitude ;;
    group_label: "src"
    group_item_label: "src.ip_location.region_coordinates [D][L]"
    label: "src.ip_location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension region_coordinates

  dimension: region_latitude {
    type: number
    sql: ${TABLE}.region_latitude ;;
    group_label: "src"
    group_item_label: "src.ip_location.region_latitude [D]"
    label: "src.ip_location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension region_latitude

  dimension: region_longitude {
    type: number
    sql: ${TABLE}.region_longitude ;;
    group_label: "src"
    group_item_label: "src.ip_location.region_longitude [D]"
    label: "src.ip_location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension region_longitude

  dimension: location {
    type: location
    sql_latitude: ${TABLE}.region_latitude ;;
    sql_longitude: ${TABLE}.region_longitude ;;
    group_label: "src"
    group_item_label: "src.ip_location.location [D][L]"
    label: "src.ip_location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension location

  dimension: state {
    type: string
    sql: ${TABLE}.state ;;
    group_label: "src"
    group_item_label: "src.ip_location.state [D]"
    label: "src.ip_location.state"
    view_label: "UDM"
    description: "The state. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension state

}  # view udm_events__src__ip_location

view: udm_events__src__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    group_item_label: "src.labels.key [D]"
    label: "src.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    group_item_label: "src.labels.value [D]"
    label: "src.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__src__labels

view: udm_events__src__mac {
  dimension: udm_events__src__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with a device."
  }  # dimension udm_events__src__mac
}  # view udm_events__src__mac

view: udm_events__src__nat_ip {
  dimension: udm_events__src__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.nat_ip"
    view_label: "UDM"
    description: "A list of NAT translated IP addresses associated with a network connection."
  }  # dimension udm_events__src__nat_ip
}  # view udm_events__src__nat_ip

view: udm_events__src__process__file__names {
  dimension: udm_events__src__process__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.process.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__src__process__file__names
}  # view udm_events__src__process__file__names

view: udm_events__src__resource__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    label: "src.resource.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    label: "src.resource.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__src__resource__attribute__labels

view: udm_events__src__resource__attribute__permissions {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.resource.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__src__resource__attribute__permissions

view: udm_events__src__resource_ancestors__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    label: "src.resource_ancestors.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    label: "src.resource_ancestors.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__src__resource_ancestors__attribute__labels

view: udm_events__src__resource_ancestors {
  dimension: attribute {
    hidden: yes
  }  # dimension attribute

  dimension: attribute__labels {
    hidden: yes
  }  # dimension attribute__labels

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.resource_ancestors.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension name

  dimension: product_object_id {
    type: string
    sql: ${TABLE}.product_object_id ;;
    group_label: "src"
    label: "src.resource_ancestors.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension product_object_id

  dimension: resource_subtype {
    type: string
    sql: ${TABLE}.resource_subtype ;;
    group_label: "src"
    label: "src.resource_ancestors.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension resource_subtype

  dimension: resource_type {
    type: number
    sql: ${TABLE}.resource_type ;;
    group_label: "src"
    label: "src.resource_ancestors.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource_type

  dimension: resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "src"
    label: "src.resource_ancestors.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource_type_enum_name

}  # view udm_events__src__resource_ancestors

view: udm_events__src__user__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    label: "src.user.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    label: "src.user.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__src__user__attribute__labels

view: udm_events__src__user__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "src"
    label: "src.user.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.user.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "src"
    label: "src.user.attribute.roles.type"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "TYPE_UNSPECIFIED"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'TYPE_UNSPECIFIED' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "src"
    label: "src.user.attribute.roles.type_enum_name"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type_enum_name

}  # view udm_events__src__user__attribute__roles

view: udm_events__src__user__department {
  dimension: udm_events__src__user__department {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.user.department"
    view_label: "UDM"
    description: "User job department"
  }  # dimension udm_events__src__user__department
}  # view udm_events__src__user__department

view: udm_events__src__user__email_addresses {
  dimension: udm_events__src__user__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.user.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__src__user__email_addresses
}  # view udm_events__src__user__email_addresses

view: udm_events__src__user__group_identifiers {
  dimension: udm_events__src__user__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.user.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__src__user__group_identifiers
}  # view udm_events__src__user__group_identifiers

view: udm_events__src__user__managers__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "src"
    label: "src.user.managers.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "src"
    label: "src.user.managers.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__src__user__managers__attribute__labels

view: udm_events__src__user__managers__attribute__roles {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "src"
    label: "src.user.managers.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "src"
    label: "src.user.managers.attribute.roles.type"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "TYPE_UNSPECIFIED"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'TYPE_UNSPECIFIED' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "src"
    label: "src.user.managers.attribute.roles.type_enum_name"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type_enum_name

}  # view udm_events__src__user__managers__attribute__roles

view: udm_events__src__user__managers__department {
  dimension: udm_events__src__user__managers__department {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.user.managers.department"
    view_label: "UDM"
    description: "User job department"
  }  # dimension udm_events__src__user__managers__department
}  # view udm_events__src__user__managers__department

view: udm_events__src__user__managers__email_addresses {
  dimension: udm_events__src__user__managers__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.user.managers.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__src__user__managers__email_addresses
}  # view udm_events__src__user__managers__email_addresses

view: udm_events__src__user__managers__group_identifiers {
  dimension: udm_events__src__user__managers__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.user.managers.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__src__user__managers__group_identifiers
}  # view udm_events__src__user__managers__group_identifiers

view: udm_events__src__user__managers__phone_numbers {
  dimension: udm_events__src__user__managers__phone_numbers {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.user.managers.phone_numbers"
    view_label: "UDM"
    description: "Phone numbers for the user."
  }  # dimension udm_events__src__user__managers__phone_numbers
}  # view udm_events__src__user__managers__phone_numbers

view: udm_events__src__user__managers {
  dimension: attribute {
    hidden: yes
  }  # dimension attribute

  dimension: attribute__labels {
    hidden: yes
  }  # dimension attribute__labels

  dimension: attribute__roles {
    hidden: yes
  }  # dimension attribute__roles

  dimension: company_name {
    type: string
    sql: ${TABLE}.company_name ;;
    group_label: "src"
    label: "src.user.managers.company_name"
    view_label: "UDM"
    description: "User job company name."
  }  # dimension company_name

  dimension: department {
    hidden: yes
  }  # dimension department

  dimension: email_addresses {
    hidden: yes
  }  # dimension email_addresses

  dimension: employee_id {
    type: string
    sql: ${TABLE}.employee_id ;;
    group_label: "src"
    label: "src.user.managers.employee_id"
    view_label: "UDM"
    description: "Human capital management identifier."
  }  # dimension employee_id

  dimension: first_name {
    type: string
    sql: ${TABLE}.first_name ;;
    group_label: "src"
    label: "src.user.managers.first_name"
    view_label: "UDM"
    description: "First name of the user (e.g. \"John\")."
  }  # dimension first_name

  dimension: group_identifiers {
    hidden: yes
  }  # dimension group_identifiers

  dimension: last_name {
    type: string
    sql: ${TABLE}.last_name ;;
    group_label: "src"
    label: "src.user.managers.last_name"
    view_label: "UDM"
    description: "Last name of the user (e.g. \"Locke\")."
  }  # dimension last_name

  dimension: personal_address {
    hidden: yes
  }  # dimension personal_address

  dimension: personal_address__city {
    type: string
    sql: ${TABLE}.personal_address.city ;;
    group_label: "src"
    label: "src.user.managers.personal_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension personal_address__city

  dimension: personal_address__country_or_region {
    type: string
    sql: ${TABLE}.personal_address.country_or_region ;;
    group_label: "src"
    label: "src.user.managers.personal_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension personal_address__country_or_region

  dimension: personal_address__name {
    type: string
    sql: ${TABLE}.personal_address.name ;;
    group_label: "src"
    label: "src.user.managers.personal_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension personal_address__name

  dimension: personal_address__state {
    type: string
    sql: ${TABLE}.personal_address.state ;;
    group_label: "src"
    label: "src.user.managers.personal_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension personal_address__state

  dimension: phone_numbers {
    hidden: yes
  }  # dimension phone_numbers

  dimension: product_object_id {
    type: string
    sql: ${TABLE}.product_object_id ;;
    group_label: "src"
    label: "src.user.managers.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension product_object_id

  dimension: title {
    type: string
    sql: ${TABLE}.title ;;
    group_label: "src"
    label: "src.user.managers.title"
    view_label: "UDM"
    description: "User job title."
  }  # dimension title

  dimension: user_display_name {
    type: string
    sql: ${TABLE}.user_display_name ;;
    group_label: "src"
    label: "src.user.managers.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension user_display_name

  dimension: userid {
    type: string
    sql: ${TABLE}.userid ;;
    group_label: "src"
    label: "src.user.managers.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension userid

  dimension: windows_sid {
    type: string
    sql: ${TABLE}.windows_sid ;;
    group_label: "src"
    label: "src.user.managers.windows_sid"
    view_label: "UDM"
    description: "The Microsoft Windows SID of the user."
  }  # dimension windows_sid

}  # view udm_events__src__user__managers

view: udm_events__src__user__phone_numbers {
  dimension: udm_events__src__user__phone_numbers {
    type: string
    sql: ${TABLE} ;;
    group_label: "src"
    label: "src.user.phone_numbers"
    view_label: "UDM"
    description: "Phone numbers for the user."
  }  # dimension udm_events__src__user__phone_numbers
}  # view udm_events__src__user__phone_numbers

view: udm_events__src__user__time_off {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "src"
    label: "src.user.time_off.description"
    view_label: "UDM"
    description: "Description of the leave if available (e.g. 'Vacation')."
  }  # dimension description

  dimension_group: src__user__time_off__interval {
    type: duration
    intervals: [ second, minute, hour ]
    sql_start: TIMESTAMP_MICROS(IFNULL(${TABLE}.interval.start_time.seconds,0) * 1000000 + CAST((IFNULL(${TABLE}.interval.start_time.nanos,0) / 1000) as INT64)) ;;
    sql_end: TIMESTAMP_MICROS(IFNULL(${TABLE}.interval.end_time.seconds,0) * 1000000 + CAST((IFNULL(${TABLE}.interval.end_time.nanos,0) / 1000) as INT64)) ;;
    group_label: "src"
    label: "src.user.time_off.interval"
    view_label: "UDM"
    description: "Interval duration of the leave."
  }  # dimension src__user__time_off__interval

}  # view udm_events__src__user__time_off

view: udm_events__target__asset__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    label: "target.asset.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    label: "target.asset.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__target__asset__attribute__labels

view: udm_events__target__asset__attribute__permissions {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.asset.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__target__asset__attribute__permissions

view: udm_events__target__asset__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.asset.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.asset.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

}  # view udm_events__target__asset__attribute__roles

view: udm_events__target__asset__hardware {
  dimension: cpu_model {
    type: string
    sql: ${TABLE}.cpu_model ;;
    group_label: "target"
    label: "target.asset.hardware.cpu_model"
    view_label: "UDM"
    description: "Model description of the hardware CPU (e.g. \"2.8 GHz Quad-Core Intel Core i5\")."
  }  # dimension cpu_model

  dimension: cpu_number_cores {
    type: number
    sql: ${TABLE}.cpu_number_cores ;;
    group_label: "target"
    label: "target.asset.hardware.cpu_number_cores"
    view_label: "UDM"
    description: "Number of CPU cores."
  }  # dimension cpu_number_cores

  dimension: cpu_platform {
    type: string
    sql: ${TABLE}.cpu_platform ;;
    group_label: "target"
    label: "target.asset.hardware.cpu_platform"
    view_label: "UDM"
    description: "Platform of the hardware CPU (e.g. \"Intel Broadwell\")."
  }  # dimension cpu_platform

  dimension: manufacturer {
    type: string
    sql: ${TABLE}.manufacturer ;;
    group_label: "target"
    label: "target.asset.hardware.manufacturer"
    view_label: "UDM"
    description: "Hardware manufacturer."
  }  # dimension manufacturer

  dimension: model {
    type: string
    sql: ${TABLE}.model ;;
    group_label: "target"
    label: "target.asset.hardware.model"
    view_label: "UDM"
    description: "Hardware model."
  }  # dimension model

  dimension: ram {
    type: number
    sql: ${TABLE}.ram ;;
    group_label: "target"
    label: "target.asset.hardware.ram"
    view_label: "UDM"
    description: "Amount of the hardware ramdom access memory (RAM) in Mb."
  }  # dimension ram

  dimension: serial_number {
    type: string
    sql: ${TABLE}.serial_number ;;
    group_label: "target"
    label: "target.asset.hardware.serial_number"
    view_label: "UDM"
    description: "Hardware serial number."
  }  # dimension serial_number

}  # view udm_events__target__asset__hardware

view: udm_events__target__asset__ip {
  dimension: udm_events__target__asset__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.asset.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with an asset."
  }  # dimension udm_events__target__asset__ip
}  # view udm_events__target__asset__ip

view: udm_events__target__asset__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    group_item_label: "target.asset.labels.key [D]"
    label: "target.asset.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    group_item_label: "target.asset.labels.value [D]"
    label: "target.asset.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__target__asset__labels

view: udm_events__target__asset__mac {
  dimension: udm_events__target__asset__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.asset.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with an asset."
  }  # dimension udm_events__target__asset__mac
}  # view udm_events__target__asset__mac

view: udm_events__target__asset__nat_ip {
  dimension: udm_events__target__asset__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.asset.nat_ip"
    view_label: "UDM"
    description: "List of NAT IP addresses associated with an asset."
  }  # dimension udm_events__target__asset__nat_ip
}  # view udm_events__target__asset__nat_ip

view: udm_events__target__asset__software__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.asset.software.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.asset.software.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__target__asset__software__permissions

view: udm_events__target__asset__software {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.asset.software.description"
    view_label: "UDM"
    description: "The description of the software."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.asset.software.name"
    view_label: "UDM"
    description: "The name of the software."
  }  # dimension name

  dimension: permissions {
    hidden: yes
  }  # dimension permissions

  dimension: vendor_name {
    type: string
    sql: ${TABLE}.vendor_name ;;
    group_label: "target"
    label: "target.asset.software.vendor_name"
    view_label: "UDM"
    description: "The name of the software vendor."
  }  # dimension vendor_name

  dimension: version {
    type: string
    sql: ${TABLE}.version ;;
    group_label: "target"
    label: "target.asset.software.version"
    view_label: "UDM"
    description: "The version of the software."
  }  # dimension version

}  # view udm_events__target__asset__software

view: udm_events__target__asset__vulnerabilities {
  dimension: cve_id {
    type: string
    sql: ${TABLE}.cve_id ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.cve_id"
    view_label: "UDM"
    description: "Common Vulnerabilities and Exposures Id.<a href=\"https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures\">https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures</a> <a href=\"https://cve.mitre.org/about/faqs.html#what_is_cve_id\">https://cve.mitre.org/about/faqs.html#what_is_cve_id</a>"
  }  # dimension cve_id

  dimension: cvss_base_score {
    type: number
    sql: ${TABLE}.cvss_base_score ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.cvss_base_score"
    view_label: "UDM"
    description: "CVSS Base Score in the range of 0.0 to 10.0. Useful for sorting."
  }  # dimension cvss_base_score

  dimension: cvss_vector {
    type: string
    sql: ${TABLE}.cvss_vector ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.cvss_vector"
    view_label: "UDM"
    description: "Vector of CVSS properties (e.g. \"AV:L/AC:H/Au:N/C:N/I:P/A:C\") Can be linked to via:<a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=VALUE\"> https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?vector=VALUE</a>"
  }  # dimension cvss_vector

  dimension: cvss_version {
    type: string
    sql: ${TABLE}.cvss_version ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.cvss_version"
    view_label: "UDM"
    description: "Version of CVSS Vector/Score."
  }  # dimension cvss_version

  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.description"
    view_label: "UDM"
    description: "Description of the vulnerability."
  }  # dimension description

  dimension_group: target__asset__vulnerabilities__first_found {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.first_found.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.first_found.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.first_found"
    view_label: "UDM"
    description: "Products that maintain a history of vuln scans should populate first_found with the time that a scan first detected the vulnerability on this asset."
  }  # dimension target__asset__vulnerabilities__first_found

  dimension_group: target__asset__vulnerabilities__last_found {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.last_found.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.last_found.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.last_found"
    view_label: "UDM"
    description: "Products that maintain a history of vuln scans should populate last_found with the time that a scan last detected the vulnerability on this asset."
  }  # dimension target__asset__vulnerabilities__last_found

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.name"
    view_label: "UDM"
    description: "Name of the vulnerability (e.g. \"Unsupported OS Version detected\")."
  }  # dimension name

  dimension_group: target__asset__vulnerabilities__scan_end_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.scan_end_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.scan_end_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.scan_end_time"
    view_label: "UDM"
    description: "If the vulnerability was discovered during an asset scan, then this field should be populated with the time the scan ended. This field can be left unset if the end time is not available or not applicable."
  }  # dimension target__asset__vulnerabilities__scan_end_time

  dimension_group: target__asset__vulnerabilities__scan_start_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.scan_start_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.scan_start_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.scan_start_time"
    view_label: "UDM"
    description: "If the vulnerability was discovered during an asset scan, then this field should be populated with the time the scan started. This field can be left unset if the start time is not available or not applicable."
  }  # dimension target__asset__vulnerabilities__scan_start_time

  dimension: severity {
    type: number
    sql: ${TABLE}.severity ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.severity"
    view_label: "UDM"
    description: "The severity of the vulnerability."
  }  # dimension severity

  dimension: severity_enum_name {
    type: string
    suggestions: ["CRITICAL", "HIGH", "LOW", "MEDIUM", "UNKNOWN_SEVERITY"]
    sql: CASE ${TABLE}.severity WHEN 0 THEN 'UNKNOWN_SEVERITY' WHEN 1 THEN 'LOW' WHEN 2 THEN 'MEDIUM' WHEN 3 THEN 'HIGH' WHEN 4 THEN 'CRITICAL' END ;;
    group_label: "target"
    label: "target.asset.vulnerabilities.severity_enum_name"
    view_label: "UDM"
    description: "The severity of the vulnerability."
  }  # dimension severity_enum_name

}  # view udm_events__target__asset__vulnerabilities

view: udm_events__target__cloud__project__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    group_item_label: "target.cloud.project.attribute.labels.key [D]"
    label: "target.cloud.project.attribute.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    group_item_label: "target.cloud.project.attribute.labels.value [D]"
    label: "target.cloud.project.attribute.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__target__cloud__project__attribute__labels

view: udm_events__target__domain__name_server {
  dimension: udm_events__target__domain__name_server {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.domain.name_server"
    view_label: "UDM"
    description: "Repeated list of name servers."
  }  # dimension udm_events__target__domain__name_server
}  # view udm_events__target__domain__name_server

view: udm_events__target__file__capabilities_tags {
  dimension: udm_events__target__file__capabilities_tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.file.capabilities_tags"
    view_label: "UDM"
    description: "Capabilities tags."
  }  # dimension udm_events__target__file__capabilities_tags
}  # view udm_events__target__file__capabilities_tags

view: udm_events__target__file__embedded_domains {
  dimension: udm_events__target__file__embedded_domains {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.file.embedded_domains"
    view_label: "UDM"
    description: "Embedded domains found in the file."
  }  # dimension udm_events__target__file__embedded_domains
}  # view udm_events__target__file__embedded_domains

view: udm_events__target__file__embedded_ips {
  dimension: udm_events__target__file__embedded_ips {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.file.embedded_ips"
    view_label: "UDM"
    description: "Embedded IP addresses found in the file."
  }  # dimension udm_events__target__file__embedded_ips
}  # view udm_events__target__file__embedded_ips

view: udm_events__target__file__embedded_urls {
  dimension: udm_events__target__file__embedded_urls {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.file.embedded_urls"
    view_label: "UDM"
    description: "Embedded urls found in the file."
  }  # dimension udm_events__target__file__embedded_urls
}  # view udm_events__target__file__embedded_urls

view: udm_events__target__file__names {
  dimension: udm_events__target__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__target__file__names
}  # view udm_events__target__file__names

view: udm_events__target__file__pe_file__imports__functions {
  dimension: udm_events__target__file__pe_file__imports__functions {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.file.pe_file.imports.functions"
    view_label: "UDM"
    description: "Function field."
  }  # dimension udm_events__target__file__pe_file__imports__functions
}  # view udm_events__target__file__pe_file__imports__functions

view: udm_events__target__file__pe_file__imports {
  dimension: functions {
    hidden: yes
  }  # dimension functions

  dimension: library {
    type: string
    sql: ${TABLE}.library ;;
    group_label: "target"
    label: "target.file.pe_file.imports.library"
    view_label: "UDM"
    description: "Library field."
  }  # dimension library

}  # view udm_events__target__file__pe_file__imports

view: udm_events__target__file__pe_file__resource {
  dimension: entropy {
    type: number
    sql: ${TABLE}.entropy ;;
    group_label: "target"
    label: "target.file.pe_file.resource.entropy"
    view_label: "UDM"
    description: "Entropy of the resource."
  }  # dimension entropy

  dimension: file_type {
    type: string
    sql: ${TABLE}.file_type ;;
    group_label: "target"
    label: "target.file.pe_file.resource.file_type"
    view_label: "UDM"
    description: "File type. Note that this value may not match any of the well-known type identifiers defined in the ResourceType enum."
  }  # dimension file_type

  dimension: filetype_magic {
    type: string
    sql: ${TABLE}.filetype_magic ;;
    group_label: "target"
    label: "target.file.pe_file.resource.filetype_magic"
    view_label: "UDM"
    description: "Type of resource content, as identified by the magic Python module. BEGIN GOOGLE-INTERNAL See http://cs/virustotal/virustotal-core-analysis/sav/common/tools/toolpefile/magic.py END GOOGLE-INTERNAL"
  }  # dimension filetype_magic

  dimension: language_code {
    type: string
    sql: ${TABLE}.language_code ;;
    group_label: "target"
    label: "target.file.pe_file.resource.language_code"
    view_label: "UDM"
    description: "Human-readable version of the language and sublanguage identifiers, as defined in the Microsoft Windows PE specification. BEGIN GOOGLE-INTERNAL See http://cs/virustotal/virustotal-core-analysis/sav/common/tools/toolpefile/toolpefile.py?l=419&rcl=df1fcff7c5e82a39875359608b47669d5aff82c7 END GOOGLE-INTERNAL Examples: | Language     | Sublanguage        | Field value | | LANG_NEUTRAL | SUBLANG_NEUTRAL    | NEUTRAL     | | LANG_FRENCH  | -                  | FRENCH      | | LANG_ENGLISH | SUBLANG_ENGLISH US | ENGLISH US  |"
  }  # dimension language_code

  dimension: sha256_hex {
    type: string
    sql: ${TABLE}.sha256_hex ;;
    group_label: "target"
    label: "target.file.pe_file.resource.sha256_hex"
    view_label: "UDM"
    description: "SHA256_hex field.."
  }  # dimension sha256_hex

}  # view udm_events__target__file__pe_file__resource

view: udm_events__target__file__pe_file__resources_language_count_str {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    label: "target.file.pe_file.resources_language_count_str.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    label: "target.file.pe_file.resources_language_count_str.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__target__file__pe_file__resources_language_count_str

view: udm_events__target__file__pe_file__resources_type_count_str {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    label: "target.file.pe_file.resources_type_count_str.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    label: "target.file.pe_file.resources_type_count_str.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__target__file__pe_file__resources_type_count_str

view: udm_events__target__file__pe_file__section {
  dimension: entropy {
    type: number
    sql: ${TABLE}.entropy ;;
    group_label: "target"
    label: "target.file.pe_file.section.entropy"
    view_label: "UDM"
    description: "Entropy of the section."
  }  # dimension entropy

  dimension: md5_hex {
    type: string
    sql: ${TABLE}.md5_hex ;;
    group_label: "target"
    label: "target.file.pe_file.section.md5_hex"
    view_label: "UDM"
    description: "MD5 hex of the file."
  }  # dimension md5_hex

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.file.pe_file.section.name"
    view_label: "UDM"
    description: "Name of the section."
  }  # dimension name

  dimension: raw_size_bytes {
    type: number
    sql: ${TABLE}.raw_size_bytes ;;
    group_label: "target"
    label: "target.file.pe_file.section.raw_size_bytes"
    view_label: "UDM"
    description: "Raw file size in bytes."
  }  # dimension raw_size_bytes

  dimension: virtual_size_bytes {
    type: number
    sql: ${TABLE}.virtual_size_bytes ;;
    group_label: "target"
    label: "target.file.pe_file.section.virtual_size_bytes"
    view_label: "UDM"
    description: "Virtual file size in bytes."
  }  # dimension virtual_size_bytes

}  # view udm_events__target__file__pe_file__section

view: udm_events__target__file__signature_info__sigcheck__signers {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.file.signature_info.sigcheck.signers.name"
    view_label: "UDM"
    description: "Common name of the signers/certificate. The order of the signers matters. Each element is a higher level authority, the last being the root authority."
  }  # dimension name

}  # view udm_events__target__file__signature_info__sigcheck__signers

view: udm_events__target__file__signature_info__sigcheck__x509 {
  dimension: algorithm {
    type: string
    sql: ${TABLE}.algorithm ;;
    group_label: "target"
    label: "target.file.signature_info.sigcheck.x509.algorithm"
    view_label: "UDM"
    description: "Certificate algorithm."
  }  # dimension algorithm

  dimension: cert_issuer {
    type: string
    sql: ${TABLE}.cert_issuer ;;
    group_label: "target"
    label: "target.file.signature_info.sigcheck.x509.cert_issuer"
    view_label: "UDM"
    description: "Issuer of the certificate."
  }  # dimension cert_issuer

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.file.signature_info.sigcheck.x509.name"
    view_label: "UDM"
    description: "Certificate name."
  }  # dimension name

  dimension: serial_number {
    type: string
    sql: ${TABLE}.serial_number ;;
    group_label: "target"
    label: "target.file.signature_info.sigcheck.x509.serial_number"
    view_label: "UDM"
    description: "Certificate serial number."
  }  # dimension serial_number

  dimension: thumbprint {
    type: string
    sql: ${TABLE}.thumbprint ;;
    group_label: "target"
    label: "target.file.signature_info.sigcheck.x509.thumbprint"
    view_label: "UDM"
    description: "Certificate thumbprint."
  }  # dimension thumbprint

}  # view udm_events__target__file__signature_info__sigcheck__x509

view: udm_events__target__file__tags {
  dimension: udm_events__target__file__tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.file.tags"
    view_label: "UDM"
    description: "Tags for the file."
  }  # dimension udm_events__target__file__tags
}  # view udm_events__target__file__tags

view: udm_events__target__group__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    label: "target.group.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    label: "target.group.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__target__group__attribute__labels

view: udm_events__target__group__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.group.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.group.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__target__group__attribute__permissions

view: udm_events__target__group__attribute__roles {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.group.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

}  # view udm_events__target__group__attribute__roles

view: udm_events__target__group__email_addresses {
  dimension: udm_events__target__group__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.group.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the group."
  }  # dimension udm_events__target__group__email_addresses
}  # view udm_events__target__group__email_addresses

view: udm_events__target__investigation__comments {
  dimension: udm_events__target__investigation__comments {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.investigation.comments"
    view_label: "UDM"
    description: "Comment added by the Analyst."
  }  # dimension udm_events__target__investigation__comments
}  # view udm_events__target__investigation__comments

view: udm_events__target__ip {
  dimension: udm_events__target__ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.ip"
    view_label: "UDM"
    description: "A list of IP addresses associated with a network connection."
  }  # dimension udm_events__target__ip
}  # view udm_events__target__ip

view: udm_events__target__ip_geo_artifact {
  dimension: ip {
    type: string
    sql: ${TABLE}.ip ;;
    group_label: "target"
    label: "target.ip_geo_artifact.ip"
    view_label: "UDM"
    description: "IP address of the artifact."
  }  # dimension ip

  dimension: location {
    hidden: yes
  }  # dimension location

  dimension: location__country_or_region {
    type: string
    sql: ${TABLE}.location.country_or_region ;;
    group_label: "target"
    label: "target.ip_geo_artifact.location.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension location__country_or_region

  dimension: location__region_coordinates {
    type: location
    sql_latitude: ${TABLE}.location.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.location.region_coordinates.longitude ;;
    group_label: "target"
    group_item_label: "target.ip_geo_artifact.location.region_coordinates [L]"
    label: "target.ip_geo_artifact.location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [L]: This is a location field and can be used in maps."
  }  # dimension location__region_coordinates

  dimension: location__region_latitude {
    type: number
    sql: ${TABLE}.location.region_latitude ;;
    group_label: "target"
    group_item_label: "target.ip_geo_artifact.location.region_latitude [D]"
    label: "target.ip_geo_artifact.location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_latitude

  dimension: location__region_longitude {
    type: number
    sql: ${TABLE}.location.region_longitude ;;
    group_label: "target"
    group_item_label: "target.ip_geo_artifact.location.region_longitude [D]"
    label: "target.ip_geo_artifact.location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension location__region_longitude

  dimension: location__location {
    type: location
    sql_latitude: ${TABLE}.location.region_latitude ;;
    sql_longitude: ${TABLE}.location.region_longitude ;;
    group_label: "target"
    group_item_label: "target.ip_geo_artifact.location.location [D][L]"
    label: "target.ip_geo_artifact.location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension location__location

  dimension: location__state {
    type: string
    sql: ${TABLE}.location.state ;;
    group_label: "target"
    label: "target.ip_geo_artifact.location.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension location__state

  dimension: network {
    hidden: yes
  }  # dimension network

  dimension: network__asn {
    type: string
    sql: ${TABLE}.network.asn ;;
    group_label: "target"
    label: "target.ip_geo_artifact.network.asn"
    view_label: "UDM"
    description: "Autonomous system number."
  }  # dimension network__asn

  dimension: network__carrier_name {
    type: string
    sql: ${TABLE}.network.carrier_name ;;
    group_label: "target"
    label: "target.ip_geo_artifact.network.carrier_name"
    view_label: "UDM"
    description: "Carrier identification."
  }  # dimension network__carrier_name

  dimension: network__dns_domain {
    type: string
    sql: ${TABLE}.network.dns_domain ;;
    group_label: "target"
    label: "target.ip_geo_artifact.network.dns_domain"
    view_label: "UDM"
    description: "DNS domain name."
  }  # dimension network__dns_domain

  dimension: network__organization_name {
    type: string
    sql: ${TABLE}.network.organization_name ;;
    group_label: "target"
    label: "target.ip_geo_artifact.network.organization_name"
    view_label: "UDM"
    description: "Organization name (e.g Google)."
  }  # dimension network__organization_name

}  # view udm_events__target__ip_geo_artifact

view: udm_events__target__ip_location {
  dimension: city {
    type: string
    sql: ${TABLE}.city ;;
    group_label: "target"
    group_item_label: "target.ip_location.city [D]"
    label: "target.ip_location.city"
    view_label: "UDM"
    description: "The city. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension city

  dimension: country_or_region {
    type: string
    sql: ${TABLE}.country_or_region ;;
    group_label: "target"
    group_item_label: "target.ip_location.country_or_region [D]"
    label: "target.ip_location.country_or_region"
    view_label: "UDM"
    description: "The country or region. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension country_or_region

  dimension: desk_name {
    type: string
    sql: ${TABLE}.desk_name ;;
    group_label: "target"
    group_item_label: "target.ip_location.desk_name [D]"
    label: "target.ip_location.desk_name"
    view_label: "UDM"
    description: "Desk name or individual location, typically for an employee in an office. (e.g. \"IN-BLR-BCPC-11-1121D\"). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension desk_name

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    group_item_label: "target.ip_location.name [D]"
    label: "target.ip_location.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\"). [D]: This field is deprecated and will be removed in a future release"
  }  # dimension name

  dimension: region_coordinates {
    type: location
    sql_latitude: ${TABLE}.region_coordinates.latitude ;;
    sql_longitude: ${TABLE}.region_coordinates.longitude ;;
    group_label: "target"
    group_item_label: "target.ip_location.region_coordinates [D][L]"
    label: "target.ip_location.region_coordinates"
    view_label: "UDM"
    description: "Coordinates for the associated region. See <a href=\"https://cloud.google.com/vision/docs/reference/rest/v1/LatLng\">https://cloud.google.com/vision/docs/reference/rest/v1/LatLng</a> for a description of the fields. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension region_coordinates

  dimension: region_latitude {
    type: number
    sql: ${TABLE}.region_latitude ;;
    group_label: "target"
    group_item_label: "target.ip_location.region_latitude [D]"
    label: "target.ip_location.region_latitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension region_latitude

  dimension: region_longitude {
    type: number
    sql: ${TABLE}.region_longitude ;;
    group_label: "target"
    group_item_label: "target.ip_location.region_longitude [D]"
    label: "target.ip_location.region_longitude"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension region_longitude

  dimension: location {
    type: location
    sql_latitude: ${TABLE}.region_latitude ;;
    sql_longitude: ${TABLE}.region_longitude ;;
    group_label: "target"
    group_item_label: "target.ip_location.location [D][L]"
    label: "target.ip_location.location"
    view_label: "UDM"
    description: "Deprecated: use region_coordinates. [D]: This field is deprecated and will be removed in a future release [L]: This is a location field and can be used in maps."
  }  # dimension location

  dimension: state {
    type: string
    sql: ${TABLE}.state ;;
    group_label: "target"
    group_item_label: "target.ip_location.state [D]"
    label: "target.ip_location.state"
    view_label: "UDM"
    description: "The state. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension state

}  # view udm_events__target__ip_location

view: udm_events__target__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    group_item_label: "target.labels.key [D]"
    label: "target.labels.key"
    view_label: "UDM"
    description: "The key. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension key

  dimension: source {
    type: string
    sql: ${TABLE}.source ;;
    group_label: "target"
    group_item_label: "target.labels.source [D]"
    label: "target.labels.source"
    view_label: "UDM"
    description: "@hide_from_doc [D]: This field is deprecated and will be removed in a future release"
  }  # dimension source

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    group_item_label: "target.labels.value [D]"
    label: "target.labels.value"
    view_label: "UDM"
    description: "The value. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension value

}  # view udm_events__target__labels

view: udm_events__target__mac {
  dimension: udm_events__target__mac {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.mac"
    view_label: "UDM"
    description: "List of MAC addresses associated with a device."
  }  # dimension udm_events__target__mac
}  # view udm_events__target__mac

view: udm_events__target__nat_ip {
  dimension: udm_events__target__nat_ip {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.nat_ip"
    view_label: "UDM"
    description: "A list of NAT translated IP addresses associated with a network connection."
  }  # dimension udm_events__target__nat_ip
}  # view udm_events__target__nat_ip

view: udm_events__target__process__command_line_history {
  dimension: udm_events__target__process__command_line_history {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.process.command_line_history"
    view_label: "UDM"
    description: "The command line history of the process."
  }  # dimension udm_events__target__process__command_line_history
}  # view udm_events__target__process__command_line_history

view: udm_events__target__process__file__capabilities_tags {
  dimension: udm_events__target__process__file__capabilities_tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.process.file.capabilities_tags"
    view_label: "UDM"
    description: "Capabilities tags."
  }  # dimension udm_events__target__process__file__capabilities_tags
}  # view udm_events__target__process__file__capabilities_tags

view: udm_events__target__process__file__names {
  dimension: udm_events__target__process__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.process.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__target__process__file__names
}  # view udm_events__target__process__file__names

view: udm_events__target__process__file__pe_file__signature_info__signer {
  dimension: udm_events__target__process__file__pe_file__signature_info__signer {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    group_item_label: "target.process.file.pe_file.signature_info.signer [D]"
    label: "target.process.file.pe_file.signature_info.signer"
    view_label: "UDM"
    description: "Deprecated: use signers field. [D]: This field is deprecated and will be removed in a future release"
  }  # dimension udm_events__target__process__file__pe_file__signature_info__signer
}  # view udm_events__target__process__file__pe_file__signature_info__signer

view: udm_events__target__process__file__tags {
  dimension: udm_events__target__process__file__tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.process.file.tags"
    view_label: "UDM"
    description: "Tags for the file."
  }  # dimension udm_events__target__process__file__tags
}  # view udm_events__target__process__file__tags

view: udm_events__target__process__parent_process__file__capabilities_tags {
  dimension: udm_events__target__process__parent_process__file__capabilities_tags {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.process.parent_process.file.capabilities_tags"
    view_label: "UDM"
    description: "Capabilities tags."
  }  # dimension udm_events__target__process__parent_process__file__capabilities_tags
}  # view udm_events__target__process__parent_process__file__capabilities_tags

view: udm_events__target__process__parent_process__file__names {
  dimension: udm_events__target__process__parent_process__file__names {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.process.parent_process.file.names"
    view_label: "UDM"
    description: "Names fields."
  }  # dimension udm_events__target__process__parent_process__file__names
}  # view udm_events__target__process__parent_process__file__names

view: udm_events__target__process_ancestors {
  dimension: command_line {
    type: string
    sql: ${TABLE}.command_line ;;
    group_label: "target"
    label: "target.process_ancestors.command_line"
    view_label: "UDM"
    description: "The command line command that created the process."
  }  # dimension command_line

  dimension: file {
    hidden: yes
  }  # dimension file

  dimension: file__full_path {
    type: string
    sql: ${TABLE}.file.full_path ;;
    group_label: "target"
    label: "target.process_ancestors.file.full_path"
    view_label: "UDM"
    description: "The full path identifying the location of the file on the system."
  }  # dimension file__full_path

}  # view udm_events__target__process_ancestors

view: udm_events__target__resource__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    label: "target.resource.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: source {
    type: string
    sql: ${TABLE}.source ;;
    group_label: "target"
    label: "target.resource.attribute.labels.source"
    view_label: "UDM"
    description: "@hide_from_doc"
  }  # dimension source

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    label: "target.resource.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__target__resource__attribute__labels

view: udm_events__target__resource__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.resource.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.resource.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "target"
    label: "target.resource.attribute.permissions.type"
    view_label: "UDM"
    description: "Type of the permission."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMIN_READ", "ADMIN_WRITE", "DATA_READ", "DATA_WRITE", "UNKNOWN_PERMISSION_TYPE"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'UNKNOWN_PERMISSION_TYPE' WHEN 1 THEN 'ADMIN_WRITE' WHEN 2 THEN 'ADMIN_READ' WHEN 3 THEN 'DATA_WRITE' WHEN 4 THEN 'DATA_READ' END ;;
    group_label: "target"
    label: "target.resource.attribute.permissions.type_enum_name"
    view_label: "UDM"
    description: "Type of the permission."
  }  # dimension type_enum_name

}  # view udm_events__target__resource__attribute__permissions

view: udm_events__target__resource__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.resource.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.resource.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "target"
    label: "target.resource.attribute.roles.type"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "TYPE_UNSPECIFIED"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'TYPE_UNSPECIFIED' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "target"
    label: "target.resource.attribute.roles.type_enum_name"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type_enum_name

}  # view udm_events__target__resource__attribute__roles

view: udm_events__target__resource_ancestors__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    label: "target.resource_ancestors.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    label: "target.resource_ancestors.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__target__resource_ancestors__attribute__labels

view: udm_events__target__resource_ancestors__attribute__permissions {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.resource_ancestors.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

}  # view udm_events__target__resource_ancestors__attribute__permissions

view: udm_events__target__resource_ancestors {
  dimension: attribute {
    hidden: yes
  }  # dimension attribute

  dimension_group: target__resource_ancestors__attribute__creation_time {
    type: time
    timeframes: [raw, microsecond, second, time, minute, hour, date, week, month, year]
    sql: TIMESTAMP_MICROS(IFNULL(${TABLE}.attribute.creation_time.seconds, 0) * 1000000 + CAST((IFNULL(${TABLE}.attribute.creation_time.nanos, 0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.resource_ancestors.attribute.creation_time"
    view_label: "UDM"
    description: "Time the resource or entity was created or provisioned."
  }  # dimension target__resource_ancestors__attribute__creation_time

  dimension: attribute__labels {
    hidden: yes
  }  # dimension attribute__labels

  dimension: attribute__permissions {
    hidden: yes
  }  # dimension attribute__permissions

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.resource_ancestors.name"
    view_label: "UDM"
    description: "The full name of the resource. For example, Google Cloud: //cloudresourcemanager.googleapis.com/projects/wombat-123, and AWS: arn:aws:iam::123456789012:user/johndoe."
  }  # dimension name

  dimension: product_object_id {
    type: string
    sql: ${TABLE}.product_object_id ;;
    group_label: "target"
    label: "target.resource_ancestors.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (a GUID, OID, or similar)"
  }  # dimension product_object_id

  dimension: resource_subtype {
    type: string
    sql: ${TABLE}.resource_subtype ;;
    group_label: "target"
    label: "target.resource_ancestors.resource_subtype"
    view_label: "UDM"
    description: "Resource sub-type (e.g. \"BigQuery\", \"Bigtable\")."
  }  # dimension resource_subtype

  dimension: resource_type {
    type: number
    sql: ${TABLE}.resource_type ;;
    group_label: "target"
    label: "target.resource_ancestors.resource_type"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource_type

  dimension: resource_type_enum_name {
    type: string
    suggestions: ["ACCESS_POLICY", "BACKEND_SERVICE", "CLOUD_ORGANIZATION", "CLOUD_PROJECT", "CLUSTER", "CONTAINER", "CREDENTIAL", "DATABASE", "DATASET", "DEVICE", "DISK", "FIREWALL_RULE", "FUNCTION", "GATEWAY", "IMAGE", "IP_ADDRESS", "LOAD_BALANCER", "MAILBOX_FOLDER", "MUTEX", "PIPE", "POD", "REPOSITORY", "RUNTIME", "SERVICE_ACCOUNT", "SETTING", "SNAPSHOT", "STORAGE_BUCKET", "STORAGE_OBJECT", "SUBNET", "TABLE", "TASK", "UNSPECIFIED", "VIRTUAL_MACHINE", "VOLUME", "VPC_NETWORK"]
    sql: CASE ${TABLE}.resource_type WHEN 0 THEN 'UNSPECIFIED' WHEN 1 THEN 'MUTEX' WHEN 2 THEN 'TASK' WHEN 3 THEN 'PIPE' WHEN 4 THEN 'DEVICE' WHEN 5 THEN 'FIREWALL_RULE' WHEN 6 THEN 'MAILBOX_FOLDER' WHEN 7 THEN 'VPC_NETWORK' WHEN 8 THEN 'VIRTUAL_MACHINE' WHEN 9 THEN 'STORAGE_BUCKET' WHEN 10 THEN 'STORAGE_OBJECT' WHEN 11 THEN 'DATABASE' WHEN 12 THEN 'TABLE' WHEN 13 THEN 'CLOUD_PROJECT' WHEN 14 THEN 'CLOUD_ORGANIZATION' WHEN 15 THEN 'SERVICE_ACCOUNT' WHEN 16 THEN 'ACCESS_POLICY' WHEN 17 THEN 'CLUSTER' WHEN 18 THEN 'SETTING' WHEN 19 THEN 'DATASET' WHEN 20 THEN 'BACKEND_SERVICE' WHEN 21 THEN 'POD' WHEN 22 THEN 'CONTAINER' WHEN 23 THEN 'FUNCTION' WHEN 24 THEN 'RUNTIME' WHEN 25 THEN 'IP_ADDRESS' WHEN 26 THEN 'DISK' WHEN 27 THEN 'VOLUME' WHEN 28 THEN 'IMAGE' WHEN 29 THEN 'SNAPSHOT' WHEN 30 THEN 'REPOSITORY' WHEN 31 THEN 'CREDENTIAL' WHEN 32 THEN 'LOAD_BALANCER' WHEN 33 THEN 'GATEWAY' WHEN 34 THEN 'SUBNET' END ;;
    group_label: "target"
    label: "target.resource_ancestors.resource_type_enum_name"
    view_label: "UDM"
    description: "Resource type."
  }  # dimension resource_type_enum_name

}  # view udm_events__target__resource_ancestors

view: udm_events__target__user__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    label: "target.user.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    label: "target.user.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__target__user__attribute__labels

view: udm_events__target__user__attribute__permissions {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.user.attribute.permissions.description"
    view_label: "UDM"
    description: "Description of the permission (e.g. 'Ability to update detect rules')."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.user.attribute.permissions.name"
    view_label: "UDM"
    description: "Name of the permission (e.g. chronicle.analyst.updateRule)."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "target"
    label: "target.user.attribute.permissions.type"
    view_label: "UDM"
    description: "Type of the permission."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMIN_READ", "ADMIN_WRITE", "DATA_READ", "DATA_WRITE", "UNKNOWN_PERMISSION_TYPE"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'UNKNOWN_PERMISSION_TYPE' WHEN 1 THEN 'ADMIN_WRITE' WHEN 2 THEN 'ADMIN_READ' WHEN 3 THEN 'DATA_WRITE' WHEN 4 THEN 'DATA_READ' END ;;
    group_label: "target"
    label: "target.user.attribute.permissions.type_enum_name"
    view_label: "UDM"
    description: "Type of the permission."
  }  # dimension type_enum_name

}  # view udm_events__target__user__attribute__permissions

view: udm_events__target__user__attribute__roles {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.user.attribute.roles.description"
    view_label: "UDM"
    description: "System role description for user."
  }  # dimension description

  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.user.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "target"
    label: "target.user.attribute.roles.type"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "TYPE_UNSPECIFIED"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'TYPE_UNSPECIFIED' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "target"
    label: "target.user.attribute.roles.type_enum_name"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type_enum_name

}  # view udm_events__target__user__attribute__roles

view: udm_events__target__user__department {
  dimension: udm_events__target__user__department {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.user.department"
    view_label: "UDM"
    description: "User job department"
  }  # dimension udm_events__target__user__department
}  # view udm_events__target__user__department

view: udm_events__target__user__email_addresses {
  dimension: udm_events__target__user__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.user.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__target__user__email_addresses
}  # view udm_events__target__user__email_addresses

view: udm_events__target__user__group_identifiers {
  dimension: udm_events__target__user__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.user.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__target__user__group_identifiers
}  # view udm_events__target__user__group_identifiers

view: udm_events__target__user__managers__attribute__labels {
  dimension: key {
    type: string
    sql: ${TABLE}.key ;;
    group_label: "target"
    label: "target.user.managers.attribute.labels.key"
    view_label: "UDM"
    description: "The key."
  }  # dimension key

  dimension: value {
    type: string
    sql: ${TABLE}.value ;;
    group_label: "target"
    label: "target.user.managers.attribute.labels.value"
    view_label: "UDM"
    description: "The value."
  }  # dimension value

}  # view udm_events__target__user__managers__attribute__labels

view: udm_events__target__user__managers__attribute__roles {
  dimension: name {
    type: string
    sql: ${TABLE}.name ;;
    group_label: "target"
    label: "target.user.managers.attribute.roles.name"
    view_label: "UDM"
    description: "System role name for user."
  }  # dimension name

  dimension: type {
    type: number
    sql: ${TABLE}.type ;;
    group_label: "target"
    label: "target.user.managers.attribute.roles.type"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type

  dimension: type_enum_name {
    type: string
    suggestions: ["ADMINISTRATOR", "SERVICE_ACCOUNT", "TYPE_UNSPECIFIED"]
    sql: CASE ${TABLE}.type WHEN 0 THEN 'TYPE_UNSPECIFIED' WHEN 1 THEN 'ADMINISTRATOR' WHEN 2 THEN 'SERVICE_ACCOUNT' END ;;
    group_label: "target"
    label: "target.user.managers.attribute.roles.type_enum_name"
    view_label: "UDM"
    description: "System role type for well known roles."
  }  # dimension type_enum_name

}  # view udm_events__target__user__managers__attribute__roles

view: udm_events__target__user__managers__department {
  dimension: udm_events__target__user__managers__department {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.user.managers.department"
    view_label: "UDM"
    description: "User job department"
  }  # dimension udm_events__target__user__managers__department
}  # view udm_events__target__user__managers__department

view: udm_events__target__user__managers__email_addresses {
  dimension: udm_events__target__user__managers__email_addresses {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.user.managers.email_addresses"
    view_label: "UDM"
    description: "Email addresses of the user."
  }  # dimension udm_events__target__user__managers__email_addresses
}  # view udm_events__target__user__managers__email_addresses

view: udm_events__target__user__managers__group_identifiers {
  dimension: udm_events__target__user__managers__group_identifiers {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.user.managers.group_identifiers"
    view_label: "UDM"
    description: "Product object identifiers of the group(s) the user belongs to A vendor-specific identifier to uniquely identify the group(s) the user belongs to (a GUID, LDAP OID, or similar)."
  }  # dimension udm_events__target__user__managers__group_identifiers
}  # view udm_events__target__user__managers__group_identifiers

view: udm_events__target__user__managers__phone_numbers {
  dimension: udm_events__target__user__managers__phone_numbers {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.user.managers.phone_numbers"
    view_label: "UDM"
    description: "Phone numbers for the user."
  }  # dimension udm_events__target__user__managers__phone_numbers
}  # view udm_events__target__user__managers__phone_numbers

view: udm_events__target__user__managers {
  dimension: attribute {
    hidden: yes
  }  # dimension attribute

  dimension: attribute__labels {
    hidden: yes
  }  # dimension attribute__labels

  dimension: attribute__roles {
    hidden: yes
  }  # dimension attribute__roles

  dimension: company_name {
    type: string
    sql: ${TABLE}.company_name ;;
    group_label: "target"
    label: "target.user.managers.company_name"
    view_label: "UDM"
    description: "User job company name."
  }  # dimension company_name

  dimension: department {
    hidden: yes
  }  # dimension department

  dimension: email_addresses {
    hidden: yes
  }  # dimension email_addresses

  dimension: employee_id {
    type: string
    sql: ${TABLE}.employee_id ;;
    group_label: "target"
    label: "target.user.managers.employee_id"
    view_label: "UDM"
    description: "Human capital management identifier."
  }  # dimension employee_id

  dimension: first_name {
    type: string
    sql: ${TABLE}.first_name ;;
    group_label: "target"
    label: "target.user.managers.first_name"
    view_label: "UDM"
    description: "First name of the user (e.g. \"John\")."
  }  # dimension first_name

  dimension: group_identifiers {
    hidden: yes
  }  # dimension group_identifiers

  dimension: last_name {
    type: string
    sql: ${TABLE}.last_name ;;
    group_label: "target"
    label: "target.user.managers.last_name"
    view_label: "UDM"
    description: "Last name of the user (e.g. \"Locke\")."
  }  # dimension last_name

  dimension: personal_address {
    hidden: yes
  }  # dimension personal_address

  dimension: personal_address__city {
    type: string
    sql: ${TABLE}.personal_address.city ;;
    group_label: "target"
    label: "target.user.managers.personal_address.city"
    view_label: "UDM"
    description: "The city."
  }  # dimension personal_address__city

  dimension: personal_address__country_or_region {
    type: string
    sql: ${TABLE}.personal_address.country_or_region ;;
    group_label: "target"
    label: "target.user.managers.personal_address.country_or_region"
    view_label: "UDM"
    description: "The country or region."
  }  # dimension personal_address__country_or_region

  dimension: personal_address__name {
    type: string
    sql: ${TABLE}.personal_address.name ;;
    group_label: "target"
    label: "target.user.managers.personal_address.name"
    view_label: "UDM"
    description: "Custom location name (e.g. building or site name like \"London Office\"). For cloud environments, this is the region (e.g. \"us-west2\")."
  }  # dimension personal_address__name

  dimension: personal_address__state {
    type: string
    sql: ${TABLE}.personal_address.state ;;
    group_label: "target"
    label: "target.user.managers.personal_address.state"
    view_label: "UDM"
    description: "The state."
  }  # dimension personal_address__state

  dimension: phone_numbers {
    hidden: yes
  }  # dimension phone_numbers

  dimension: product_object_id {
    type: string
    sql: ${TABLE}.product_object_id ;;
    group_label: "target"
    label: "target.user.managers.product_object_id"
    view_label: "UDM"
    description: "A vendor-specific identifier to uniquely identify the entity (e.g. a GUID, LDAP, OID, or similar)."
  }  # dimension product_object_id

  dimension: title {
    type: string
    sql: ${TABLE}.title ;;
    group_label: "target"
    label: "target.user.managers.title"
    view_label: "UDM"
    description: "User job title."
  }  # dimension title

  dimension: user_display_name {
    type: string
    sql: ${TABLE}.user_display_name ;;
    group_label: "target"
    label: "target.user.managers.user_display_name"
    view_label: "UDM"
    description: "The display name of the user (e.g. \"John Locke\")."
  }  # dimension user_display_name

  dimension: userid {
    type: string
    sql: ${TABLE}.userid ;;
    group_label: "target"
    label: "target.user.managers.userid"
    view_label: "UDM"
    description: "The ID of the user."
  }  # dimension userid

  dimension: windows_sid {
    type: string
    sql: ${TABLE}.windows_sid ;;
    group_label: "target"
    label: "target.user.managers.windows_sid"
    view_label: "UDM"
    description: "The Microsoft Windows SID of the user."
  }  # dimension windows_sid

}  # view udm_events__target__user__managers

view: udm_events__target__user__phone_numbers {
  dimension: udm_events__target__user__phone_numbers {
    type: string
    sql: ${TABLE} ;;
    group_label: "target"
    label: "target.user.phone_numbers"
    view_label: "UDM"
    description: "Phone numbers for the user."
  }  # dimension udm_events__target__user__phone_numbers
}  # view udm_events__target__user__phone_numbers

view: udm_events__target__user__time_off {
  dimension: description {
    type: string
    sql: ${TABLE}.description ;;
    group_label: "target"
    label: "target.user.time_off.description"
    view_label: "UDM"
    description: "Description of the leave if available (e.g. 'Vacation')."
  }  # dimension description

  dimension_group: target__user__time_off__interval {
    type: duration
    intervals: [ second, minute, hour ]
    sql_start: TIMESTAMP_MICROS(IFNULL(${TABLE}.interval.start_time.seconds,0) * 1000000 + CAST((IFNULL(${TABLE}.interval.start_time.nanos,0) / 1000) as INT64)) ;;
    sql_end: TIMESTAMP_MICROS(IFNULL(${TABLE}.interval.end_time.seconds,0) * 1000000 + CAST((IFNULL(${TABLE}.interval.end_time.nanos,0) / 1000) as INT64)) ;;
    group_label: "target"
    label: "target.user.time_off.interval"
    view_label: "UDM"
    description: "Interval duration of the leave."
  }  # dimension target__user__time_off__interval

}  # view udm_events__target__user__time_off

explore: udm_events {
  label: "UDM Events (Deprecated)"

  hidden: yes
  
  conditionally_filter: {
    filters: {
      field: udm_events.time_filter
      value: "last 24 hours"
    }
  }

  fields: [ALL_FIELDS*,]
  sql_always_where: {% condition udm_events.time_filter %} hour_time_bucket {% endcondition %}
    AND {% condition udm_events.time_filter %} ${metadata__event_timestamp_raw} {% endcondition %};;

  join: udm_events__about {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.about}) as udm_events__about ;;
    view_label: "UDM"
  }  # join udm_events__about

  join: udm_events__about__asset__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.asset}.attribute.labels) as udm_events__about__asset__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__about__asset__attribute__labels

  join: udm_events__about__asset__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.asset}.attribute.permissions) as udm_events__about__asset__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__about__asset__attribute__permissions

  join: udm_events__about__asset__hardware {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.asset}.hardware) as udm_events__about__asset__hardware ;;
    view_label: "UDM"
  }  # join udm_events__about__asset__hardware

  join: udm_events__about__asset__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.asset}.ip) as udm_events__about__asset__ip ;;
    view_label: "UDM"
  }  # join udm_events__about__asset__ip

  join: udm_events__about__asset__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.asset}.labels) as udm_events__about__asset__labels ;;
    view_label: "UDM"
  }  # join udm_events__about__asset__labels

  join: udm_events__about__asset__vulnerabilities {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.asset}.vulnerabilities) as udm_events__about__asset__vulnerabilities ;;
    view_label: "UDM"
  }  # join udm_events__about__asset__vulnerabilities

  join: udm_events__about__file__capabilities_tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.file}.capabilities_tags) as udm_events__about__file__capabilities_tags ;;
    view_label: "UDM"
  }  # join udm_events__about__file__capabilities_tags

  join: udm_events__about__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.file}.names) as udm_events__about__file__names ;;
    view_label: "UDM"
  }  # join udm_events__about__file__names

  join: udm_events__about__investigation__comments {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.investigation}.comments) as udm_events__about__investigation__comments ;;
    view_label: "UDM"
  }  # join udm_events__about__investigation__comments

  join: udm_events__about__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.ip}) as udm_events__about__ip ;;
    view_label: "UDM"
  }  # join udm_events__about__ip

  join: udm_events__about__ip_geo_artifact {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.ip_geo_artifact}) as udm_events__about__ip_geo_artifact ;;
    view_label: "UDM"
  }  # join udm_events__about__ip_geo_artifact

  join: udm_events__about__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.labels}) as udm_events__about__labels ;;
    view_label: "UDM"
  }  # join udm_events__about__labels

  join: udm_events__about__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.mac}) as udm_events__about__mac ;;
    view_label: "UDM"
  }  # join udm_events__about__mac

  join: udm_events__about__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.nat_ip}) as udm_events__about__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__about__nat_ip

  join: udm_events__about__resource__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.resource}.attribute.labels) as udm_events__about__resource__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__about__resource__attribute__labels

  join: udm_events__about__resource__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.resource}.attribute.permissions) as udm_events__about__resource__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__about__resource__attribute__permissions

  join: udm_events__about__resource_ancestors {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.resource_ancestors}) as udm_events__about__resource_ancestors ;;
    view_label: "UDM"
  }  # join udm_events__about__resource_ancestors

  join: udm_events__about__resource_ancestors__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about__resource_ancestors.attribute}.labels) as udm_events__about__resource_ancestors__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__about__resource_ancestors__attribute__labels

  join: udm_events__about__user__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.user}.attribute.labels) as udm_events__about__user__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__about__user__attribute__labels

  join: udm_events__about__user__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.user}.attribute.permissions) as udm_events__about__user__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__about__user__attribute__permissions

  join: udm_events__about__user__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__about.user}.attribute.roles) as udm_events__about__user__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__about__user__attribute__roles

  join: udm_events__about__user__department {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.user}.department) as udm_events__about__user__department ;;
    view_label: "UDM"
  }  # join udm_events__about__user__department

  join: udm_events__about__user__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.user}.email_addresses) as udm_events__about__user__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__about__user__email_addresses

  join: udm_events__about__user__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__about.user}.group_identifiers) as udm_events__about__user__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__about__user__group_identifiers

  join: udm_events__additional__fields {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.additional}.fields) as udm_events__additional__fields ;;
    view_label: "UDM"
  }  # join udm_events__additional__fields

  join: udm_events__additional__fields__value__list_value__values {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__additional__fields.value}.list_value.values) as udm_events__additional__fields__value__list_value__values ;;
    view_label: "UDM"
  }  # join udm_events__additional__fields__value__list_value__values

  join: udm_events__additional__fields__value__list_value__values__struct_value__fields {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__additional__fields__value__list_value__values.struct_value}.fields) as udm_events__additional__fields__value__list_value__values__struct_value__fields ;;
    view_label: "UDM"
  }  # join udm_events__additional__fields__value__list_value__values__struct_value__fields

  join: udm_events__additional__fields__value__struct_value__fields {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__additional__fields.value}.struct_value.fields) as udm_events__additional__fields__value__struct_value__fields ;;
    view_label: "UDM"
  }  # join udm_events__additional__fields__value__struct_value__fields

  join: udm_events__extensions__auth__mechanism {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.extensions}.auth.mechanism) as udm_events__extensions__auth__mechanism ;;
    view_label: "UDM"
  }  # join udm_events__extensions__auth__mechanism

  join: udm_events__extensions__auth__mechanism_enum_name {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.extensions}.auth.mechanism) as udm_events__extensions__auth__mechanism_enum_name ;;
    view_label: "UDM"
  }  # join udm_events__extensions__auth__mechanism_enum_name

  join: udm_events__extensions__vulns__vulnerabilities {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.extensions}.vulns.vulnerabilities) as udm_events__extensions__vulns__vulnerabilities ;;
    view_label: "UDM"
  }  # join udm_events__extensions__vulns__vulnerabilities

  join: udm_events__extensions__vulns__vulnerabilities__about__asset__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__extensions__vulns__vulnerabilities.about}.asset.ip) as udm_events__extensions__vulns__vulnerabilities__about__asset__ip ;;
    view_label: "UDM"
  }  # join udm_events__extensions__vulns__vulnerabilities__about__asset__ip

  join: udm_events__extensions__vulns__vulnerabilities__about__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__extensions__vulns__vulnerabilities.about}.labels) as udm_events__extensions__vulns__vulnerabilities__about__labels ;;
    view_label: "UDM"
  }  # join udm_events__extensions__vulns__vulnerabilities__about__labels

  join: udm_events__extensions__vulns__vulnerabilities__about__resource__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__extensions__vulns__vulnerabilities.about}.resource.attribute.labels) as udm_events__extensions__vulns__vulnerabilities__about__resource__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__extensions__vulns__vulnerabilities__about__resource__attribute__labels

  join: udm_events__intermediary {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.intermediary}) as udm_events__intermediary ;;
    view_label: "UDM"
  }  # join udm_events__intermediary

  join: udm_events__intermediary__asset__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.asset}.attribute.labels) as udm_events__intermediary__asset__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__asset__attribute__labels

  join: udm_events__intermediary__asset__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.asset}.attribute.roles) as udm_events__intermediary__asset__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__asset__attribute__roles

  join: udm_events__intermediary__asset__hardware {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.asset}.hardware) as udm_events__intermediary__asset__hardware ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__asset__hardware

  join: udm_events__intermediary__asset__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.asset}.ip) as udm_events__intermediary__asset__ip ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__asset__ip

  join: udm_events__intermediary__asset__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.asset}.labels) as udm_events__intermediary__asset__labels ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__asset__labels

  join: udm_events__intermediary__asset__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.asset}.mac) as udm_events__intermediary__asset__mac ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__asset__mac

  join: udm_events__intermediary__asset__software {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.asset}.software) as udm_events__intermediary__asset__software ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__asset__software

  join: udm_events__intermediary__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.ip}) as udm_events__intermediary__ip ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__ip

  join: udm_events__intermediary__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.labels}) as udm_events__intermediary__labels ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__labels

  join: udm_events__intermediary__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.mac}) as udm_events__intermediary__mac ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__mac

  join: udm_events__intermediary__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.nat_ip}) as udm_events__intermediary__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__nat_ip

  join: udm_events__intermediary__process__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.process}.file.names) as udm_events__intermediary__process__file__names ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__process__file__names

  join: udm_events__intermediary__resource__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.resource}.attribute.labels) as udm_events__intermediary__resource__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__resource__attribute__labels

  join: udm_events__intermediary__user__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.user}.attribute.labels) as udm_events__intermediary__user__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__user__attribute__labels

  join: udm_events__intermediary__user__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.user}.email_addresses) as udm_events__intermediary__user__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__user__email_addresses

  join: udm_events__intermediary__user__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__intermediary.user}.group_identifiers) as udm_events__intermediary__user__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__intermediary__user__group_identifiers

  join: udm_events__metadata__base_labels__ingestion_kv_labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.base_labels.ingestion_kv_labels) as udm_events__metadata__base_labels__ingestion_kv_labels ;;
    view_label: "UDM"
  }  # join udm_events__metadata__base_labels__ingestion_kv_labels

  join: udm_events__metadata__base_labels__log_types {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.base_labels.log_types) as udm_events__metadata__base_labels__log_types ;;
    view_label: "UDM"
  }  # join udm_events__metadata__base_labels__log_types

  join: udm_events__metadata__base_labels__namespaces {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.base_labels.namespaces) as udm_events__metadata__base_labels__namespaces ;;
    view_label: "UDM"
  }  # join udm_events__metadata__base_labels__namespaces

  join: udm_events__metadata__enrichment_labels__ingestion_kv_labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.enrichment_labels.ingestion_kv_labels) as udm_events__metadata__enrichment_labels__ingestion_kv_labels ;;
    view_label: "UDM"
  }  # join udm_events__metadata__enrichment_labels__ingestion_kv_labels

  join: udm_events__metadata__enrichment_labels__log_types {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.enrichment_labels.log_types) as udm_events__metadata__enrichment_labels__log_types ;;
    view_label: "UDM"
  }  # join udm_events__metadata__enrichment_labels__log_types

  join: udm_events__metadata__enrichment_labels__namespaces {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.enrichment_labels.namespaces) as udm_events__metadata__enrichment_labels__namespaces ;;
    view_label: "UDM"
  }  # join udm_events__metadata__enrichment_labels__namespaces

  join: udm_events__metadata__ingestion_labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.ingestion_labels) as udm_events__metadata__ingestion_labels ;;
    view_label: "UDM"
  }  # join udm_events__metadata__ingestion_labels

  join: udm_events__metadata__tags__data_tap_config_name {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.tags.data_tap_config_name) as udm_events__metadata__tags__data_tap_config_name ;;
    view_label: "UDM"
  }  # join udm_events__metadata__tags__data_tap_config_name

  join: udm_events__metadata__tags__tenant_id {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.metadata}.tags.tenant_id) as udm_events__metadata__tags__tenant_id ;;
    view_label: "UDM"
  }  # join udm_events__metadata__tags__tenant_id

  join: udm_events__network__dhcp__options {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.network}.dhcp.options) as udm_events__network__dhcp__options ;;
    view_label: "UDM"
  }  # join udm_events__network__dhcp__options

  join: udm_events__network__dns__additional {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.network}.dns.additional) as udm_events__network__dns__additional ;;
    view_label: "UDM"
  }  # join udm_events__network__dns__additional

  join: udm_events__network__dns__answers {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.network}.dns.answers) as udm_events__network__dns__answers ;;
    view_label: "UDM"
  }  # join udm_events__network__dns__answers

  join: udm_events__network__dns__authority {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.network}.dns.authority) as udm_events__network__dns__authority ;;
    view_label: "UDM"
  }  # join udm_events__network__dns__authority

  join: udm_events__network__dns__questions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.network}.dns.questions) as udm_events__network__dns__questions ;;
    view_label: "UDM"
  }  # join udm_events__network__dns__questions

  join: udm_events__network__email__bcc {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.network}.email.bcc) as udm_events__network__email__bcc ;;
    view_label: "UDM"
  }  # join udm_events__network__email__bcc

  join: udm_events__network__email__cc {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.network}.email.cc) as udm_events__network__email__cc ;;
    view_label: "UDM"
  }  # join udm_events__network__email__cc

  join: udm_events__network__email__subject {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.network}.email.subject) as udm_events__network__email__subject ;;
    view_label: "UDM"
  }  # join udm_events__network__email__subject

  join: udm_events__network__email__to {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.network}.email.to) as udm_events__network__email__to ;;
    view_label: "UDM"
  }  # join udm_events__network__email__to

  join: udm_events__network__http__parsed_user_agent__annotation {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.network}.http.parsed_user_agent.annotation) as udm_events__network__http__parsed_user_agent__annotation ;;
    view_label: "UDM"
  }  # join udm_events__network__http__parsed_user_agent__annotation

  join: udm_events__network__smtp__rcpt_to {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.network}.smtp.rcpt_to) as udm_events__network__smtp__rcpt_to ;;
    view_label: "UDM"
  }  # join udm_events__network__smtp__rcpt_to

  join: udm_events__network__smtp__server_response {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.network}.smtp.server_response) as udm_events__network__smtp__server_response ;;
    view_label: "UDM"
  }  # join udm_events__network__smtp__server_response

  join: udm_events__network__tls__client__supported_ciphers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.network}.tls.client.supported_ciphers) as udm_events__network__tls__client__supported_ciphers ;;
    view_label: "UDM"
  }  # join udm_events__network__tls__client__supported_ciphers

  join: udm_events__observer__asset__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.observer}.asset.attribute.labels) as udm_events__observer__asset__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__observer__asset__attribute__labels

  join: udm_events__observer__asset__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.observer}.asset.ip) as udm_events__observer__asset__ip ;;
    view_label: "UDM"
  }  # join udm_events__observer__asset__ip

  join: udm_events__observer__asset__software {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.observer}.asset.software) as udm_events__observer__asset__software ;;
    view_label: "UDM"
  }  # join udm_events__observer__asset__software

  join: udm_events__observer__group__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.observer}.group.attribute.permissions) as udm_events__observer__group__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__observer__group__attribute__permissions

  join: udm_events__observer__group__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.observer}.group.attribute.roles) as udm_events__observer__group__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__observer__group__attribute__roles

  join: udm_events__observer__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.observer}.ip) as udm_events__observer__ip ;;
    view_label: "UDM"
  }  # join udm_events__observer__ip

  join: udm_events__observer__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.observer}.labels) as udm_events__observer__labels ;;
    view_label: "UDM"
  }  # join udm_events__observer__labels

  join: udm_events__observer__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.observer}.mac) as udm_events__observer__mac ;;
    view_label: "UDM"
  }  # join udm_events__observer__mac

  join: udm_events__observer__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.observer}.nat_ip) as udm_events__observer__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__observer__nat_ip

  join: udm_events__observer__resource__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.observer}.resource.attribute.labels) as udm_events__observer__resource__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__observer__resource__attribute__labels

  join: udm_events__observer__user__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.observer}.user.attribute.labels) as udm_events__observer__user__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__observer__user__attribute__labels

  join: udm_events__observer__user__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.observer}.user.email_addresses) as udm_events__observer__user__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__observer__user__email_addresses

  join: udm_events__observer__user__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.observer}.user.group_identifiers) as udm_events__observer__user__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__observer__user__group_identifiers

  join: udm_events__principal__asset__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.attribute.labels) as udm_events__principal__asset__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__attribute__labels

  join: udm_events__principal__asset__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.attribute.roles) as udm_events__principal__asset__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__attribute__roles

  join: udm_events__principal__asset__hardware {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.hardware) as udm_events__principal__asset__hardware ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__hardware

  join: udm_events__principal__asset__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.ip) as udm_events__principal__asset__ip ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__ip

  join: udm_events__principal__asset__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.labels) as udm_events__principal__asset__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__labels

  join: udm_events__principal__asset__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.mac) as udm_events__principal__asset__mac ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__mac

  join: udm_events__principal__asset__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.nat_ip) as udm_events__principal__asset__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__nat_ip

  join: udm_events__principal__asset__software {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.software) as udm_events__principal__asset__software ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__software

  join: udm_events__principal__asset__software__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__principal__asset__software.permissions}) as udm_events__principal__asset__software__permissions ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__software__permissions

  join: udm_events__principal__asset__vulnerabilities {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.asset.vulnerabilities) as udm_events__principal__asset__vulnerabilities ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__vulnerabilities

  join: udm_events__principal__asset__vulnerabilities__about__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__principal__asset__vulnerabilities.about}.labels) as udm_events__principal__asset__vulnerabilities__about__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__asset__vulnerabilities__about__labels

  join: udm_events__principal__domain__name_server {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.domain.name_server) as udm_events__principal__domain__name_server ;;
    view_label: "UDM"
  }  # join udm_events__principal__domain__name_server

  join: udm_events__principal__domain__tech__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.domain.tech.group_identifiers) as udm_events__principal__domain__tech__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__principal__domain__tech__group_identifiers

  join: udm_events__principal__group__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.group.attribute.labels) as udm_events__principal__group__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__group__attribute__labels

  join: udm_events__principal__group__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.group.attribute.roles) as udm_events__principal__group__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__principal__group__attribute__roles

  join: udm_events__principal__group__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.group.email_addresses) as udm_events__principal__group__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__principal__group__email_addresses

  join: udm_events__principal__investigation__comments {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.investigation.comments) as udm_events__principal__investigation__comments ;;
    view_label: "UDM"
  }  # join udm_events__principal__investigation__comments

  join: udm_events__principal__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.ip) as udm_events__principal__ip ;;
    view_label: "UDM"
  }  # join udm_events__principal__ip

  join: udm_events__principal__ip_geo_artifact {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.ip_geo_artifact) as udm_events__principal__ip_geo_artifact ;;
    view_label: "UDM"
  }  # join udm_events__principal__ip_geo_artifact

  join: udm_events__principal__ip_location {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.ip_location) as udm_events__principal__ip_location ;;
    view_label: "UDM"
  }  # join udm_events__principal__ip_location

  join: udm_events__principal__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.labels) as udm_events__principal__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__labels

  join: udm_events__principal__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.mac) as udm_events__principal__mac ;;
    view_label: "UDM"
  }  # join udm_events__principal__mac

  join: udm_events__principal__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.nat_ip) as udm_events__principal__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__principal__nat_ip

  join: udm_events__principal__network__dns__additional {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.network.dns.additional) as udm_events__principal__network__dns__additional ;;
    view_label: "UDM"
  }  # join udm_events__principal__network__dns__additional

  join: udm_events__principal__network__dns__questions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.network.dns.questions) as udm_events__principal__network__dns__questions ;;
    view_label: "UDM"
  }  # join udm_events__principal__network__dns__questions

  join: udm_events__principal__process__command_line_history {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.process.command_line_history) as udm_events__principal__process__command_line_history ;;
    view_label: "UDM"
  }  # join udm_events__principal__process__command_line_history

  join: udm_events__principal__process__file__capabilities_tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.process.file.capabilities_tags) as udm_events__principal__process__file__capabilities_tags ;;
    view_label: "UDM"
  }  # join udm_events__principal__process__file__capabilities_tags

  join: udm_events__principal__process__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.process.file.names) as udm_events__principal__process__file__names ;;
    view_label: "UDM"
  }  # join udm_events__principal__process__file__names

  join: udm_events__principal__process__parent_process__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.process.parent_process.file.names) as udm_events__principal__process__parent_process__file__names ;;
    view_label: "UDM"
  }  # join udm_events__principal__process__parent_process__file__names

  join: udm_events__principal__process_ancestors {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.process_ancestors) as udm_events__principal__process_ancestors ;;
    view_label: "UDM"
  }  # join udm_events__principal__process_ancestors

  join: udm_events__principal__resource__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.resource.attribute.labels) as udm_events__principal__resource__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__resource__attribute__labels

  join: udm_events__principal__resource__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.resource.attribute.permissions) as udm_events__principal__resource__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__principal__resource__attribute__permissions

  join: udm_events__principal__resource__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.resource.attribute.roles) as udm_events__principal__resource__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__principal__resource__attribute__roles

  join: udm_events__principal__resource_ancestors {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.resource_ancestors) as udm_events__principal__resource_ancestors ;;
    view_label: "UDM"
  }  # join udm_events__principal__resource_ancestors

  join: udm_events__principal__resource_ancestors__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__principal__resource_ancestors.attribute}.labels) as udm_events__principal__resource_ancestors__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__resource_ancestors__attribute__labels

  join: udm_events__principal__user__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.attribute.labels) as udm_events__principal__user__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__attribute__labels

  join: udm_events__principal__user__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.attribute.permissions) as udm_events__principal__user__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__attribute__permissions

  join: udm_events__principal__user__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.attribute.roles) as udm_events__principal__user__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__attribute__roles

  join: udm_events__principal__user__department {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.department) as udm_events__principal__user__department ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__department

  join: udm_events__principal__user__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.email_addresses) as udm_events__principal__user__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__email_addresses

  join: udm_events__principal__user__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.group_identifiers) as udm_events__principal__user__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__group_identifiers

  join: udm_events__principal__user__managers {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.managers) as udm_events__principal__user__managers ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__managers

  join: udm_events__principal__user__managers__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__principal__user__managers.attribute}.labels) as udm_events__principal__user__managers__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__managers__attribute__labels

  join: udm_events__principal__user__managers__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__principal__user__managers.attribute}.roles) as udm_events__principal__user__managers__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__managers__attribute__roles

  join: udm_events__principal__user__managers__department {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__principal__user__managers.department}) as udm_events__principal__user__managers__department ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__managers__department

  join: udm_events__principal__user__managers__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__principal__user__managers.email_addresses}) as udm_events__principal__user__managers__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__managers__email_addresses

  join: udm_events__principal__user__managers__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__principal__user__managers.group_identifiers}) as udm_events__principal__user__managers__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__managers__group_identifiers

  join: udm_events__principal__user__managers__phone_numbers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__principal__user__managers.phone_numbers}) as udm_events__principal__user__managers__phone_numbers ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__managers__phone_numbers

  join: udm_events__principal__user__phone_numbers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.phone_numbers) as udm_events__principal__user__phone_numbers ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__phone_numbers

  join: udm_events__principal__user__time_off {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.principal}.user.time_off) as udm_events__principal__user__time_off ;;
    view_label: "UDM"
  }  # join udm_events__principal__user__time_off

  join: udm_events__security_result {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.security_result}) as udm_events__security_result ;;
    view_label: "UDM"
  }  # join udm_events__security_result

  join: udm_events__security_result__about__asset__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.asset.attribute.labels) as udm_events__security_result__about__asset__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__asset__attribute__labels

  join: udm_events__security_result__about__asset__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.asset.attribute.permissions) as udm_events__security_result__about__asset__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__asset__attribute__permissions

  join: udm_events__security_result__about__asset__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.asset.ip) as udm_events__security_result__about__asset__ip ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__asset__ip

  join: udm_events__security_result__about__asset__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.asset.labels) as udm_events__security_result__about__asset__labels ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__asset__labels

  join: udm_events__security_result__about__asset__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.asset.mac) as udm_events__security_result__about__asset__mac ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__asset__mac

  join: udm_events__security_result__about__asset__software {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.asset.software) as udm_events__security_result__about__asset__software ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__asset__software

  join: udm_events__security_result__about__asset__software__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result__about__asset__software.permissions}) as udm_events__security_result__about__asset__software__permissions ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__asset__software__permissions

  join: udm_events__security_result__about__asset__vulnerabilities {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.asset.vulnerabilities) as udm_events__security_result__about__asset__vulnerabilities ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__asset__vulnerabilities

  join: udm_events__security_result__about__domain__tech__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.domain.tech.attribute.permissions) as udm_events__security_result__about__domain__tech__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__domain__tech__attribute__permissions

  join: udm_events__security_result__about__file__capabilities_tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.file.capabilities_tags) as udm_events__security_result__about__file__capabilities_tags ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__file__capabilities_tags

  join: udm_events__security_result__about__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.file.names) as udm_events__security_result__about__file__names ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__file__names

  join: udm_events__security_result__about__group__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.group.attribute.labels) as udm_events__security_result__about__group__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__group__attribute__labels

  join: udm_events__security_result__about__investigation__comments {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.investigation.comments) as udm_events__security_result__about__investigation__comments ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__investigation__comments

  join: udm_events__security_result__about__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.ip) as udm_events__security_result__about__ip ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__ip

  join: udm_events__security_result__about__ip_location {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.ip_location) as udm_events__security_result__about__ip_location ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__ip_location

  join: udm_events__security_result__about__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.labels) as udm_events__security_result__about__labels ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__labels

  join: udm_events__security_result__about__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.mac) as udm_events__security_result__about__mac ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__mac

  join: udm_events__security_result__about__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.nat_ip) as udm_events__security_result__about__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__nat_ip

  join: udm_events__security_result__about__process__command_line_history {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.process.command_line_history) as udm_events__security_result__about__process__command_line_history ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__process__command_line_history

  join: udm_events__security_result__about__process__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.process.file.names) as udm_events__security_result__about__process__file__names ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__process__file__names

  join: udm_events__security_result__about__resource__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.resource.attribute.labels) as udm_events__security_result__about__resource__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__resource__attribute__labels

  join: udm_events__security_result__about__resource_ancestors {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.resource_ancestors) as udm_events__security_result__about__resource_ancestors ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__resource_ancestors

  join: udm_events__security_result__about__user__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.user.attribute.labels) as udm_events__security_result__about__user__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__user__attribute__labels

  join: udm_events__security_result__about__user__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.user.attribute.permissions) as udm_events__security_result__about__user__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__user__attribute__permissions

  join: udm_events__security_result__about__user__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.user.attribute.roles) as udm_events__security_result__about__user__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__user__attribute__roles

  join: udm_events__security_result__about__user__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.user.email_addresses) as udm_events__security_result__about__user__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__user__email_addresses

  join: udm_events__security_result__about__user__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.user.group_identifiers) as udm_events__security_result__about__user__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__user__group_identifiers

  join: udm_events__security_result__about__user_management_chain {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.about}.user_management_chain) as udm_events__security_result__about__user_management_chain ;;
    view_label: "UDM"
  }  # join udm_events__security_result__about__user_management_chain

  join: udm_events__security_result__action {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.action}) as udm_events__security_result__action ;;
    view_label: "UDM"
  }  # join udm_events__security_result__action

  join: udm_events__security_result__action_enum_name {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.action}) as udm_events__security_result__action_enum_name ;;
    view_label: "UDM"
  }  # join udm_events__security_result__action_enum_name

  join: udm_events__security_result__associations {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.associations}) as udm_events__security_result__associations ;;
    view_label: "UDM"
  }  # join udm_events__security_result__associations

  join: udm_events__security_result__attack_details__tactics {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.attack_details}.tactics) as udm_events__security_result__attack_details__tactics ;;
    view_label: "UDM"
  }  # join udm_events__security_result__attack_details__tactics

  join: udm_events__security_result__attack_details__techniques {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.attack_details}.techniques) as udm_events__security_result__attack_details__techniques ;;
    view_label: "UDM"
  }  # join udm_events__security_result__attack_details__techniques

  join: udm_events__security_result__category {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.category}) as udm_events__security_result__category ;;
    view_label: "UDM"
  }  # join udm_events__security_result__category

  join: udm_events__security_result__category_enum_name {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.category}) as udm_events__security_result__category_enum_name ;;
    view_label: "UDM"
  }  # join udm_events__security_result__category_enum_name

  join: udm_events__security_result__category_details {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__security_result.category_details}) as udm_events__security_result__category_details ;;
    view_label: "UDM"
  }  # join udm_events__security_result__category_details

  join: udm_events__security_result__detection_fields {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.detection_fields}) as udm_events__security_result__detection_fields ;;
    view_label: "UDM"
  }  # join udm_events__security_result__detection_fields

  join: udm_events__security_result__outcomes {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.outcomes}) as udm_events__security_result__outcomes ;;
    view_label: "UDM"
  }  # join udm_events__security_result__outcomes

  join: udm_events__security_result__rule_labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__security_result.rule_labels}) as udm_events__security_result__rule_labels ;;
    view_label: "UDM"
  }  # join udm_events__security_result__rule_labels

  join: udm_events__src__asset__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.asset.attribute.labels) as udm_events__src__asset__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__attribute__labels

  join: udm_events__src__asset__hardware {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.asset.hardware) as udm_events__src__asset__hardware ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__hardware

  join: udm_events__src__asset__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.asset.ip) as udm_events__src__asset__ip ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__ip

  join: udm_events__src__asset__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.asset.labels) as udm_events__src__asset__labels ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__labels

  join: udm_events__src__asset__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.asset.mac) as udm_events__src__asset__mac ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__mac

  join: udm_events__src__asset__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.asset.nat_ip) as udm_events__src__asset__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__nat_ip

  join: udm_events__src__asset__software {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.asset.software) as udm_events__src__asset__software ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__software

  join: udm_events__src__asset__software__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__src__asset__software.permissions}) as udm_events__src__asset__software__permissions ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__software__permissions

  join: udm_events__src__asset__vulnerabilities {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.asset.vulnerabilities) as udm_events__src__asset__vulnerabilities ;;
    view_label: "UDM"
  }  # join udm_events__src__asset__vulnerabilities

  join: udm_events__src__file__capabilities_tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.capabilities_tags) as udm_events__src__file__capabilities_tags ;;
    view_label: "UDM"
  }  # join udm_events__src__file__capabilities_tags

  join: udm_events__src__file__embedded_domains {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.embedded_domains) as udm_events__src__file__embedded_domains ;;
    view_label: "UDM"
  }  # join udm_events__src__file__embedded_domains

  join: udm_events__src__file__embedded_ips {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.embedded_ips) as udm_events__src__file__embedded_ips ;;
    view_label: "UDM"
  }  # join udm_events__src__file__embedded_ips

  join: udm_events__src__file__embedded_urls {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.embedded_urls) as udm_events__src__file__embedded_urls ;;
    view_label: "UDM"
  }  # join udm_events__src__file__embedded_urls

  join: udm_events__src__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.names) as udm_events__src__file__names ;;
    view_label: "UDM"
  }  # join udm_events__src__file__names

  join: udm_events__src__file__pe_file__imports {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.pe_file.imports) as udm_events__src__file__pe_file__imports ;;
    view_label: "UDM"
  }  # join udm_events__src__file__pe_file__imports

  join: udm_events__src__file__pe_file__imports__functions {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__src__file__pe_file__imports.functions}) as udm_events__src__file__pe_file__imports__functions ;;
    view_label: "UDM"
  }  # join udm_events__src__file__pe_file__imports__functions

  join: udm_events__src__file__pe_file__resource {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.pe_file.resource) as udm_events__src__file__pe_file__resource ;;
    view_label: "UDM"
  }  # join udm_events__src__file__pe_file__resource

  join: udm_events__src__file__pe_file__resources_language_count_str {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.pe_file.resources_language_count_str) as udm_events__src__file__pe_file__resources_language_count_str ;;
    view_label: "UDM"
  }  # join udm_events__src__file__pe_file__resources_language_count_str

  join: udm_events__src__file__pe_file__resources_type_count_str {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.pe_file.resources_type_count_str) as udm_events__src__file__pe_file__resources_type_count_str ;;
    view_label: "UDM"
  }  # join udm_events__src__file__pe_file__resources_type_count_str

  join: udm_events__src__file__pe_file__section {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.pe_file.section) as udm_events__src__file__pe_file__section ;;
    view_label: "UDM"
  }  # join udm_events__src__file__pe_file__section

  join: udm_events__src__file__signature_info__sigcheck__signers {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.signature_info.sigcheck.signers) as udm_events__src__file__signature_info__sigcheck__signers ;;
    view_label: "UDM"
  }  # join udm_events__src__file__signature_info__sigcheck__signers

  join: udm_events__src__file__signature_info__sigcheck__x509 {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.signature_info.sigcheck.x509) as udm_events__src__file__signature_info__sigcheck__x509 ;;
    view_label: "UDM"
  }  # join udm_events__src__file__signature_info__sigcheck__x509

  join: udm_events__src__file__tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.file.tags) as udm_events__src__file__tags ;;
    view_label: "UDM"
  }  # join udm_events__src__file__tags

  join: udm_events__src__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.ip) as udm_events__src__ip ;;
    view_label: "UDM"
  }  # join udm_events__src__ip

  join: udm_events__src__ip_geo_artifact {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.ip_geo_artifact) as udm_events__src__ip_geo_artifact ;;
    view_label: "UDM"
  }  # join udm_events__src__ip_geo_artifact

  join: udm_events__src__ip_location {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.ip_location) as udm_events__src__ip_location ;;
    view_label: "UDM"
  }  # join udm_events__src__ip_location

  join: udm_events__src__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.labels) as udm_events__src__labels ;;
    view_label: "UDM"
  }  # join udm_events__src__labels

  join: udm_events__src__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.mac) as udm_events__src__mac ;;
    view_label: "UDM"
  }  # join udm_events__src__mac

  join: udm_events__src__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.nat_ip) as udm_events__src__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__src__nat_ip

  join: udm_events__src__process__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.process.file.names) as udm_events__src__process__file__names ;;
    view_label: "UDM"
  }  # join udm_events__src__process__file__names

  join: udm_events__src__resource__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.resource.attribute.labels) as udm_events__src__resource__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__src__resource__attribute__labels

  join: udm_events__src__resource__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.resource.attribute.permissions) as udm_events__src__resource__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__src__resource__attribute__permissions

  join: udm_events__src__resource_ancestors {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.resource_ancestors) as udm_events__src__resource_ancestors ;;
    view_label: "UDM"
  }  # join udm_events__src__resource_ancestors

  join: udm_events__src__resource_ancestors__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__src__resource_ancestors.attribute}.labels) as udm_events__src__resource_ancestors__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__src__resource_ancestors__attribute__labels

  join: udm_events__src__user__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.user.attribute.labels) as udm_events__src__user__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__src__user__attribute__labels

  join: udm_events__src__user__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.user.attribute.roles) as udm_events__src__user__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__src__user__attribute__roles

  join: udm_events__src__user__department {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.user.department) as udm_events__src__user__department ;;
    view_label: "UDM"
  }  # join udm_events__src__user__department

  join: udm_events__src__user__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.user.email_addresses) as udm_events__src__user__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__src__user__email_addresses

  join: udm_events__src__user__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.user.group_identifiers) as udm_events__src__user__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__src__user__group_identifiers

  join: udm_events__src__user__managers {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.user.managers) as udm_events__src__user__managers ;;
    view_label: "UDM"
  }  # join udm_events__src__user__managers

  join: udm_events__src__user__managers__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__src__user__managers.attribute}.labels) as udm_events__src__user__managers__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__src__user__managers__attribute__labels

  join: udm_events__src__user__managers__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__src__user__managers.attribute}.roles) as udm_events__src__user__managers__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__src__user__managers__attribute__roles

  join: udm_events__src__user__managers__department {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__src__user__managers.department}) as udm_events__src__user__managers__department ;;
    view_label: "UDM"
  }  # join udm_events__src__user__managers__department

  join: udm_events__src__user__managers__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__src__user__managers.email_addresses}) as udm_events__src__user__managers__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__src__user__managers__email_addresses

  join: udm_events__src__user__managers__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__src__user__managers.group_identifiers}) as udm_events__src__user__managers__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__src__user__managers__group_identifiers

  join: udm_events__src__user__managers__phone_numbers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__src__user__managers.phone_numbers}) as udm_events__src__user__managers__phone_numbers ;;
    view_label: "UDM"
  }  # join udm_events__src__user__managers__phone_numbers

  join: udm_events__src__user__phone_numbers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.src}.user.phone_numbers) as udm_events__src__user__phone_numbers ;;
    view_label: "UDM"
  }  # join udm_events__src__user__phone_numbers

  join: udm_events__src__user__time_off {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.src}.user.time_off) as udm_events__src__user__time_off ;;
    view_label: "UDM"
  }  # join udm_events__src__user__time_off

  join: udm_events__target__asset__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.attribute.labels) as udm_events__target__asset__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__attribute__labels

  join: udm_events__target__asset__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.attribute.permissions) as udm_events__target__asset__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__attribute__permissions

  join: udm_events__target__asset__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.attribute.roles) as udm_events__target__asset__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__attribute__roles

  join: udm_events__target__asset__hardware {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.hardware) as udm_events__target__asset__hardware ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__hardware

  join: udm_events__target__asset__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.ip) as udm_events__target__asset__ip ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__ip

  join: udm_events__target__asset__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.labels) as udm_events__target__asset__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__labels

  join: udm_events__target__asset__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.mac) as udm_events__target__asset__mac ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__mac

  join: udm_events__target__asset__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.nat_ip) as udm_events__target__asset__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__nat_ip

  join: udm_events__target__asset__software {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.software) as udm_events__target__asset__software ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__software

  join: udm_events__target__asset__software__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__target__asset__software.permissions}) as udm_events__target__asset__software__permissions ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__software__permissions

  join: udm_events__target__asset__vulnerabilities {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.asset.vulnerabilities) as udm_events__target__asset__vulnerabilities ;;
    view_label: "UDM"
  }  # join udm_events__target__asset__vulnerabilities

  join: udm_events__target__cloud__project__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.cloud.project.attribute.labels) as udm_events__target__cloud__project__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__cloud__project__attribute__labels

  join: udm_events__target__domain__name_server {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.domain.name_server) as udm_events__target__domain__name_server ;;
    view_label: "UDM"
  }  # join udm_events__target__domain__name_server

  join: udm_events__target__file__capabilities_tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.capabilities_tags) as udm_events__target__file__capabilities_tags ;;
    view_label: "UDM"
  }  # join udm_events__target__file__capabilities_tags

  join: udm_events__target__file__embedded_domains {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.embedded_domains) as udm_events__target__file__embedded_domains ;;
    view_label: "UDM"
  }  # join udm_events__target__file__embedded_domains

  join: udm_events__target__file__embedded_ips {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.embedded_ips) as udm_events__target__file__embedded_ips ;;
    view_label: "UDM"
  }  # join udm_events__target__file__embedded_ips

  join: udm_events__target__file__embedded_urls {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.embedded_urls) as udm_events__target__file__embedded_urls ;;
    view_label: "UDM"
  }  # join udm_events__target__file__embedded_urls

  join: udm_events__target__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.names) as udm_events__target__file__names ;;
    view_label: "UDM"
  }  # join udm_events__target__file__names

  join: udm_events__target__file__pe_file__imports {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.pe_file.imports) as udm_events__target__file__pe_file__imports ;;
    view_label: "UDM"
  }  # join udm_events__target__file__pe_file__imports

  join: udm_events__target__file__pe_file__imports__functions {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__target__file__pe_file__imports.functions}) as udm_events__target__file__pe_file__imports__functions ;;
    view_label: "UDM"
  }  # join udm_events__target__file__pe_file__imports__functions

  join: udm_events__target__file__pe_file__resource {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.pe_file.resource) as udm_events__target__file__pe_file__resource ;;
    view_label: "UDM"
  }  # join udm_events__target__file__pe_file__resource

  join: udm_events__target__file__pe_file__resources_language_count_str {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.pe_file.resources_language_count_str) as udm_events__target__file__pe_file__resources_language_count_str ;;
    view_label: "UDM"
  }  # join udm_events__target__file__pe_file__resources_language_count_str

  join: udm_events__target__file__pe_file__resources_type_count_str {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.pe_file.resources_type_count_str) as udm_events__target__file__pe_file__resources_type_count_str ;;
    view_label: "UDM"
  }  # join udm_events__target__file__pe_file__resources_type_count_str

  join: udm_events__target__file__pe_file__section {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.pe_file.section) as udm_events__target__file__pe_file__section ;;
    view_label: "UDM"
  }  # join udm_events__target__file__pe_file__section

  join: udm_events__target__file__signature_info__sigcheck__signers {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.signature_info.sigcheck.signers) as udm_events__target__file__signature_info__sigcheck__signers ;;
    view_label: "UDM"
  }  # join udm_events__target__file__signature_info__sigcheck__signers

  join: udm_events__target__file__signature_info__sigcheck__x509 {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.signature_info.sigcheck.x509) as udm_events__target__file__signature_info__sigcheck__x509 ;;
    view_label: "UDM"
  }  # join udm_events__target__file__signature_info__sigcheck__x509

  join: udm_events__target__file__tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.file.tags) as udm_events__target__file__tags ;;
    view_label: "UDM"
  }  # join udm_events__target__file__tags

  join: udm_events__target__group__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.group.attribute.labels) as udm_events__target__group__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__group__attribute__labels

  join: udm_events__target__group__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.group.attribute.permissions) as udm_events__target__group__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__target__group__attribute__permissions

  join: udm_events__target__group__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.group.attribute.roles) as udm_events__target__group__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__target__group__attribute__roles

  join: udm_events__target__group__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.group.email_addresses) as udm_events__target__group__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__target__group__email_addresses

  join: udm_events__target__investigation__comments {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.investigation.comments) as udm_events__target__investigation__comments ;;
    view_label: "UDM"
  }  # join udm_events__target__investigation__comments

  join: udm_events__target__ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.ip) as udm_events__target__ip ;;
    view_label: "UDM"
  }  # join udm_events__target__ip

  join: udm_events__target__ip_geo_artifact {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.ip_geo_artifact) as udm_events__target__ip_geo_artifact ;;
    view_label: "UDM"
  }  # join udm_events__target__ip_geo_artifact

  join: udm_events__target__ip_location {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.ip_location) as udm_events__target__ip_location ;;
    view_label: "UDM"
  }  # join udm_events__target__ip_location

  join: udm_events__target__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.labels) as udm_events__target__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__labels

  join: udm_events__target__mac {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.mac) as udm_events__target__mac ;;
    view_label: "UDM"
  }  # join udm_events__target__mac

  join: udm_events__target__nat_ip {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.nat_ip) as udm_events__target__nat_ip ;;
    view_label: "UDM"
  }  # join udm_events__target__nat_ip

  join: udm_events__target__process__command_line_history {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.process.command_line_history) as udm_events__target__process__command_line_history ;;
    view_label: "UDM"
  }  # join udm_events__target__process__command_line_history

  join: udm_events__target__process__file__capabilities_tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.process.file.capabilities_tags) as udm_events__target__process__file__capabilities_tags ;;
    view_label: "UDM"
  }  # join udm_events__target__process__file__capabilities_tags

  join: udm_events__target__process__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.process.file.names) as udm_events__target__process__file__names ;;
    view_label: "UDM"
  }  # join udm_events__target__process__file__names

  join: udm_events__target__process__file__pe_file__signature_info__signer {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.process.file.pe_file.signature_info.signer) as udm_events__target__process__file__pe_file__signature_info__signer ;;
    view_label: "UDM"
  }  # join udm_events__target__process__file__pe_file__signature_info__signer

  join: udm_events__target__process__file__tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.process.file.tags) as udm_events__target__process__file__tags ;;
    view_label: "UDM"
  }  # join udm_events__target__process__file__tags

  join: udm_events__target__process__parent_process__file__capabilities_tags {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.process.parent_process.file.capabilities_tags) as udm_events__target__process__parent_process__file__capabilities_tags ;;
    view_label: "UDM"
  }  # join udm_events__target__process__parent_process__file__capabilities_tags

  join: udm_events__target__process__parent_process__file__names {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.process.parent_process.file.names) as udm_events__target__process__parent_process__file__names ;;
    view_label: "UDM"
  }  # join udm_events__target__process__parent_process__file__names

  join: udm_events__target__process_ancestors {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.process_ancestors) as udm_events__target__process_ancestors ;;
    view_label: "UDM"
  }  # join udm_events__target__process_ancestors

  join: udm_events__target__resource__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.resource.attribute.labels) as udm_events__target__resource__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__resource__attribute__labels

  join: udm_events__target__resource__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.resource.attribute.permissions) as udm_events__target__resource__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__target__resource__attribute__permissions

  join: udm_events__target__resource__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.resource.attribute.roles) as udm_events__target__resource__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__target__resource__attribute__roles

  join: udm_events__target__resource_ancestors {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.resource_ancestors) as udm_events__target__resource_ancestors ;;
    view_label: "UDM"
  }  # join udm_events__target__resource_ancestors

  join: udm_events__target__resource_ancestors__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__target__resource_ancestors.attribute}.labels) as udm_events__target__resource_ancestors__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__resource_ancestors__attribute__labels

  join: udm_events__target__resource_ancestors__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__target__resource_ancestors.attribute}.permissions) as udm_events__target__resource_ancestors__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__target__resource_ancestors__attribute__permissions

  join: udm_events__target__user__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.attribute.labels) as udm_events__target__user__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__user__attribute__labels

  join: udm_events__target__user__attribute__permissions {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.attribute.permissions) as udm_events__target__user__attribute__permissions ;;
    view_label: "UDM"
  }  # join udm_events__target__user__attribute__permissions

  join: udm_events__target__user__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.attribute.roles) as udm_events__target__user__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__target__user__attribute__roles

  join: udm_events__target__user__department {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.department) as udm_events__target__user__department ;;
    view_label: "UDM"
  }  # join udm_events__target__user__department

  join: udm_events__target__user__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.email_addresses) as udm_events__target__user__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__target__user__email_addresses

  join: udm_events__target__user__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.group_identifiers) as udm_events__target__user__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__target__user__group_identifiers

  join: udm_events__target__user__managers {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.managers) as udm_events__target__user__managers ;;
    view_label: "UDM"
  }  # join udm_events__target__user__managers

  join: udm_events__target__user__managers__attribute__labels {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__target__user__managers.attribute}.labels) as udm_events__target__user__managers__attribute__labels ;;
    view_label: "UDM"
  }  # join udm_events__target__user__managers__attribute__labels

  join: udm_events__target__user__managers__attribute__roles {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events__target__user__managers.attribute}.roles) as udm_events__target__user__managers__attribute__roles ;;
    view_label: "UDM"
  }  # join udm_events__target__user__managers__attribute__roles

  join: udm_events__target__user__managers__department {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__target__user__managers.department}) as udm_events__target__user__managers__department ;;
    view_label: "UDM"
  }  # join udm_events__target__user__managers__department

  join: udm_events__target__user__managers__email_addresses {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__target__user__managers.email_addresses}) as udm_events__target__user__managers__email_addresses ;;
    view_label: "UDM"
  }  # join udm_events__target__user__managers__email_addresses

  join: udm_events__target__user__managers__group_identifiers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__target__user__managers.group_identifiers}) as udm_events__target__user__managers__group_identifiers ;;
    view_label: "UDM"
  }  # join udm_events__target__user__managers__group_identifiers

  join: udm_events__target__user__managers__phone_numbers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events__target__user__managers.phone_numbers}) as udm_events__target__user__managers__phone_numbers ;;
    view_label: "UDM"
  }  # join udm_events__target__user__managers__phone_numbers

  join: udm_events__target__user__phone_numbers {
    relationship: one_to_one
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.phone_numbers) as udm_events__target__user__phone_numbers ;;
    view_label: "UDM"
  }  # join udm_events__target__user__phone_numbers

  join: udm_events__target__user__time_off {
    relationship: one_to_many
    sql: LEFT JOIN UNNEST(${udm_events.target}.user.time_off) as udm_events__target__user__time_off ;;
    view_label: "UDM"
  }  # join udm_events__target__user__time_off

}  # explore udm_events

